{"version":3,"sources":["reportWebVitals.ts","store/storeHooks.ts","components/structure/ContentContainer.tsx","theme/themeConstants.ts","constants/constantAddresses.ts","services/lendingNetworksService/lendingNetworksParams.ts","components/header/Header.tsx","theme/commonClasses.ts","components/panel/Panel.tsx","components/icons/TokenIcon.tsx","components/displayCalculations/displayCalculations.ts","pages/LendingNetworkPage/MarketsTab/markets/AssetPanelRow.tsx","pages/LendingNetworkPage/MarketsTab/markets/MarketsPanel.tsx","pages/LendingNetworkPage/MarketsTab/markets/MarketsSection.tsx","components/AnimatedNumberText/AnimatedNumberText.tsx","components/balances/BalanceHeadline.tsx","components/completionCircle/CompletionCircle.tsx","components/balances/DualCompletionCircle.tsx","pages/LendingNetworkPage/MarketsTab/positionOverview/PositionNetApy.tsx","components/structure/hero/HeroBalancesContainer.tsx","pages/LendingNetworkPage/MarketsTab/positionOverview/PositionTotalBalances.tsx","components/structure/hero/Hero.tsx","components/structure/hero/HeroContentContainer.tsx","pages/LendingNetworkPage/MarketsTab/positionOverview/BorrowLimitBar.tsx","pages/LendingNetworkPage/MarketsTab/positionOverview/PositionOverview.tsx","pages/LendingNetworkPage/MarketsTab/MainLendingNetworkTab.tsx","components/modals/MarketInteractionModal/base/ModalActionButton.tsx","components/modals/MarketInteractionModal/base/rates/BaseRates.tsx","components/modals/MarketInteractionModal/base/rates/ActionRates.tsx","components/modals/MarketInteractionModal/base/rates/BorrowLimitRates.tsx","components/modals/txWaitingModal/TxWaitingModal.tsx","components/modals/MarketInteractionModal/base/MarketInteractionModal.tsx","constants/ethereumErrorCodes.ts","components/modals/txWaitingModal/txWaitingHooks.ts","components/modals/MarketInteractionModal/marketInteractionModalHooks.ts","components/modals/MarketInteractionModal/base/mainModalMessage/MainModalMessage.tsx","components/modals/MarketInteractionModal/SupplyModal.tsx","components/modals/MarketInteractionModal/BorrowModal.tsx","components/modals/collateralModal/CollateralModal.tsx","components/modals/collateralModal/ConnectedCollateralModal.tsx","components/modals/collateralModal/collateralModalHooks.ts","components/modals/incentiveModal/IncentiveModal.tsx","components/modals/incentiveModal/ConnectedIncentiveModal.tsx","components/modals/incentiveModal/incentiveModalHooks.ts","pages/LendingNetworkPage/networkTab/networkOverview/NetworkNetApy.tsx","pages/LendingNetworkPage/networkTab/networkOverview/NetworkTotalBalances.tsx","constants/assetsDisplay.ts","pages/LendingNetworkPage/networkTab/networkOverview/NetworkSupplyBar.tsx","pages/LendingNetworkPage/networkTab/networkOverview/NetworkOverview.tsx","pages/LendingNetworkPage/networkTab/assetsView/AssetViewCard.tsx","pages/LendingNetworkPage/networkTab/assetsView/AssetsViewSection.tsx","pages/LendingNetworkPage/networkTab/NetworkTab.tsx","pages/LendingNetworkPage/LendingNetworkPage.tsx","pages/AllNetworksPage/NetworkListItem.tsx","pages/AllNetworksPage/NetworksList.tsx","pages/AllNetworksPage/AllNetworksPage.tsx","pages/Main.tsx","App.tsx","theme/Theme.tsx","services/cryptoWalletConnectionService/CryptoWalletConnectionService.ts","configs.ts","services/networkActions.ts","services/lendingNetworksService/LendingNetworksService.ts","services/contractsIntegration/contractsIntegrationUtils.ts","services/contractsIntegration/UniswapAnchoredView/UniswapAnchoredViewService.ts","ethereumConnection/ethereumConnection.ts","services/contractsIntegration/ComptrollerService/ComptrollerService.ts","services/contractsIntegration/erc20Service/Erc20Service.ts","services/contractsIntegration/erc20Service/Erc20BuilderService.ts","services/contractsIntegration/cTokensService/CErc20Service.ts","services/contractsIntegration/cTokensService/CEtherService.ts","services/contractsIntegration/cTokensService/CTokensBuilderService.ts","constants/supportedTokensPerChain.ts","store/CryptoWalletConnectionStore.ts","store/AccountStore.ts","services/lendingNetworksService/ILendingNetworksService.ts","store/multiInstanceStores/SingleCTokenStore.ts","store/multiInstanceStores/SingleLNStore.ts","store/LendingNetworksStore.ts","store/ModalsStore.ts","services/contractsIntegration/CompoundLensService/CompoundLensService.ts","constants/chainConstants.ts","store/SystemStore.ts","store/storesInitialization.ts","AppWrapper.tsx","services/Services.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStores","React","useContext","MobXProviderContext","useCryptoWalletIntegrationStore","cryptoWalletIntegrationStore","useAccountStore","accountStore","useLendingNetworksStore","lendingNetworksStore","useSystemStore","systemStore","useModalsStore","modalsStore","useActiveLendingNetworkStore","activeLNStore","useCTokenStoreByBaseAsset","baseAssetAddress","activeLN","cTokensStores","find","cTokenStore","underlyingAssetAddress","useStyles","makeStyles","theme","contentContainer","margin","paddingRight","paddingLeft","maxWidth","ContentContainer","memo","props","children","rest","classes","className","BRAND_MAIN_COLOR","AFFIRMATIVE_GREEN_COLOR","DEAFFIRMATIVE_RED_COLOR","BACKGROUND_DARK_COLOR","BACKGROUND_LIGHT_COLOR","BACKGROUND_PAGE_CREAM","TEXT_ON_DARK","TEXT_ON_LIGHT","GRAYISH_TEXT","OLA_CYAN","ZERO_ADDRESS","NATIVE_COIN_ASSET_ADDRESS","LENDING_NETWORK_NAMES","LendingNetworksParam","name","lnHomePage","id","unitrollerAddress","maximillionAddress","chainId","assets","symbol","address","decimals","isNativeCoin","distributionAssetParameters","header","padding","backgroundColor","palette","background","default","minHeight","alignedRow","display","flexDirection","alignItems","logoLink","minWidth","height","backgroundRepeat","backgroundSize","transition","justifyContent","transform","logoSpan","width","backgroundImage","process","logoLinkText","fontWeight","color","Color","rgb","primary","main","darken","hex","textDecoration","fontSize","textAlign","borderColor","lnLinkText","actions","headerButtonLike","lighten","border","borderRadius","light","tokenBalance","cursor","letterSpacing","textTransform","account","marginLeft","tokenIcon","iconComp","icon","flexShrink","backgroundPosition","logoLetter","letterO","letterL","letterA","Header","observer","cryptoWalletConnectionStore","activeLn","walletText","isConnectedToWallet","mainAddress","substring","length","hasActiveLn","activeLnName","linkToLnPage","onlyIncentiveTokenBalance","compBalanceUnits","balanceToShow","useMemo","nativeCoinBalance","Grid","container","direction","style","item","xs","sm","to","target","href","fontFamily","Hidden","xsDown","clsx","Fade","in","timeout","onClick","showIncentiveModal","toFixed","toLocaleString","askToConnect","useCommonClasses","mobileHide","breakpoints","down","mobileOnly","up","label","fontStyle","textRight","textCenter","panel","boxShadow","Panel","token","TokenIcon","forwardRef","ref","extraClasses","outerClassName","spanProps","commonClasses","classesForSpan","safeExtraClasses","console","log","amountToSumInScale","amount","displayDecimals","scaleUnit","scaleDivider","units","sumInScale","unitsForDisplay","numericalDisplay","value","parseFloat","undefined","maximumFractionDigits","a","textRransform","asset","flexWrap","borderBottom","borderLeft","list_icon","identity","identity_icon","marginRight","identity_balance","flex","overflow","balance","whiteSpace","textOverflow","balanceSubtitle","marginTop","AssetPanelRow","marketType","assetSummary","onCollateralableChange","onAssetSelected","isCollaterable","borrowApy","borrowApyInPercentages","supplyApy","supplyApyInPercentages","usdCashLiquidity","cTokenCashInUSD","walletBalanceInUnits","accountUnderlyingBalanceInUnits","liquidityUSDInScale","supplyInUnits","accountSupplyInUnits","borrowInUnits","accountBorrowInUnits","isSupply","ApyToDisplay","unitsToDisplay","unitsText","showActionUnits","onCollateralSwitch","useCallback","event","checked","onAssetInteractionRequested","hasBeenInitialized","collateralLiquidityOrLoading","collateralOrLiquidity","Switch","onChange","e","stopPropagation","Skeleton","animation","Typography","component","panelHeader","flexFlow","zeroMargin","assetsList","panelLabels","MarketsPanel","assetsInMarket","userBalancesInUnits","marketsUserIsIn","map","unitsInWallet","interfaceContainer","row","marketsColumn","flexBasis","MarketsSection","useState","error","lnStore","newCollaterableValue","showCollateralModal","onSupplyAssetSelected","cTokenMeta","assetParameters","baseAssetsToCTokenStore","get","assetsParams","assetParam","showSupplyModal","onBorrowAssetSelected","showBorrowModal","symbolsToUnits","standardSumFormat","n","AnimatedNumberText","formatValue","headline","textLeft","supply","borrow","BalanceHeadline","titleText","sum","alignLeft","completionCircle","stroke","transformOrigin","CompletionCircle","dimension","strokeWidth","strokeWidthFactor","strokeColor","fillPercentage","antiClockwise","svgCircleClass","svgContainerClass","centerOffset","radius","circumference","Math","PI","calculationOffset","offSetByDirection","strokeWidthToUSe","stroke-width","fill","r","cx","cy","strokeDashoffset","strokeDasharray","mainContainer","position","left","netApy","descriptionCircle","top","right","bottom","descriptionCircle_active","label_active","headline_inactive","headline_active","supplyCircle","svgContainer","svgCircle","DualCompletionCircle","baseMessage","baseTitle","activeMessage","activeTitle","primaryCompletionPercentage","secondaryCompletionPercentage","hoverTargetRef","useRef","isHovering","useHover","isFocusedWrapper","useBoolean","showActive","title","message","onTouchStart","toggle","netApyWrapper","netApyDescription","netApyDescription_Active","PositionNetApy","totalYearlyChangeUsd","usedBorrowPercentage","isEarning","apyDirectionMessage","earnedOrPaid","netApyStringified","totalYearlyChangeUsdStringified","content","alignMiddle","column","HeroBalancesContainer","balancesSupply","balancesBorrow","mainComponent","smUp","balancesTotal","PositionTotalBalances","borrowBalanceUsd","supplyBalanceUsd","supplyBalancesComponent","borrowBalancesComponent","hero","marginBottom","Hero","heroContentContainer","HeroContentContainer","limitBar","limitBarLabel","progressBarWrapper","progress_bar_green","progress","dark_clear","thin","progress_bar_percent_label","p","float","small","progress_bar_hover_space","BorrowLimitBar","collateralPotentialInUSD","role","aria-valuemin","aria-valuemax","PositionOverview","totalAccountSupplyBalanceUsd","totalAccountBorrowBalanceUsd","netAccountApy","totalAccountYearlyChangeUsd","accountCollateralPotentialInUSD","accountUsedBorrowPercentage","MainLendingNetworkTab","ModalActionButton","text","disabled","Button","variant","fullWidth","rateRow","bottomBorder","heavyBottomBorder","symbolIcon","labelText","valueText","BaseRates","subTitle","rateRows","index","isLast","predictedValue","tokenSymbol","displayPredictedValues","valueSuffix","ActionRates","actionName","assetSymbol","assetSupplyApy","distributionAssetSymbol","distributionAssetApy","BorrowLimitRates","limitOrBalance","borrowLimitUsd","borrowLimitUsedPercentage","predictedBorrowLimitUsd","predictedBorrowLimitPercentage","note","TOP_DISTANCE_REM","modal","txWaitingPanel","upperRightCorner","upperLeftCorner","messageContainer","paddingBottom","explorerLink","TxWaitingModal","open","closeModal","txWaitingStage","txHash","explorerUrlBaseForTx","explorerName","useTheme","isWaitingForUserApproval","Modal","onBackdropClick","IconButton","type","rel","marketInteractionPanel","tabBody","paddingTop","mix","MarketInteractionModal","messageOrInput","inputActionButtonText","onInputActionButtonPressed","showInputActionButton","inputActionButtonActive","actionAssetSymbol","actionAssetName","currentTabIndex","onTabIndexChange","tab0Title","tab1Title","actionApy","distributionApy","showBorrowLimit","showPredictedBorrowLimits","currentBorrowLimit","borrowLimitAfterChange","usedBorrowLimitPercentage","usedBorrowLimitPercentageAfterChange","borrowLimitNote","actionButtonActive","actionButtonText","actionButtonDisabledText","actionButtonOnClick","assetExplorerLink","footerMessagesPayloads","activeTxHash","waitingForUserApproval","waitingForTxConfirmation","isBorrow","maxHeight","JSON_RPC_ERROR_CODES","userRejectedRequest","unauthorized","unsupportedMethod","useTxWaitingStateExplicit","setActiveTxHash","setWaitingForUserApproval","setWaitingForTxConfirmation","useTxWaitingLogicExplicit","txCreatingFunction","closeModalOnSuccess","contractTx","hash","wait","receipt","code","useMarketInteractionModalBase","assetAddressToParamsMap","assetBaseAddressToParams","Map","assetBaseAddress","assetParams","nativeCoinSymbol","cToken","cTokenAddress","supplyTokenAddress","supplyTokenSymbol","supplyTokenName","distributionTokenSymbol","distributionAssetParams","walletBalance","hasWalletBalance","needToApprove","pricePerUnitUsd","underlyingUsdPrice","collateralFactorInUnits","currentLiquidityCashUsd","liquidityUsd","priceCalculationDecimals","supplySideIncentiveApy","supplySideIncentiveDistributionApyInUnits","borrowSideIncentiveApy","borrowSideIncentiveDistributionApyInUnits","currentLiquidityUsd","hasAvailableLiquidity","liquidityInAssetUnits","useMarketInteractionModalTabsState","activeTabIndex","setActiveTabIndex","useMarketInteractionActiveTabState","useOnEnableClicked","wrappedEnableTx","approveErc20Usage","ethers","constants","MaxUint256","useCalculateChangeInBorrowLimits","currentBorrowLimitUsd","actionInUnits","unitPriceInUsd","pricePrecision","priceSensitivizer","buildSensitivizer","actionEffectInUsd","collateralValueOfActionEffect","actionLeadsToShortfall","useCalculateChangeInBorrowBalance","borrowBalanceAfterChange","abs","sensitivity","price","sensitivizePrice","largeIcon","fadeIn","MainModalMessage","subMessage","SupplyModal","isWithdraw","onEnableClicked","isAskingToWithdrawAll","setIsAskingToWithdrawAll","supplyInputValue","setSupplyInputValue","withdrawInputValue","setWithdrawInputValue","useEffect","clearStateBeforeClose","inputComponent","Input","inputProps","appearance","sanitizeNumericInput","hasApprovedERC20","hasAnyAllowance","currentSupplyBalanceInUnits","currentSupplyBalanceInOTokens","accountSupplyBalanceUsd","accountSupplyInOTokensRaw","BigNumber","from","hasSupplyBalance","hasBorrowBalance","onAskToWithdrawAllToggleClicked","createWithdrawAllTx","withdrawFromMarketByOTokens","underlyingDecimals","toString","wrappedSupplyTx","supplyToMarket","utils","parseUnits","wrappedWithdrawTx","withdrawFromMarket","wrappedWithdrawAllTx","onSupplyClicked","onWithdrawClicked","supplyTokenExplorerLink","explorerBaseAddressUrl","messageOrInputComponent","footerMessagePayloads","tokenAmount","canSupply","canWithdraw","commonPayloadPart","explorerBaseTxUrl","marketModalStatePayloadForSupplyTab","isSupplyInputValueValid","isOfferingMoreThanWalletBalance","actionButtonTextForSupply","activeButtonActive","actionButtonCbForSupply","reasonForNotBeingAbleToWithdraw","marketModalStatePayloadForWithdrawTab","withdrawButtonActive","withdrawInputValid","isRequestingMoreThanSuppliedBalance","statePerTabPayload","marketModalStatePayload","stringValueOfNumericInput","safeString","charAt","parsedAsFloat","isNaN","BorrowModal","isRepay","isRepayingMax","setIsRepayingMax","borrowInputValue","setBorrowInputValue","repayInputValue","setRepayInputValue","currentBorrowBalance","needsToButNotYetApproved","repayAmount","wrappedBorrowTx","borrowFromMarket","wrappedRepayTx","repayToMarket","onBorrowClicked","onBorrowMaxSafeClicked","amountLeftToSafe","safeAmountInUsd","safeBorrowInUnits","getUnitsForUsdValue","onRepayClicked","cTokenCashInUnits","cTokenCashInUsd","repayIsZero","hasEnoughToRepayAll","onSetRepayToMaxClicked","maxPossibleBorrow","max","marketModalStatePayloadForBorrowTab","isRequestingMoreThanCanBorrow","isRequestingMoreThanMarketLiquidity","reasonForNotBeingAbleToBorrow","SAFE_BORROW_FACTOR","marketModalStatePayloadForRepayTab","isOfferingMoreThanHasBorrowed","canRepay","actionButtonCbForRepay","reasonForNotBeingAbleToRepay","actionButtonTextForRepay","collateralInteractionPanel","CollateralModal","ConnectedCollateralModal","underlyingName","underlyingSymbol","useCollateralModalState","effectiveUnits","wrappedTxBuildingFunction","useTxWaitingLogic","enterMarketByCTokenAddress","exitMarketByCTokenAddress","onActionButtonClicked","balanceColumn","amountTitle","heroToken","IncentiveModal","incentiveTokenName","incentiveTokenSymbol","incentiveTokenAddress","balanceInUnits","unclaimedInUnits","canClaim","onClaim","whyCannotClaim","showNativeCoinBalance","nativeCoinName","nativeCoinBalanceInUnits","ConnectedIncentiveModal","compAllocatedUnits","useIncentiveModalState","onClaimClicked","wrappedClaimTx","claimLnIncentiveToken","useOnClaimLnIncentive","NetworkNetApy","totalSupplyUsd","totalBorrowUsd","utilizationPercentage","utilizationPercentageUIMessage","totalBorrowUsdInScale","NetworkTotalBalances","networkTotalBorrowBalanceUsd","networkTotalSupplyBalanceUsd","SYMBOLS_TO_COLORS","BTC","WBTC","ETH","WETH","USDC","FUSE","WFUSE","percentage_bar","semi_clear","filter","progress_bar_red","tooltipWrapper","tooltipArrow","tooltipBaseText","tooltipNumber","colors","NetworkSupplyBar","totalNetworkSupplyUsd","suppliedAssets","activeAssetSymbol","setActiveAssetSymbol","hasActiveAsset","totalNetworkSupplyUsdInScale","suppliedAssetGist","colorForAsset","colorByIndex","proportion","suppliedUsd","isActiveAsset","extraClass","suppliedUsdInScale","suppliedUnits","supplyApyPercentageToDisplay","supplyApyPercentage","Tooltip","arrow","placement","enterTouchDelay","onOpen","onClose","tooltip","NetworkOverview","lNSupplyBalanceUsd","totalLNSupplyBalanceUsd","lNBorrowBalanceUsd","totalLNBorrowBalanceUsd","suppliedAssetGists","lnSuppliedAssetsGists","cardContainer","activeCard","semiHidden","cardHeader","AssetViewCard","underlyingAddress","isActive","shouldDim","classNameForContainer","restCardProps","totalSupplyBalanceUsd","totalBorrowBalanceUsd","usagePercentage","usagePercentageForDisplay","totalBorrowBalanceUsdForDisplay","underlyingUsdPriceForDisplay","classesForContainer","classNames","push","Card","CardContent","cardsGrid","gridTemplateColumns","gridGap","AssetsViewSection","NetworkTab","activeAssetSymbolWrapper","useStateful","setValue","root","tabsHeader","LendingNetworkPage","networkId","useRouteMatch","path","url","history","useHistory","setActiveLn","isLoading","Tabs","location","pathname","indicatorColor","Tab","exact","render","isSupplyModalActive","hideSupplyModal","isBorrowModalActive","hideBorrowModal","isCollateralModalActive","hideCollateralModal","hideIncentiveModal","isInventiveModalActive","card","miWidth","justifySelf","alphaMessage","userSelect","lnAssetTooltipWrapper","lnAssetTooltipArrow","lnAssetWrapper","lnAsset","zoom","NetworkListItem","onViewNetwork","lnGist","justifyItems","leaveTouchDelay","interactive","TransitionComponent","TransitionProps","CardActions","spacing","NetworksList","lendingNetworkStores","mainMessage","AllNetworksPage","activeLendingNetworkId","targetUrl","align","lendingNetworksStores","Main","match","params","network_id","App","lendingNetworkParameters","basename","baseTheme","responsiveFontSizes","createMuiTheme","secondary","CryptoWalletConnectionService","ethereum","web3","hasEthereumProvider","hasEventsSupport","isMetamaskInstalled","isSemiCompliantEthereumProviderInstalled","this","isMetaMask","Web3","onFunction","on","request","method","selectedAddress","networkVersion","eth","getChainId","getBalance","balanceInDecimal","fromWei","getAccounts","accounts","getBlockNumber","Error","listener","off","parseInt","READ_ONLY_ETHEREUM_ENDPOINT","REACT_APP_READ_ONLY_ETHEREUM_ENDPOINT","IS_DEV","REACT_APP_USE_PROD","fetchLocalJson","localPath","fetch","fetchRes","json","LendingNetworksService","lnParams","fetchDevNetworkGist","devNetworksgist","participatingSuppliers","tvl","LocalNetworkDevLNAddresses","unitroller","maxmimilion","LocalNetworkDevTokensAddresses","assetInMarket","assetAddress","assetAddressToUse","etheresStructResponseToObject","ethersStructResponse","obj","key","Number","UniswapAnchoredViewService","uniswapAnchoredViewAddress","signerOrProvider","uniswapAnchoredViewContract","Contract","UniswapAnchoredViewJson","abi","getTokenConfigBySymbol","getSignerOrProvider","ethereumProvider","signer","providers","Web3Provider","JsonRpcProvider","getSigner","getAddress","catch","ComptrollerService","unitrollerProxyContract","ComptrollerJson","after","attach","toJS","getAllMarkets","markets","cTokens","enterMarkets","exitMarket","Erc20Service","erc20Address","erc20Contract","ERC20Json","balanceOf","ownerAddress","spenderAddress","allowance","approve","Erc20BuilderService","CErc20Service","cErc20Contract","CErc20Json","mint","redeemUnderlying","oTokensAmount","redeem","repayBorrow","CEtherService","cEtherAddress","cEther","maximillion","CEtherJson","MaximillionJson","borrowerAddress","formatEther","repayBehalf","CTokensBuilderService","cErc20Address","FUSE_COIN_DETAILS","localTokensAddressesJson","NATIVE_COIN_DETAILS_PER_CHAIN","1337","31337","3","122","FUSE_BLOCK_PER_YEAR","FUSE_BLOCK_PER_DAY","BLOCKS_PER_YEAR_BY_CHAIN","1","ROPSTEN_BLOCK_PER_DAY","CryptoWalletConnectionStore","action","cryptoWalletConnectionService","addressCheckingInterval","reactionToWalletConnection","makeObservable","getEthereumProvider","reaction","isConnected","readInformationFromConnectedWallet","fireImmediately","onMainAddressChange","setMainAddress","onChainIdChange","setChainId","setInterval","refreshState","blocksPerYear","didUserApproveDappInThePast","walletConnectionRequestApproved","requestConnectionPermission","permissionGranted","setWalletConnectionRequestApproved","readChainId","readMainAddress","walletAddress","readEthereumBalance","setNativeCoinBalance","requestApproved","observable","computed","AccountStore","erc20BuilderService","cTokensBuilderService","addressChangeReaction","activeLNStoreId","setDoneLoading","reactToConnectedChainOrAddressChanged","Array","tokensWithBalances","entries","reduce","cur","metaWithBalances","promievent","resetTxIndicators","setTxPending","res","setTxCanceled","spender","buildErc20Service","contractInteraction","manuallyUpdateAllStores","cTokenService","buildCEtherService","buildCErc20Service","withdraw","withdrawByOTokens","cNativeService","repayBorrowWithMaximillion","contractTransaction","currentAddress","activeLnStore","refreshAccountListeners","refreshDataForAccount","failLoadingProcess","refreshFromOutside","manuallyReadAccountData","accountAddress","clearAllAccountData","clearTokenBalancesMap","cancelAllCurrentSubscriptions","setErrorLoading","setTxHadError","doneLoading","errorLoading","txPending","txCanceled","txHadError","clear","tokensWithBalancesMap","replace","EMPTY_ASSET_IN_MARKET_PARAMETERS","SingleCTokenStore","assetInMarketParams","cTokenName","cTokenSymbol","cTokenDecimals","exchangeRateCurrent","supplyRatePerBlock","borrowRatePerBlock","totalBorrows","totalReserves","totalSupply","totalCash","reserveFactorMantissa","collateralFactorMantissa","isListed","incentiveSpeed","borrowBalanceCurrent","balanceOfUnderlying","tokenAllowance","underlyingPrice","cTokenBalances","cTokenUnderlyingPrice","batchUpdateFromCTokenMeta","setIsCollaterable","formatUnits","totalCTokensInCirculation","exchangeRateInUnits","totalSuppliedInUnits","totalBorrowedInUnits","blockPerYear","supplyRatePerBlockInUnits","borrowRatePerBlockInUnits","supplyApyInUnits","borrowApyInUnits","incentiveDistributionPerYearInUnitsInTotal","supplySideYearlyIncentiveDistributionInUnits","supplySideYearlyIncentiveDistributionInUsd","borrowSideYearlyIncentiveDistributionInUnits","borrowSideYearlyIncentiveDistributionInUsd","incentiveDistributionPerBlockInUnits","accountBorrowBalanceUsd","totalAccountYearlyGainsUsd","totalAccountYearlyLossesUsd","gt","usdValue","SingleLNStore","lendingNetworksService","lendingNetworkGist","comptrollerService","set","liquidity","lNBorrowUsd","_priceCalculationDecimals","lnUsedBorrowFraction","lnCollateralPotentialInUSD","lnPotentialCollateral","marketCollateralPotentialInUSD","suppliedAssetsGists","suppliedAssetParameter","totalAccountSupplyUsd","totalAccountBorrowUsd","totalYearlyGains","totalLossesGains","totalYearlyChanges","totalYearlyChange","potentialCollateral","accountUsedBorrowFraction","incentiveBalance","incentiveAllocated","readDataForAccount","refreshLNNetworkState","readAndSetCompBalanceMeta","readNSetMarkets","batchReadAndUpdateCTokensStores","readNSetAccountLimits","JSON","stringify","fetchLendingNetworkLiveState","liveState","setLiveState","assetToCTokenStore","has","tx","claimIncentiveFromAllMarkets","comptrollerProxy","compoundLensServiceInitialized","compoundLensService","getAccountLimits","accountLimits","setAccountLimits","warn","replaceMarkets","fetchCompBalanceMetadataExt","compBalanceMetadataExt","setCompBalanceMeta","cTokenMarkets","allMarkets","cTokenMetadataAll","cTokenMetas","cTokenBalancesAll","cTokenUnderlyingPriceAll","cTokenUnderlyingPricesAll","i","cTokenUnderlyingPrices","matchingSTokenStore","includes","updateWithFreshState","marketIsColleterable","updateIsInCollaterable","lnLiveState","compBalance","allocated","distributionAssetRatePerBlock","shortfall","marketsIn","newMarkets","usdLiquidity","LendingNetworksStore","initializeStore","l","setLoadingState","fetchAllLnParameters","buildStoresForEachLn","initializeLNStores","fetchALlLendingNetworksParameters","lnParameters","setLendingNetworkParameters","lnStores","buildLNStore","setLendingNetworksStores","forEach","initialize","gist","lnIdAddress","setActiveLendingNetworkId","lendingNetworkGists","ModalsStore","currentModalId","supplyAssetBaseAddress","showAssetActionModal","borrowAssetBaseAddress","setCurrentModalId","supplyModalId","setAssetBaseAddress","CompoundLensService","compoundLensAddress","compoundLensContract","CompoundLensJson","newCompoundLensAddress","isInitialized","callStatic","cTokenMetadata","cTokenAddresses","rawMetas","rawMeta","comptrollerAddress","rawAccountLimits","compToken","votes","getCompBalanceMetadataExt","rawCompBalanceMetaExt","LOCAL_CHAINS","LIVE_CHAINS","LIVE_CHAIN_CONSTANTS","explorerUrls","baseUrl","blockUrlBase","addressUrlBase","txUrlBase","SystemStore","chainIdChangeReaction","reactToConnectedChainChanged","chainCompoundLensAddress","getChainCompoundLensAddress","setCompoundLensAddress","chainExplorerBaseUrls","getChainExplorerUrls","setExplorerAddresses","nativeCoinDecimals","setNativeCoinDetails","ChainAddresses","CompoundLens","explorerAddresses","explorerBaseUrl","explorerBaseBlockUrl","configure","enforceActions","window","services","addresses","contractsAddresses","cryptoWalletIntegrationService","uniswapAnchoredViewService","UniswapAnchoredView","erc20ServiceBuilder","cTokenServiceBuilder","buildServices","lnServices","comptrollerLiveService","buildLNServices","stores","getStores","AppWrapper","StylesProvider","injectFirst","ThemeProvider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41ec112e.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport { IStores } from \"./stores\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { AccountStore } from \"./AccountStore\";\nimport { LendingNetworksStore } from \"./LendingNetworksStore\";\nimport { TLNContractsAddresses } from \"../services/Services\";\nimport { ModalsStore } from \"./ModalsStore\";\nimport { SingleCTokenStore } from \"./multiInstanceStores/SingleCTokenStore\";\nimport { SingleLNStore } from \"./multiInstanceStores/SingleLNStore\";\nimport { SystemStore } from \"./SystemStore\";\n\nexport function useStores(): IStores {\n  // @ts-ignore\n  return React.useContext(MobXProviderContext);\n}\n\nexport function useCryptoWalletIntegrationStore(): CryptoWalletConnectionStore {\n  return useStores().cryptoWalletIntegrationStore;\n}\n\nexport function useAccountStore(): AccountStore {\n  return useStores().accountStore;\n}\n\nexport function useLendingNetworksStore(): LendingNetworksStore {\n  return useStores().lendingNetworksStore;\n}\n\nexport function useSystemStore(): SystemStore {\n  return useStores().systemStore;\n}\n\nexport function useModalsStore(): ModalsStore {\n  return useStores().modalsStore;\n}\n\nexport function useActiveLendingNetworkStore(): SingleLNStore | undefined {\n  return useStores().lendingNetworksStore.activeLNStore;\n}\n\nexport function useCTokenStoreByBaseAsset(\n  baseAssetAddress: string\n): SingleCTokenStore | undefined {\n  const lendingNetworksStore = useLendingNetworksStore();\n  const activeLN = lendingNetworksStore.activeLNStore;\n  const cTokenStore = activeLN?.cTokensStores.find(\n    (cTokenStore) => cTokenStore.underlyingAssetAddress === baseAssetAddress\n  );\n  return cTokenStore;\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { DetailedHTMLProps } from \"react\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  contentContainer: {\n    margin: \"0 auto\",\n    paddingRight: \"1.33rem\",\n    paddingLeft: \"1.33rem\",\n    maxWidth: \"82rem\",\n  },\n}));\n\nexport const ContentContainer = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const { children, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.contentContainer} {...rest}>\n      {children}\n    </div>\n  );\n});\n","// export const BRAND_MAIN_COLOR = \"#00D395\";\n// export const BRAND_MAIN_COLOR = \"#00D395\";\n// export const BRAND_MAIN_COLOR = \"#31E5A6\";\nexport const BRAND_MAIN_COLOR = \"#83dbe3\";\n// export const BRAND_MAIN_COLOR = \"#ff8906\";\n\n// export const AFFIRMATIVE_GREEN_COLOR = \"#00D395\";\n// export const DEAFFIRMATIVE_RED_COLOR = \"#f96d6d\";\nexport const AFFIRMATIVE_GREEN_COLOR = \"#31E5A6\";\nexport const DEAFFIRMATIVE_RED_COLOR = \"#E53170\";\n\n// export const BACKGROUND_DARK_COLOR = \"#0f0e17\";\nexport const BACKGROUND_DARK_COLOR = \"#211f33\";\nexport const BACKGROUND_LIGHT_COLOR = \"#fffefe\";\nexport const BACKGROUND_PAGE_CREAM = \"#f9f4ef\";\n\nexport const TEXT_ON_DARK = \"#fffffe\";\nexport const TEXT_ON_LIGHT = \"#2e2f3e\";\n\nexport const GRAYISH_TEXT = \"#AAB8C1\";\n\nexport const OLA_ORANGE = \"#feb276\";\nexport const OLA_CYAN = \"#80dae3\";\nexport const OLA_BLUE = \"#5053d4\";\n","export const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const NATIVE_COIN_ASSET_ADDRESS =\n  \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\n","import { ILendingNetworkParameters } from \"./ILendingNetworksService\";\nimport { ZERO_ADDRESS } from \"../../constants/constantAddresses\";\n\nconst wrappedFuseAddressOnRopsten =\n  \"0x6b778cA46F05ac6BfEBC7c3C19E079EC16f72b33\";\n\nexport const FUSE_ON_ROPSTEN: ILendingNetworkParameters = {\n  name: \"Fuse Ropsten\",\n  lnHomePage: \"https://www.fuse.io\",\n  id: \"0x9c518a98b22B3B81ED063cf4E604CeAb8c3a1b7B\",\n  unitrollerAddress: \"0xf7772Fb332032f042fE61604E5395893A62A1f24\",\n  maximillionAddress: \"0x9C8B6ce3a955437a9546B8bb00899E6A82a91c97\",\n  chainId: \"3\",\n  assets: [\n    {\n      symbol: \"WBTC\",\n      name: \"Wrapped BTC\",\n      address: \"0xA5a9320AE361C25C39681F9D86F6018ee9236523\",\n      // decimals: 8, DEV_NOTE : Suppose to be 8, uncomment when deploying fix\n      decimals: 8,\n      isNativeCoin: false,\n    },\n    {\n      symbol: \"ETH\",\n      name: \"Ether\",\n      address: ZERO_ADDRESS,\n      decimals: 18,\n      isNativeCoin: true,\n    },\n    {\n      symbol: \"USDC\",\n      name: \"USD Coin\",\n      address: \"0x180F8670Dd6367C79d08E1d3017F7Cd175dDa163\",\n      // decimals: 6,  DEV_NOTE : Suppose to be 6, uncomment when deploying fix\n      decimals: 6,\n      isNativeCoin: false,\n    },\n    {\n      symbol: \"WFUSE\",\n      name: \"Wrapped Fuse\",\n      address: wrappedFuseAddressOnRopsten,\n      decimals: 18,\n      isNativeCoin: false,\n    },\n  ],\n  distributionAssetParameters: {\n    symbol: \"WFUSE\",\n    name: \"Wrapped Fuse\",\n    address: wrappedFuseAddressOnRopsten,\n    decimals: 18,\n    isNativeCoin: false,\n  },\n};\n\nexport const LENDING_NETWORK_NAMES = {\n  fuseAlpha: \"Fuse Alpha\",\n};\n\nexport const FUSE_ALPHA: ILendingNetworkParameters = {\n  name: LENDING_NETWORK_NAMES.fuseAlpha,\n  lnHomePage: \"https://www.fuse.io\",\n  id: \"0x2cBBD5125087eB697a6A44098323204a32dFBed6\",\n  unitrollerAddress: \"0xCf8a978E53e057f493a965b8F5a5E7aF34DDcCe4\",\n  maximillionAddress: \"0x0F97b83539fF81a3015b18D37667e8c00d4284c6\",\n  chainId: \"122\",\n  assets: [\n    {\n      symbol: \"WBTC\",\n      name: \"Wrapped BTC\",\n      address: \"0x33284f95ccb7B948d9D352e1439561CF83d8d00d\",\n      decimals: 8,\n      isNativeCoin: false,\n    },\n    {\n      symbol: \"WETH\",\n      name: \"Wrapped Ether\",\n      address: \"0xa722c13135930332Eb3d749B2F0906559D2C5b99\",\n      decimals: 18,\n      isNativeCoin: false,\n    },\n    {\n      symbol: \"USDC\",\n      name: \"USD Coin\",\n      address: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n      decimals: 6,\n      isNativeCoin: false,\n    },\n    {\n      symbol: \"FUSE\",\n      name: \"Fuse\",\n      address: ZERO_ADDRESS,\n      decimals: 18,\n      isNativeCoin: true,\n    },\n  ],\n  distributionAssetParameters: {\n    symbol: \"WFUSE\",\n    name: \"Wrapped Fuse\",\n    address: \"0x0BE9e53fd7EDaC9F859882AfdDa116645287C629\",\n    decimals: 18,\n    isNativeCoin: false,\n  },\n};\n\nexport const LendingNetworksParam: ILendingNetworkParameters[] = [\n  // FUSE_ON_ROPSTEN,\n  FUSE_ALPHA,\n];\n","import { makeStyles, Typography, Grid, Hidden, Fade } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { observer } from \"mobx-react\";\nimport {\n  useCryptoWalletIntegrationStore,\n  useLendingNetworksStore,\n  useModalsStore,\n} from \"../../store/storeHooks\";\nimport { ContentContainer } from \"../structure/ContentContainer\";\nimport { Link } from \"react-router-dom\";\nimport Color from \"color\";\nimport {\n  BACKGROUND_DARK_COLOR,\n  BACKGROUND_LIGHT_COLOR,\n  GRAYISH_TEXT,\n  TEXT_ON_DARK,\n} from \"../../theme/themeConstants\";\nimport { LENDING_NETWORK_NAMES } from \"../../services/lendingNetworksService/lendingNetworksParams\";\n\ninterface IProps {}\n\nconst TITLE_HEIGHT_REM = 2;\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    padding: \"1rem 0\",\n    // background: \"#070A0E\",\n    backgroundColor: theme.palette.background.default,\n    minHeight: \"80px\",\n  },\n  alignedRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  logoLink: {\n    minWidth: \"3rem\",\n    // minWidth: 80,\n    // height: 27,\n    // height: theme.typography.h5.fontSize,\n    height: `${TITLE_HEIGHT_REM}rem`,\n    // backgroundImage: `url(${process.env.PUBLIC_URL}/assets/images/ola/ola_symbol_clear.png)`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"contain\",\n    backgroundColor: \"transparent\",\n\n    // border: \"1px solid blue\",\n\n    transition: \"200ms\",\n\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n\n    \"&:hover\": {\n      // height: theme.typography.h5.fontSize,\n      // minWidth: \"3.5rem\",\n      // height: \"2.4rem\",\n      transform: \"scale(1.1)\",\n      // opacity: 0.9,\n      // filter: \"brightness(105%)\",\n    },\n  },\n  logoSpan: {\n    // height: `${TITLE_HEIGHT_REM}rem`,\n    height: `100%`,\n    // width: `${TITLE_HEIGHT_REM}rem`,\n    width: `100%`,\n    backgroundImage: `url(${process.env.PUBLIC_URL}/assets/images/ola/ola_symbol_clear.png)`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"contain\",\n    backgroundColor: \"transparent\",\n  },\n\n  // Placeholder until we will have our logo ready\n  logoLinkText: {\n    // minWidth: 127,\n    height: 27,\n    fontWeight: \"bold\",\n    // color: \"white\",\n    color: Color.rgb(theme.palette.primary.main).darken(0.1).hex(),\n    textDecoration: \"none\",\n    fontSize: 20,\n    // backgroundImage: `url(${process.env.PUBLIC_URL}/images/compound-logo.svg)`,\n    // backgroundRepeat: \"no-repeat\",\n    // backgroundSize: \"contain\",\n    // backgroundColor: \"transparent\",\n\n    // fill: \"transparent\",\n\n    // background: `linear-gradient to bottom, ${theme.palette.primary.main} 0%, ${theme.palette.primary.main} 100%`,\n    // background: \"linear-gradient to bottom, red 0%, red 1000%\",\n    textAlign: \"center\",\n    // stroke: \"red\",\n    // strokeWidth: \"12px\",\n    // fill: \"white\",\n    transition: \"200ms\",\n\n    borderColor: theme.palette.primary.main,\n    // paddingRight: \"0.5rem\",\n    // paddingLeft: \"0.5rem\",\n\n    \"&:hover\": {\n      // color: theme.palette.primary.light,\n      // color: Color.rgb(theme.palette.primary.main).lighten(0.25).hex(),\n      fontSize: 21,\n      // paddingBottom: \"5px\",\n      // paddingBottom: \"2rem\",\n      // borderBottom: \"1px solid\",\n      // borderTop: \"1px solid\",\n      // opacity: 0.8,\n      // stroke: \"black\",\n      // strokeWidth: \"12px\",\n      // textShadow: `1px 0 0 ${GRAYISH_TEXT}, 0 1px 0 ${GRAYISH_TEXT}, 1px 0 0 ${GRAYISH_TEXT}, 0 -1px 0 ${GRAYISH_TEXT}`,\n      // borderRight: `1px solid ${Color.rgb(theme.palette.primary.main)\n      //   .lighten(0.3)\n      //   .hex()}`,\n      // borderLeft: `1px solid ${Color.rgb(theme.palette.primary.main)\n      //   .lighten(0.3)\n      //   .hex()}`,\n      // borderRadius: \"5%\",\n    },\n  },\n  lnLinkText: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n\n    // border: \"1px solid red\",\n    minWidth: 127,\n    // height: 27,\n    height: `${TITLE_HEIGHT_REM}rem`,\n    // color: \"rgba(256,256,256,0.5)\",\n    color: TEXT_ON_DARK,\n    // color: theme.palette.primary.dark,\n    textDecoration: \"none\",\n    fontSize: `1.2rem`,\n    // backgroundImage: `url(${process.env.PUBLIC_URL}/images/compound-logo.svg)`,\n    // backgroundRepeat: \"no-repeat\",\n    // backgroundSize: \"contain\",\n    // backgroundColor: \"transparent\",\n    textAlign: \"center\",\n    transition: \"200ms\",\n\n    \"&:hover\": {\n      fontSize: 21,\n      // paddingBottom: \"2rem\",\n      // borderBottom: \"1px solid\",\n      // borderTop: \"1px solid\",\n      // color: \"white\",\n      // borderRight: \"1px solid white\",\n      // borderLeft: \"1px solid white\",\n    },\n  },\n  actions: {\n    minHeight: \"3rem\",\n    justifyContent: \"flex-end\",\n    // color: \"#CFD8DC\",\n    color: TEXT_ON_DARK,\n  },\n  headerButtonLike: {\n    // border: `5px solid ${Color.rgb(theme.palette.background.default)\n    //   .lighten(0.9)\n    //   .hex()}`,\n    backgroundColor: Color.rgb(theme.palette.background.default)\n      .lighten(0.3)\n      .hex(),\n    border: `3px solid ${theme.palette.background.default}`,\n    borderRadius: \"5%\",\n    \"&:hover\": {\n      borderColor: Color.rgb(theme.palette.background.default)\n        .lighten(0.9)\n        .hex(),\n      backgroundColor: theme.palette.background.default,\n      color: theme.palette.primary.light,\n      // background: \"#1d2b38\",\n      // background: Color.rgb(theme.palette.background.default)\n      //   .lighten(0.9)\n      //   .hex(),\n    },\n  },\n  tokenBalance: {\n    // backgroundColor: \"#f25f4c\",\n    // border: \"1px solid #fffffe\",\n\n    // background: \"#141E27\",\n    // backgroundColor: Color.rgb(theme.palette.background.default)\n    //   .darken(0.1)\n    //   .hex(),\n\n    // borderRadius: \"3px\",\n    cursor: \"pointer\",\n    padding: \"0.43rem 0.665rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    letterSpacing: \"1px\",\n    fontSize: \"12px\",\n    fontWeight: 600,\n    textTransform: \"none\",\n  },\n\n  account: {\n    // background: \"#141E27\",\n    borderRadius: \"3px\",\n    cursor: \"pointer\",\n    padding: \"0.665rem\",\n    marginLeft: \"1.33rem\",\n    letterSpacing: \"1px\",\n    fontSize: \"12px\",\n    fontWeight: 600,\n    textTransform: \"none\",\n  },\n\n  // DEV_NOTE : All of these 'icon' classes can be moved to a common file\n  tokenIcon: {\n    marginLeft: \"0.25rem\",\n    height: \"1.25rem\",\n    width: \"1.25rem\",\n    minHeight: \"1.25rem\",\n    minWidth: \"1.25rem\",\n  },\n  // TODO : CRITICAL : Make this generic\n  iconComp: {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/tokens/asset_WFUSE.svg)`,\n  },\n  icon: {\n    flexShrink: 0,\n    display: \"inline-block\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    backgroundSize: \"contain\",\n    borderRadius: \"50%\",\n  },\n\n  logoLetter: {\n    transition: \"200ms\",\n  },\n  letterO: {\n    // margin: \"0.3rem\",\n    color: \"#feb276\",\n    // stroke: \"2px #feb276\",\n    // textShadow:\n    //   \"-2px -2px 0 #feb276, 2px -2px 0 #feb276, -2px 2px 0 #feb276, 2px 2px #feb276\",\n    // textShadow: `-1px -1px 0 ${BACKGROUND_LIGHT_COLOR}, 1px -1px 0 ${BACKGROUND_LIGHT_COLOR}, -1px 1px 0 ${BACKGROUND_LIGHT_COLOR}, 1px 1px 0 ${BACKGROUND_LIGHT_COLOR}`,\n  },\n  letterL: {\n    color: \"#80dae3\",\n    // textShadow:\n    //   \"-2px -2px 0 #80dae3, 2px -2px 0 #80dae3, -2px 2px 0 #80dae3, 2px 2px #80dae3\",\n    // textShadow: `-2px -2px 0 ${BACKGROUND_DARK_COLOR}, 2px -2px 0 ${BACKGROUND_DARK_COLOR}, -2px 2px 0 ${BACKGROUND_DARK_COLOR}, 2px 2px ${BACKGROUND_DARK_COLOR}`,\n  },\n  letterA: {\n    color: \"#5053d4\",\n    // textShadow:\n    //   \"-2px -2px 0 #5053d4, 2px -2px 0 #5053d4, -2px 2px 0 #5053d4, 2px 2px #5053d4\",\n    // textShadow: `-2px -2px 0 ${BACKGROUND_DARK_COLOR}, 2px -2px 0 ${BACKGROUND_DARK_COLOR}, -2px 2px 0 ${BACKGROUND_DARK_COLOR}, 2px 2px ${BACKGROUND_DARK_COLOR}`,\n  },\n}));\n\nexport const Header = observer<React.FunctionComponent<IProps>>((props) => {\n  const classes = useStyles();\n\n  const cryptoWalletConnectionStore = useCryptoWalletIntegrationStore();\n  const modalsStore = useModalsStore();\n  const lendingNetworksStore = useLendingNetworksStore();\n  const activeLn = lendingNetworksStore.activeLNStore;\n\n  const walletText = cryptoWalletConnectionStore.isConnectedToWallet\n    ? summarizeAddress(cryptoWalletConnectionStore.mainAddress)\n    : \"Connect\";\n\n  const hasActiveLn = !!activeLn;\n  const activeLnName = activeLn?.name;\n  const linkToLnPage = activeLn?.lnHomePage || \"/\";\n  const onlyIncentiveTokenBalance = activeLn?.compBalanceUnits || 0;\n  // DEV_NOTE : This is a quick-n-dirty patch to display both wFuse (incentive) and fuse together.\n  const balanceToShow = useMemo(() => {\n    if (activeLnName === LENDING_NETWORK_NAMES.fuseAlpha) {\n      return (\n        cryptoWalletConnectionStore.nativeCoinBalance +\n        onlyIncentiveTokenBalance\n      );\n    } else {\n      return onlyIncentiveTokenBalance;\n    }\n  }, [\n    activeLnName,\n    cryptoWalletConnectionStore.nativeCoinBalance,\n    onlyIncentiveTokenBalance,\n  ]);\n\n  return (\n    <header className={classes.header}>\n      <ContentContainer>\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"center\"\n          style={\n            {\n              // alignItems: \"center\",\n              // alignContent: \"center\",\n            }\n          }\n        >\n          {/* Logo */}\n          <Grid item xs={6} sm={3} className={classes.alignedRow}>\n            {/* TODO : Add Project logo here */}\n            <Link className={classes.logoLink} to=\"/\">\n              <div className={classes.logoSpan} />\n            </Link>\n            {/*<Link className={classes.logoLinkText} to=\"/\">*/}\n            {/*  <span className={clsx([classes.letterO, classes.logoLetter])}>*/}\n            {/*    O*/}\n            {/*  </span>*/}\n            {/*  <span className={clsx([classes.letterL, classes.logoLetter])}>*/}\n            {/*    L*/}\n            {/*  </span>*/}\n            {/*  <span className={clsx([classes.letterA, classes.logoLetter])}>*/}\n            {/*    A*/}\n            {/*  </span>*/}\n            {/*</Link>*/}\n\n            {/* TODO : QUICK-HACK : ORGANIZE THIS*/}\n            {activeLnName && (\n              // <Fade in={hasActiveLn} timeout={500}>\n              <a\n                className={classes.lnLinkText}\n                target=\"_blank\"\n                href={linkToLnPage}\n                style={{\n                  fontFamily: \"Gotham A, Gotham B, sans-serif\",\n                }}\n              >\n                {activeLnName}\n              </a>\n              // </Fade>\n            )}\n            {/*{!activeLnName && (*/}\n            {/*  <span className={classes.lnLinkText}>All Networks</span>*/}\n            {/*)}*/}\n          </Grid>\n          {/* Empty spaces */}\n          {/* DEV_NOTE : Place holder for the navigations */}\n          <Hidden xsDown>\n            <Grid item xs={6}></Grid>\n          </Hidden>\n\n          {/* Incentive balance */}\n          <Grid\n            className={clsx(classes.alignedRow, classes.actions)}\n            item\n            xs={12}\n            sm={3}\n          >\n            {/* Token balance */}\n            {hasActiveLn && (\n              <Fade in={hasActiveLn} timeout={500}>\n                <div\n                  className={clsx([\n                    classes.headerButtonLike,\n                    classes.tokenBalance,\n                  ])}\n                  onClick={() => modalsStore.showIncentiveModal()}\n                >\n                  {balanceToShow.toFixed(4).toLocaleString()}\n                  <div\n                    className={clsx(\n                      classes.tokenIcon,\n                      classes.iconComp,\n                      classes.icon\n                    )}\n                  />\n                </div>\n              </Fade>\n            )}\n\n            {/* Address */}\n            {/* DEV_NOTE : Hides on mobile to keep original UX*/}\n            {/*<Hidden xsDown>*/}\n            <a\n              className={clsx(classes.headerButtonLike, classes.account)}\n              onClick={() => cryptoWalletConnectionStore.askToConnect()}\n            >\n              <span />\n              {walletText}\n            </a>\n            {/*</Hidden>*/}\n          </Grid>\n        </Grid>\n      </ContentContainer>\n    </header>\n  );\n});\n\n/**\n * QuicknDirty\n */\nfunction summarizeAddress(address: string): string {\n  return `${address.substring(0, 3)}...${address.substring(\n    address.length - 3,\n    address.length\n  )}`;\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useCommonClasses = makeStyles((theme) => ({\n  mobileHide: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none !important\",\n    },\n  },\n  mobileOnly: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none !important\",\n    },\n  },\n  label: {\n    // fontFamily: 'Haas Grot Text R',\n    fontStyle: \"medium\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    color: \"#AAB8C1\",\n  },\n\n  textRight: {\n    textAlign: \"right\",\n  },\n  textCenter: {\n    textAlign: \"center\",\n  },\n  icon: {\n    flexShrink: 0,\n    display: \"inline-block\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    backgroundSize: \"contain\",\n    borderRadius: \"50%\",\n    width: \"1.8rem\",\n    height: \"1.8rem\",\n    minWidth: \"1.8rem\",\n    minHeight: \"1.8rem\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { BACKGROUND_LIGHT_COLOR } from \"../../theme/themeConstants\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  panel: {\n    background: BACKGROUND_LIGHT_COLOR,\n    boxShadow: \"0px 2px 4px rgb(16 21 24 / 5%)\",\n    borderRadius: \"4px\",\n    // marginBottom: \"1.33rem\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n}));\n\nexport const Panel = React.memo<IProps>((props) => {\n  const classes = useStyles();\n\n  return <div className={classes.panel}>{props.children}</div>;\n});\n","import React, { DetailedHTMLProps, useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { useCommonClasses } from \"../../theme/commonClasses\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface IProps {\n  symbol: string;\n  extraClasses?: string[];\n}\n\nconst PUBLIC_URL = process.env.PUBLIC_URL;\n\nconst useStyles = makeStyles((theme) => ({\n  token: {\n    // \"&:hover\": {\n    //   animation: \"$turn 3000ms linear\",\n    // },\n  },\n\n  \"@keyframes turn\": {\n    \"0%\": {\n      transform: \"rotateY(0deg)\",\n    },\n    // \"25%\": {\n    //   transform: \"rotateY(-180deg)\",\n    // },\n    \"50%\": {\n      transform: \"rotateY(-360deg)\",\n    },\n    // \"75%\": {\n    //   transform: \"rotateY(180deg)\",\n    // },\n    \"100%\": {\n      transform: \"rotateY(0deg)\",\n    },\n  },\n  \"@keyframes return\": {\n    \"100%\": {\n      transform: \"rotateY(0deg)\",\n    },\n  },\n}));\nexport const TokenIcon = React.forwardRef<\n  any,\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n>((props, ref) => {\n  const {\n    symbol,\n    extraClasses,\n    className: outerClassName,\n    ...spanProps\n  } = props;\n  const classes = useStyles();\n  const commonClasses = useCommonClasses();\n\n  const classesForSpan = useMemo(() => {\n    const safeExtraClasses = extraClasses || [];\n    return clsx([\n      outerClassName,\n      commonClasses.icon,\n      classes.token,\n      ...safeExtraClasses,\n    ]);\n  }, [classes.token, commonClasses.icon, extraClasses, outerClassName]);\n\n  console.log(\"Token rendered\");\n\n  return (\n    <span\n      className={classesForSpan}\n      style={{\n        backgroundImage: `url(${PUBLIC_URL}/tokens/asset_${symbol}.svg)`,\n        backgroundSize: \"contain\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n      {...spanProps}\n      ref={ref}\n    />\n  );\n});\n","import { useCallback } from \"react\";\n\ntype TNumericalScaleUnit = \"M\" | \"K\" | \"\";\ntype TSumInScale = {\n  scaleUnit: TNumericalScaleUnit;\n  units: number;\n  unitsForDisplay: string;\n};\n\nexport function amountToSumInScale(\n  amount: number,\n  displayDecimals = 4\n): TSumInScale {\n  let scaleUnit: TNumericalScaleUnit = \"M\";\n  let scaleDivider = 1_000_000;\n\n  // TODO : Play with this threshold\n  if (amount < 500_000) {\n    scaleUnit = \"K\";\n    scaleDivider = 1_000;\n  }\n\n  // For low numbers\n  if (amount < 1000) {\n    scaleUnit = \"\";\n    scaleDivider = 1;\n  }\n\n  const units = amount / scaleDivider;\n\n  const sumInScale: TSumInScale = {\n    scaleUnit,\n    units,\n    unitsForDisplay: numericalDisplay(units, displayDecimals),\n  };\n\n  return sumInScale;\n}\n\nexport function numericalDisplay(value: number, decimals: number): string {\n  return parseFloat(value.toFixed(decimals)).toLocaleString(undefined, {\n    maximumFractionDigits: decimals,\n  });\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Grid, makeStyles, Switch, Typography } from \"@material-ui/core\";\nimport { TMarketType } from \"./types\";\nimport clsx from \"clsx\";\nimport { useCommonClasses } from \"../../../../theme/commonClasses\";\nimport { TAssetInMarketParameters } from \"../../../../services/lendingNetworksService/ILendingNetworksService\";\nimport { BigNumber, ethers } from \"ethers\";\nimport { TokenIcon } from \"../../../../components/icons/TokenIcon\";\nimport {\n  BRAND_MAIN_COLOR,\n  TEXT_ON_LIGHT,\n} from \"../../../../theme/themeConstants\";\nimport { observer } from \"mobx-react\";\nimport {\n  useCryptoWalletIntegrationStore,\n  useCTokenStoreByBaseAsset,\n} from \"../../../../store/storeHooks\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport Color from \"color\";\nimport {\n  amountToSumInScale,\n  numericalDisplay,\n} from \"../../../../components/displayCalculations/displayCalculations\";\n\ninterface IProps {\n  assetSummary: TAssetInMarketParameters;\n  unitsInWallet: number;\n  marketType: TMarketType;\n\n  onCollateralableChange: (\n    baseAssetAddress: string,\n    newCollaterableValue: boolean\n  ) => void;\n\n  onAssetSelected: (baseAssetAddress: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  // TODO : Consider making this global\n  a: {\n    color: \"inherit\",\n    letterSpacing: \"1px\",\n    // fontSize: \"12px\",\n    // fontWeight: 700,\n    textRransform: \"uppercase\",\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n  },\n  asset: {\n    // display: \"flex\",\n    // alignItems: \"center\",\n    // borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n    // padding: \"1.25rem 1.75rem\",\n    // fontSize: \"1rem\",\n    // fontWeight: 500,\n    // textTransform: \"capitalize\",\n    // letterSpacing: 0,\n    // transition: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n    // padding: \"1.25rem 1.75rem\",\n    padding: \"1.25rem 1.75rem\",\n    borderLeft: \"2px solid transparent\",\n    paddingLeft: \"1.625rem\",\n    textTransform: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    letterSpacing: 0,\n    transition: \"none\",\n    color: TEXT_ON_LIGHT,\n\n    \"&:hover\": {\n      borderLeft: `2px solid ${BRAND_MAIN_COLOR}`,\n      // color: \"#141E27\",\n      color: Color.rgb(TEXT_ON_LIGHT).darken(0.3).hex(),\n      fontWeight: \"bolder\",\n\n      \"& span\": {\n        fontWeight: \"bolder\",\n      },\n    },\n\n    height: \"6rem\",\n  },\n\n  list_icon: {\n    width: \"2.25rem\",\n    height: \"2.25rem\",\n  },\n\n  identity: {\n    alignItems: \"center\",\n  },\n\n  identity_icon: {\n    marginRight: \"1rem\",\n  },\n\n  identity_balance: {\n    flex: \"1 1\",\n    marginRight: \"0.25rem\",\n    overflow: \"hidden\",\n  },\n\n  balance: {\n    \"& > div\": {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n  },\n\n  balanceSubtitle: {\n    display: \"block\",\n    marginTop: \"9px\",\n    color: \"#AAB8C1\",\n    fontSize: \"0.9em\",\n  },\n}));\n\nconst WALLET_BALANCE_DECIMALS = 4;\nconst UNITS_TO_DISPLAY_DECIMALS = 4;\nconst ACTION_APY_DECIMALS = 4;\n\nexport const AssetPanelRow = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const classes = useStyles();\n    const commonClasses = useCommonClasses();\n    const {\n      marketType,\n      assetSummary,\n      // cTokenMeta,\n      onCollateralableChange,\n      onAssetSelected,\n    } = props;\n\n    const { address } = assetSummary;\n\n    const {\n      name,\n      symbol,\n      // amountInWallet,\n      // isCollateralable,\n      // supplyApy,\n      // usdLiquidity,\n    } = assetSummary;\n\n    const cTokenStore = useCTokenStoreByBaseAsset(address);\n\n    const isCollaterable = cTokenStore?.isCollaterable;\n\n    const borrowApy = cTokenStore?.borrowApyInPercentages || 0;\n    const supplyApy = cTokenStore?.supplyApyInPercentages || 0;\n\n    const usdCashLiquidity = cTokenStore?.cTokenCashInUSD || 0;\n    const walletBalanceInUnits =\n      cTokenStore?.accountUnderlyingBalanceInUnits || 0;\n\n    const liquidityUSDInScale = amountToSumInScale(usdCashLiquidity);\n\n    const supplyInUnits = cTokenStore?.accountSupplyInUnits || 0;\n    const borrowInUnits = cTokenStore?.accountBorrowInUnits || 0;\n\n    const isSupply = marketType === \"supply\";\n    const ApyToDisplay = isSupply ? supplyApy : borrowApy;\n    const unitsToDisplay = isSupply ? supplyInUnits : borrowInUnits;\n    const unitsText = isSupply ? \"Supplied\" : \"Borrowed\";\n    const showActionUnits = unitsToDisplay > 0;\n\n    const onCollateralSwitch = useCallback(\n      (event: React.ChangeEvent<HTMLInputElement>) => {\n        onCollateralableChange(address, event.target.checked);\n      },\n      [address, onCollateralableChange]\n    );\n\n    const onAssetInteractionRequested = useCallback(\n      (event: React.MouseEvent<HTMLAnchorElement>) => {\n        if (cTokenStore?.hasBeenInitialized) {\n          onAssetSelected(address);\n        } else {\n          console.log(`Asset interation: cTokenStore not yet initialised`);\n        }\n      },\n      [address, cTokenStore?.hasBeenInitialized, onAssetSelected]\n    );\n\n    const collateralLiquidityOrLoading = useMemo(() => {\n      const collateralOrLiquidity =\n        marketType === \"supply\" ? (\n          // <input type=\"checkbox\" />\n          //  TODO : Add a proper toggle component\n          <Switch\n            checked={isCollaterable}\n            onChange={onCollateralSwitch}\n            // Preventing toggle-click from being intercepted by the row's 'onClick'\n            onClick={(e) => e.stopPropagation()}\n          />\n        ) : (\n          <div>\n            ${liquidityUSDInScale.unitsForDisplay}\n            {liquidityUSDInScale.scaleUnit}\n          </div>\n        );\n\n      return cTokenStore?.hasBeenInitialized ? (\n        collateralOrLiquidity\n      ) : (\n        <Skeleton animation=\"wave\" />\n      );\n    }, [\n      cTokenStore?.hasBeenInitialized,\n      isCollaterable,\n      liquidityUSDInScale.scaleUnit,\n      liquidityUSDInScale.unitsForDisplay,\n      marketType,\n      onCollateralSwitch,\n    ]);\n\n    return (\n      <a\n        className={clsx([classes.a, classes.asset])}\n        onClick={onAssetInteractionRequested}\n      >\n        {/* Asset (+APY subtitle) */}\n        <Grid container item xs={4} sm={4} className={classes.identity}>\n          <TokenIcon\n            symbol={symbol}\n            extraClasses={[classes.identity_icon, classes.list_icon]}\n          />\n          <div className={clsx([classes.balance, classes.identity_balance])}>\n            <div>{name}</div>\n            <span\n              className={clsx([\n                commonClasses.mobileOnly,\n                classes.balanceSubtitle,\n              ])}\n            >\n              {numericalDisplay(ApyToDisplay, ACTION_APY_DECIMALS)}%\n            </span>\n          </div>\n        </Grid>\n\n        {/* APY (mobile hidden) */}\n        <Grid\n          item\n          xs={1}\n          sm={3}\n          className={clsx([commonClasses.mobileHide, commonClasses.textCenter])}\n        >\n          <div className={clsx([classes.balance])}>\n            {cTokenStore?.hasBeenInitialized ? (\n              <div>{numericalDisplay(ApyToDisplay, ACTION_APY_DECIMALS)}</div>\n            ) : (\n              <Skeleton animation={\"wave\"} />\n            )}\n          </div>\n        </Grid>\n\n        {/* Wallet */}\n        <Grid item xs={5} sm={3} className={clsx([commonClasses.textCenter])}>\n          <div className={clsx([classes.balance])}>\n            <div>\n              <Typography component={\"span\"}>\n                {numericalDisplay(\n                  walletBalanceInUnits,\n                  WALLET_BALANCE_DECIMALS\n                )}\n              </Typography>{\" \"}\n              {/* Saving real-estate on smaller screens */}\n              <Typography\n                component={\"span\"}\n                // className={clsx([commonClasses.mobileHide])}\n              >\n                {symbol}\n              </Typography>\n            </div>\n            {showActionUnits && (\n              <span\n                className={clsx([\n                  // commonClasses.mobileOnly,\n                  classes.balanceSubtitle,\n                ])}\n              >\n                {numericalDisplay(unitsToDisplay, UNITS_TO_DISPLAY_DECIMALS)}{\" \"}\n                {unitsText}\n              </span>\n            )}\n          </div>\n        </Grid>\n\n        {/* Collateral / Liquidity */}\n        <Grid item xs={3} sm={2} className={clsx([commonClasses.textRight])}>\n          <div className={clsx([classes.balance])}>\n            {collateralLiquidityOrLoading}\n          </div>\n        </Grid>\n      </a>\n    );\n  }\n);\n","import React, { FunctionComponent, SFC } from \"react\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport clsx from \"clsx\";\nimport { TAssetInMarketGist, TMarketType } from \"./types\";\nimport { useCommonClasses } from \"../../../../theme/commonClasses\";\nimport { Panel } from \"../../../../components/panel/Panel\";\nimport { AssetPanelRow } from \"./AssetPanelRow\";\nimport { TAssetInMarketParameters } from \"../../../../services/lendingNetworksService/ILendingNetworksService\";\nimport { TCTokenMetadata } from \"../../../../services/contractsIntegration/CompoundLensService/ICompoundLensService\";\nimport { TEXT_ON_LIGHT } from \"../../../../theme/themeConstants\";\n\ninterface IProps {\n  header: string;\n  marketType: TMarketType;\n  assetsInMarket: TAssetInMarketParameters[];\n  // Symbol -> balanceInUnits\n  userBalancesInUnits: Record<string, number>;\n  marketsUserIsIn: string[];\n\n  /**\n   *  Asset 'collateral' flag toggle is clicked (user want to add/remove asset from being used as collateral)\n   */\n  onCollateralableChange: (\n    baseAssetAddress: string,\n    newCollaterableValue: boolean\n  ) => void;\n\n  /**\n   *  Asset row is clicked (user want to interact with this asset's market)\n   */\n  onAssetSelected: (baseAssetAddress: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  panelHeader: {\n    display: \"flex\",\n    flexFlow: \"inherit\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    fontSize: \"1.1rem\",\n    padding: \"1rem 1.75rem\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n    color: TEXT_ON_LIGHT,\n  },\n  zeroMargin: {\n    margin: 0,\n  },\n  assetsList: {},\n  panelLabels: {\n    // display: \"flex\",\n    padding: \"1rem 1.75rem\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n    alignItems: \"center\",\n  },\n  assets: {},\n}));\n\n// export const MarketsPanel = React.memo<IProps>((props) => {\nexport const MarketsPanel: FunctionComponent<IProps> = (props) => {\n  const classes = useStyles();\n  const commonClasses = useCommonClasses();\n  const {\n    header,\n    marketType,\n    assetsInMarket,\n    userBalancesInUnits,\n    marketsUserIsIn,\n    onCollateralableChange,\n    onAssetSelected,\n  } = props;\n\n  console.log(`Building markets panel ${header}`);\n\n  return (\n    <Panel>\n      <div className={classes.panelHeader}>\n        <h4 className={classes.zeroMargin}>{header}</h4>\n      </div>\n      <div className={classes.assetsList}>\n        <Grid container direction={\"row\"} className={classes.panelLabels}>\n          {/* Asset */}\n          <Grid item xs={4} sm={4}>\n            <label className={commonClasses.label}>Asset</label>\n          </Grid>\n\n          {/* APY */}\n          <Grid\n            className={clsx([\n              commonClasses.textCenter,\n              commonClasses.mobileHide,\n            ])}\n            item\n            xs={false}\n            sm={3}\n          >\n            <label className={clsx([commonClasses.label])}>APY</label>\n          </Grid>\n\n          {/* WALLET */}\n          <Grid className={commonClasses.textCenter} item xs={5} sm={3}>\n            <label\n              className={clsx([commonClasses.label, commonClasses.textRight])}\n            >\n              Wallet\n            </label>\n          </Grid>\n\n          {/* Collateral/Liquidity */}\n          <Grid className={commonClasses.textRight} item xs={3} sm={2}>\n            <label\n              className={clsx([commonClasses.label, commonClasses.textRight])}\n            >\n              {marketType === \"supply\" ? \"Collateral\" : \"Liquidity\"}\n            </label>\n          </Grid>\n        </Grid>\n\n        <div className={classes.assets}>\n          {assetsInMarket.map((asset) => (\n            <AssetPanelRow\n              marketType={marketType}\n              assetSummary={asset}\n              unitsInWallet={userBalancesInUnits[asset.symbol] || 0}\n              key={asset.symbol}\n              onCollateralableChange={onCollateralableChange}\n              onAssetSelected={onAssetSelected}\n            />\n          ))}\n        </div>\n      </div>\n    </Panel>\n  );\n};\n","import { makeStyles, Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { observer } from \"mobx-react\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { SingleLNStore } from \"../../../../store/multiInstanceStores/SingleLNStore\";\nimport { MarketsPanel } from \"./MarketsPanel\";\nimport { ContentContainer } from \"../../../../components/structure/ContentContainer\";\nimport {\n  useAccountStore,\n  useActiveLendingNetworkStore,\n  useModalsStore,\n} from \"../../../../store/storeHooks\";\nimport { TAssetInMarketParameters } from \"../../../../services/lendingNetworksService/ILendingNetworksService\";\nimport { TCTokenMetadata } from \"../../../../services/contractsIntegration/CompoundLensService/ICompoundLensService\";\n\nconst useStyles = makeStyles((theme) => ({\n  interfaceContainer: {\n    \"--alertHeight\": \"0px\",\n    // TODO : Understand this calculation\n    // minHeight: \"calc(100vh - 82px - 23rem + 34px - var(--alertHeight))\",\n  },\n  row: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    marginRight: \"-0.665rem\",\n    marginLeft: \"-0.665rem\",\n  },\n  marketsColumn: {\n    flexBasis: \"100%\",\n    padding: \"0 0.665rem\",\n    // DEV_NOTE : Original : @media (min-width: 40em)\n    [theme.breakpoints.up(\"sm\")]: {\n      flexBasis: \"50%\",\n      maxWidth: \"50%\",\n    },\n\n    // Same as 'Panel'\n    marginBottom: \"1.33rem\",\n  },\n}));\n\ninterface IProps {}\nexport const MarketsSection: React.FC<IProps> = observer((props) => {\n  const classes = useStyles();\n  const [error, setError] = React.useState<string | null>(null);\n\n  const accountStore = useAccountStore();\n  const modalsStore = useModalsStore();\n  const lnStore = useActiveLendingNetworkStore();\n\n  const onCollateralableChange = useCallback(\n    async (baseAssetAddress: string, newCollaterableValue: boolean) => {\n      modalsStore.showCollateralModal(baseAssetAddress);\n      // if (!lnStore) {\n      //   return;\n      // }\n      //\n      // // TODO : Make this tx handling better\n      // if (newCollaterableValue) {\n      //   console.log(`Entered market request - ${baseAssetAddress}`);\n      //   await lnStore.enterMarket(baseAssetAddress);\n      //   console.log(\"Entered market\");\n      // } else {\n      //   await lnStore.exitMarket(baseAssetAddress);\n      //   console.log(\"Left market\");\n      // }\n    },\n    [modalsStore]\n  );\n\n  const getPayloadForMarketInteractionModal = useCallback(\n    (baseAssetAddress: string) => {\n      if (!lnStore) {\n        return {\n          cTokenMeta: undefined,\n          assetParameters: undefined,\n        };\n      }\n      const cTokenStore = lnStore.baseAssetsToCTokenStore.get(baseAssetAddress);\n      const assetParameters = lnStore.assetsParams.find(\n        (assetParam) => assetParam.address === baseAssetAddress\n      );\n\n      if (!assetParameters) {\n        console.error(`No asset parameters found for ${baseAssetAddress}`);\n      } else if (!cTokenStore) {\n        console.error(`No cToken meta found for ${baseAssetAddress}`);\n      }\n\n      const payload: {\n        assetParameters: TAssetInMarketParameters | undefined;\n        cTokenMeta: TCTokenMetadata | undefined;\n      } = {\n        assetParameters,\n        cTokenMeta: undefined,\n      };\n\n      return payload;\n    },\n    [lnStore]\n  );\n\n  const onSupplyAssetSelected = useCallback(\n    (baseAssetAddress: string) => {\n      modalsStore.showSupplyModal(baseAssetAddress);\n    },\n    [modalsStore]\n  );\n\n  const onBorrowAssetSelected = useCallback(\n    (baseAssetAddress: string) => {\n      modalsStore.showBorrowModal(baseAssetAddress);\n    },\n    [modalsStore]\n  );\n\n  // React.useEffect(() => {\n  //   if (lendingNetworkStore && lendingNetworkStore.tokens === null) {\n  //     let cancel = false;\n  //     const fetch = async () => {\n  //       if (!cancel) {\n  //         try {\n  //           await lendingNetworkStore.loadCTokenMetadata();\n  //         } catch (e) {\n  //           setError(\n  //             `Unable to fetch the tokens data of network \"${lendingNetworkStore.id}\"`\n  //           );\n  //         }\n  //       }\n  //     };\n  //\n  //     fetch();\n  //     return () => {\n  //       cancel = true;\n  //     };\n  //   }\n  // }, [lendingNetworkStore]);\n\n  // if (lendingNetworkStore.assetsGists === null) {\n  //   return <div style={{ color: \"white\" }}>Loading tokens meta data...</div>;\n  // }\n\n  if (error) {\n    return <Typography style={{ color: \"white\" }}>Error: {error}</Typography>;\n  }\n\n  if (!lnStore) {\n    return <Typography style={{ color: \"white\" }}>Initializing...</Typography>;\n  }\n\n  return (\n    <ContentContainer>\n      <section>\n        <div className={clsx([classes.interfaceContainer, classes.row])}>\n          {/* Supply(/Withdraw) */}\n          <div className={classes.marketsColumn}>\n            <MarketsPanel\n              header={\"Supply Markets\"}\n              marketType={\"supply\"}\n              assetsInMarket={lnStore.assetsParams}\n              userBalancesInUnits={accountStore.symbolsToUnits}\n              marketsUserIsIn={lnStore.marketsUserIsIn}\n              onCollateralableChange={onCollateralableChange}\n              onAssetSelected={onSupplyAssetSelected}\n            />\n          </div>\n          {/* Borrow(/Repay) */}\n          <div className={classes.marketsColumn}>\n            <MarketsPanel\n              header={\"Borrow Markets\"}\n              marketType={\"borrow\"}\n              assetsInMarket={lnStore.assetsParams}\n              userBalancesInUnits={accountStore.symbolsToUnits}\n              marketsUserIsIn={lnStore.marketsUserIsIn}\n              onCollateralableChange={onCollateralableChange}\n              onAssetSelected={onBorrowAssetSelected}\n            />\n          </div>\n        </div>\n      </section>\n    </ContentContainer>\n  );\n});\n","import React from \"react\";\n// @ts-ignore\nimport AnimatedNumber from \"animated-number-react\";\n\ninterface IProps {\n  value: number;\n}\n\nfunction standardSumFormat(n: number) {\n  return (+n.toFixed(2)).toLocaleString();\n}\n\nexport const AnimatedNumberText = React.memo<IProps>((props) => {\n  const { value } = props;\n\n  return <AnimatedNumber value={value} formatValue={standardSumFormat} />;\n});\n","import { makeStyles, Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport {\n  AFFIRMATIVE_GREEN_COLOR,\n  DEAFFIRMATIVE_RED_COLOR,\n} from \"../../theme/themeConstants\";\nimport { AnimatedNumberText } from \"../AnimatedNumberText/AnimatedNumberText\";\n\ninterface IProps {\n  titleText: string;\n  sum: number;\n  isSupply: boolean;\n  alignLeft: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headline: {\n    fontSize: \"1.6rem\",\n    fontWeight: 300,\n    color: \"#ffffff\",\n    marginTop: \"0.7rem\",\n  },\n  textCenter: {\n    textAlign: \"center\",\n  },\n  textLeft: {\n    textAlign: \"left\",\n  },\n  label: {\n    // fontFamily: \"Haas Grot Text R\",\n    fontStyle: \"medium\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    color: \"#AAB8C1\",\n  },\n  supply: {\n    color: AFFIRMATIVE_GREEN_COLOR,\n  },\n  borrow: {\n    // color: \"#9669ED\",\n    // color: \"#ff8906\",\n    // color: \"#f25f4c\",\n    color: DEAFFIRMATIVE_RED_COLOR,\n  },\n}));\n\nexport const BalanceHeadline = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { titleText, sum, isSupply, alignLeft } = props;\n\n  return (\n    <div className={alignLeft ? classes.textLeft : classes.textCenter}>\n      <label\n        className={clsx([\n          classes.label,\n          isSupply ? classes.supply : classes.borrow,\n        ])}\n      >\n        {titleText}\n      </label>\n      {/* TODO : Add the digits CSS */}\n      <div className={classes.headline}>\n        $\n        <AnimatedNumberText value={sum} />\n        {/*{sum.toLocaleString()}*/}\n      </div>\n    </div>\n  );\n});\n","import React, { SVGProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { AFFIRMATIVE_GREEN_COLOR } from \"../../theme/themeConstants\";\nimport clsx from \"clsx\";\n\ninterface IProps {\n  dimension: number;\n  strokeWidth: number;\n  strokeWidthFactor: number;\n  strokeColor: string;\n\n  // 0%-100%\n  fillPercentage: number;\n\n  antiClockwise?: boolean;\n\n  svgContainerClass?: string;\n  svgCircleClass?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  completionCircle: {\n    // stroke: \"white\",\n    stroke: AFFIRMATIVE_GREEN_COLOR,\n    transition: \"stroke-dashoffset 0.35s\",\n\n    transform: \"rotate(-90deg)\",\n    transformOrigin: \"50% 50%\",\n  },\n}));\n\nexport const CompletionCircle = React.memo<IProps & SVGProps<SVGSVGElement>>(\n  (props) => {\n    const classes = useStyles();\n    const {\n      dimension,\n      strokeWidth,\n      strokeWidthFactor,\n      strokeColor,\n      fillPercentage,\n      antiClockwise,\n      svgCircleClass,\n      svgContainerClass,\n      ...svgProps\n    } = props;\n\n    const height = dimension;\n    const width = dimension;\n    const centerOffset = dimension / 2;\n    const radius = width / 2 - strokeWidth * 2;\n    const circumference = radius * 2 * Math.PI;\n    const calculationOffset =\n      circumference - (fillPercentage / 100) * circumference;\n    const offSetByDirection = antiClockwise\n      ? -calculationOffset\n      : calculationOffset;\n\n    const strokeWidthToUSe = strokeWidth * strokeWidthFactor;\n\n    return (\n      <svg height={height} width={width} className={svgContainerClass}>\n        <circle\n          className={clsx([classes.completionCircle, svgCircleClass])}\n          stroke-width={strokeWidthToUSe}\n          fill={\"transparent\"}\n          r={radius}\n          cx={centerOffset}\n          cy={centerOffset}\n          style={{\n            // strokeWidth: strokeWidth,\n            strokeDashoffset: offSetByDirection,\n            strokeDasharray: `${circumference} ${circumference}`,\n            stroke: strokeColor,\n          }}\n        />\n      </svg>\n    );\n  }\n);\n","import { makeStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport React, { useRef } from \"react\";\nimport useHover from \"@react-hook/hover\";\nimport Color from \"color\";\nimport {\n  AFFIRMATIVE_GREEN_COLOR,\n  DEAFFIRMATIVE_RED_COLOR,\n} from \"../../theme/themeConstants\";\nimport { CompletionCircle } from \"../completionCircle/CompletionCircle\";\nimport { useFocus } from \"react-aria\";\nimport { useBoolean } from \"react-hanger\";\n\ninterface IProps {\n  // Texts\n  baseTitle: string;\n  activeTitle: string;\n  baseMessage: string;\n  activeMessage: string;\n\n  // Completion circle\n  primaryCompletionPercentage: number;\n  secondaryCompletionPercentage: number;\n}\n\nconst dimension = 140;\nconst width = dimension;\nconst strokeWidth = 4;\nconst radius = width / 2 - strokeWidth * 2;\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    // TODO : decrease by 20 when in small screen\n    height: \"140px\",\n    width: \"140px\",\n    position: \"relative\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"140px\",\n      width: \"140px\",\n    },\n  },\n  netApy: {},\n  descriptionCircle: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    height: radius * 2,\n    width: radius * 2,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    margin: \"auto\",\n    // margin: \"0.1875rem\",\n    // margin: strokeWidth * 3,\n    // backgroundColor: \"#070A0E\",\n    backgroundColor: theme.palette.background.default,\n    borderRadius: \"50%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0.25rem\",\n\n    \"&:hover\": {\n      // backgroundColor: \"rgba(20, 30, 39, 0.98)\",\n      backgroundColor: Color.rgb(theme.palette.background.default)\n        .lighten(0.2)\n        .hex(),\n    },\n  },\n  descriptionCircle_active: {\n    backgroundColor: \"rgba(20, 30, 39, 0.98)\",\n  },\n  label: {\n    textAlign: \"center\",\n    color: \"#657786\",\n\n    // fontFamily: \"Haas Grot Text R\",\n    fontStyle: \"medium\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    // color: \"#AAB8C1\",\n  },\n  label_active: {\n    color: \"white\",\n  },\n  headline: {\n    fontWeight: 300,\n    color: \"#ffffff\",\n    marginTop: \"0.7rem\",\n    textAlign: \"center\",\n  },\n  headline_inactive: {\n    fontSize: \"1.6rem\",\n  },\n  headline_active: {\n    color: \"#F9FAFB\",\n    fontSize: \"12px\",\n    textAlign: \"center\",\n  },\n\n  supplyCircle: {\n    // stroke: \"white\",\n    stroke: AFFIRMATIVE_GREEN_COLOR,\n    transition: \"stroke-dashoffset 0.35s\",\n\n    transform: \"rotate(-90deg)\",\n    transformOrigin: \"50% 50%\",\n  },\n\n  svgContainer: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  svgCircle: {\n    // \"&:hover\": {\n    //   strokeWidth: strokeWidth * 1.5,\n    // },\n  },\n}));\n\nexport const DualCompletionCircle: React.FC<IProps> = (props) => {\n  const classes = useStyles();\n  const {\n    baseMessage,\n    baseTitle,\n    activeMessage,\n    activeTitle,\n    primaryCompletionPercentage,\n    secondaryCompletionPercentage,\n  } = props;\n\n  // TODO : Add 'click detect' to keep same behavior on mobile\n  const hoverTargetRef = useRef<HTMLDivElement>(null);\n  const isHovering = useHover(hoverTargetRef);\n  const isFocusedWrapper = useBoolean(false);\n\n  const showActive = isHovering || isFocusedWrapper.value;\n\n  const title = showActive ? activeTitle : baseTitle;\n  const message = showActive ? activeMessage : baseMessage;\n\n  const strokeFactorToUse = 1;\n\n  return (\n    <div\n      className={classes.mainContainer}\n      ref={hoverTargetRef}\n      // onClick={(event) => hoverTargetRef.current?.focus()}\n      onTouchStart={(event) => isFocusedWrapper.toggle()}\n    >\n      <div\n        className={clsx([\n          classes.descriptionCircle,\n          isHovering ? classes.descriptionCircle_active : false,\n        ])}\n      >\n        <label\n          className={clsx([\n            classes.label,\n            isHovering ? classes.label_active : false,\n          ])}\n        >\n          {title}\n        </label>\n        <div\n          className={clsx([\n            classes.headline,\n            isHovering ? classes.headline_active : classes.headline,\n          ])}\n        >\n          {message}\n        </div>\n      </div>\n      <CompletionCircle\n        strokeColor={AFFIRMATIVE_GREEN_COLOR}\n        strokeWidth={strokeWidth}\n        strokeWidthFactor={strokeFactorToUse}\n        dimension={dimension}\n        fillPercentage={primaryCompletionPercentage}\n        svgCircleClass={clsx([classes.svgCircle])}\n        svgContainerClass={classes.svgContainer}\n      />\n      <CompletionCircle\n        strokeColor={DEAFFIRMATIVE_RED_COLOR}\n        strokeWidth={strokeWidth}\n        strokeWidthFactor={strokeFactorToUse}\n        dimension={dimension}\n        fillPercentage={secondaryCompletionPercentage}\n        // antiClockwise\n        svgCircleClass={clsx([classes.svgCircle])}\n        svgContainerClass={classes.svgContainer}\n      />\n    </div>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport React, { useRef } from \"react\";\nimport useHover from \"@react-hook/hover\";\nimport {\n  AFFIRMATIVE_GREEN_COLOR,\n  DEAFFIRMATIVE_RED_COLOR,\n} from \"../../../../theme/themeConstants\";\nimport Color from \"color\";\nimport { CompletionCircle } from \"../../../../components/completionCircle/CompletionCircle\";\nimport { DualCompletionCircle } from \"../../../../components/balances/DualCompletionCircle\";\n\ninterface IProps {\n  netApy: number;\n  totalYearlyChangeUsd: number;\n  usedBorrowPercentage: number;\n}\n\nconst dimension = 140;\nconst width = dimension;\nconst strokeWidth = 4;\nconst radius = width / 2 - strokeWidth * 2;\n\nconst useStyles = makeStyles((theme) => ({\n  netApyWrapper: {\n    // TODO : decrease by 20 when in small screen\n    height: \"140px\",\n    width: \"140px\",\n    position: \"relative\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"140px\",\n      width: \"140px\",\n    },\n  },\n  netApy: {},\n  netApyDescription: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    height: radius * 2,\n    width: radius * 2,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    margin: \"auto\",\n    // margin: \"0.1875rem\",\n    // margin: strokeWidth * 3,\n    // backgroundColor: \"#070A0E\",\n    backgroundColor: theme.palette.background.default,\n    borderRadius: \"50%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0.25rem\",\n\n    \"&:hover\": {\n      // backgroundColor: \"rgba(20, 30, 39, 0.98)\",\n      backgroundColor: Color.rgb(theme.palette.background.default)\n        .lighten(0.2)\n        .hex(),\n    },\n  },\n  netApyDescription_Active: {\n    backgroundColor: \"rgba(20, 30, 39, 0.98)\",\n  },\n  label: {\n    textAlign: \"center\",\n    color: \"#657786\",\n\n    // fontFamily: \"Haas Grot Text R\",\n    fontStyle: \"medium\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    // color: \"#AAB8C1\",\n  },\n  label_active: {\n    color: \"white\",\n  },\n  headline: {\n    fontWeight: 300,\n    color: \"#ffffff\",\n    marginTop: \"0.7rem\",\n  },\n  headline_inactive: {\n    fontSize: \"1.6rem\",\n  },\n  headline_active: {\n    color: \"#F9FAFB\",\n    fontSize: \"12px\",\n    textAlign: \"center\",\n  },\n\n  supplyCircle: {\n    // stroke: \"white\",\n    stroke: AFFIRMATIVE_GREEN_COLOR,\n    transition: \"stroke-dashoffset 0.35s\",\n\n    transform: \"rotate(-90deg)\",\n    transformOrigin: \"50% 50%\",\n  },\n\n  svgContainer: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  svgCircle: {\n    // \"&:hover\": {\n    //   strokeWidth: strokeWidth * 1.5,\n    // },\n  },\n}));\n\nexport const PositionNetApy: React.FC<IProps> = (props) => {\n  const classes = useStyles();\n  const { netApy, totalYearlyChangeUsd, usedBorrowPercentage } = props;\n\n  const isEarning = netApy > 0;\n  const apyOrApr = isEarning ? \"APY\" : \"APR\";\n  const apyDirectionMessage = `Net ${apyOrApr}`;\n  const earnedOrPaid = isEarning ? \"earned interest\" : \"paid interest\";\n\n  const netApyStringified = (+netApy.toFixed(2)).toLocaleString();\n  const totalYearlyChangeUsdStringified = (+totalYearlyChangeUsd.toFixed(\n    2\n  )).toLocaleString();\n\n  return (\n    <DualCompletionCircle\n      // Supply is always showed as 100\n      primaryCompletionPercentage={100}\n      secondaryCompletionPercentage={usedBorrowPercentage}\n      baseTitle={apyDirectionMessage}\n      activeTitle={`${totalYearlyChangeUsdStringified} $`}\n      baseMessage={`${netApyStringified}%`}\n      activeMessage={`Anticipated yearly ${earnedOrPaid}`}\n    />\n  );\n};\n","import React, { ComponentType } from \"react\";\nimport { Grid, Hidden, makeStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\ninterface IProps {\n  mainComponent: JSX.Element;\n  balancesSupply: JSX.Element;\n  balancesBorrow: JSX.Element;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  content: {},\n  row: {\n    // marginRight: \"-0.665rem\",\n    // marginLeft: \"-0.665rem\",\n  },\n  alignMiddle: {\n    alignItems: \"center\",\n  },\n  textCenter: {\n    textAlign: \"center\",\n  },\n  column: {\n    padding: \"0 0.665rem\",\n  },\n}));\n\n/**\n * Sets the fluid structure of the \"Hero balances\"\n */\nexport const HeroBalancesContainer = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { balancesSupply, balancesBorrow, mainComponent } = props;\n\n  return (\n    <div className={classes.content}>\n      {/* Large */}\n      <Hidden xsDown>\n        <Grid\n          container\n          direction={\"row\"}\n          className={clsx([classes.row, classes.alignMiddle])}\n        >\n          <Grid\n            className={classes.column}\n            item\n            container\n            direction={\"column\"}\n            xs={5}\n          >\n            {balancesSupply}\n          </Grid>\n\n          <Grid\n            className={classes.column}\n            container\n            item\n            direction={\"column\"}\n            xs={2}\n          >\n            {mainComponent}\n          </Grid>\n\n          <Grid\n            className={classes.column}\n            container\n            item\n            direction={\"column\"}\n            xs={5}\n          >\n            {balancesBorrow}\n          </Grid>\n        </Grid>\n      </Hidden>\n\n      {/* Mobile */}\n      <Hidden smUp>\n        <Grid\n          container\n          direction={\"row\"}\n          className={clsx([classes.row, classes.alignMiddle])}\n        >\n          <Grid className={classes.column} item xs={6}>\n            {mainComponent}\n          </Grid>\n\n          <Grid\n            className={clsx([classes.column, classes.textCenter])}\n            item\n            xs={6}\n          >\n            {balancesSupply}\n            <br />\n            {balancesBorrow}\n          </Grid>\n        </Grid>\n      </Hidden>\n    </div>\n  );\n});\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { BalanceHeadline } from \"../../../../components/balances/BalanceHeadline\";\nimport { PositionNetApy } from \"./PositionNetApy\";\nimport { HeroBalancesContainer } from \"../../../../components/structure/hero/HeroBalancesContainer\";\n\ninterface IProps {\n  supplyBalanceUsd: number;\n  borrowBalanceUsd: number;\n  netApy: number;\n  totalYearlyChangeUsd: number;\n  usedBorrowPercentage: number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  balancesTotal: {},\n}));\n\nexport const PositionTotalBalances = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    borrowBalanceUsd,\n    supplyBalanceUsd,\n    usedBorrowPercentage,\n    netApy,\n    totalYearlyChangeUsd,\n  } = props;\n\n  const supplyBalancesComponent = useMemo(() => {\n    return (\n      <BalanceHeadline\n        sum={supplyBalanceUsd}\n        titleText={\"Supply balance\"}\n        isSupply={true}\n        alignLeft={false}\n      />\n    );\n  }, [supplyBalanceUsd]);\n\n  const borrowBalancesComponent = useMemo(() => {\n    return (\n      <BalanceHeadline\n        sum={borrowBalanceUsd}\n        titleText={\"Borrow balance\"}\n        isSupply={false}\n        alignLeft={false}\n      />\n    );\n  }, [borrowBalanceUsd]);\n\n  const mainComponent = useMemo(() => {\n    return (\n      <PositionNetApy\n        netApy={netApy}\n        totalYearlyChangeUsd={totalYearlyChangeUsd}\n        usedBorrowPercentage={usedBorrowPercentage}\n      />\n    );\n  }, [netApy, totalYearlyChangeUsd, usedBorrowPercentage]);\n\n  return (\n    <HeroBalancesContainer\n      balancesBorrow={borrowBalancesComponent}\n      balancesSupply={supplyBalancesComponent}\n      mainComponent={mainComponent}\n    />\n  );\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  hero: {\n    // background: \"#070A0E\",\n    backgroundColor: theme.palette.background.default,\n    marginBottom: \"-3.75rem\",\n    padding: \"1.2635rem 0 7.315rem\",\n  },\n}));\n\nexport const Hero = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children } = props;\n\n  return <section className={classes.hero}>{children}</section>;\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  heroContentContainer: {\n    position: \"relative\",\n    maxWidth: \"60em\",\n    margin: \"0 auto\",\n    [theme.breakpoints.down(\"xs\")]: {\n      margin: \"0 1.33rem\",\n    },\n  },\n}));\n\nexport const HeroContentContainer = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children } = props;\n\n  return <div className={classes.heroContentContainer}>{children}</div>;\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport clsx from \"clsx\";\nimport { AFFIRMATIVE_GREEN_COLOR } from \"../../../../theme/themeConstants\";\nimport { AnimatedNumberText } from \"../../../../components/AnimatedNumberText/AnimatedNumberText\";\n\ninterface IProps {\n  usedBorrowPercentage: number;\n  collateralPotentialInUSD: number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  limitBar: {\n    display: \"flex\",\n    marginTop: \"3.25rem\",\n  },\n  label: {\n    // fontFamily: \"Haas Grot Text R\",\n    fontStyle: \"medium\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    color: \"#AAB8C1\",\n  },\n  limitBarLabel: {\n    color: \"#657786\",\n    // marginTop: \"0.7rem\",\n    // marginRight: \"0.625rem\",\n    marginTop: \"0.7rem\",\n    marginRight: \"0.625rem\",\n    \"&:last-of-type\": {\n      marginRight: 0,\n      marginLeft: \"0.625rem\",\n    },\n  },\n  progressBarWrapper: {\n    position: \"relative\",\n    flex: \"1 1\",\n  },\n  progress_bar_green: {\n    display: \"flex\",\n    backgroundColor: AFFIRMATIVE_GREEN_COLOR,\n  },\n  progress: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flex: \"1 1\",\n    height: \"5px\",\n    maxWidth: \"100%\",\n    overflow: \"hidden\",\n    backgroundColor: \"rgba(40, 49, 55, 0.1)\",\n    borderRadius: \"100px\",\n    marginTop: \"1rem\",\n  },\n  dark_clear: {\n    background: \"rgba(54, 61, 68, 0.5)\",\n  },\n  thin: {\n    height: \"3px\",\n  },\n  progress_bar_percent_label: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n  },\n  p: {\n    position: \"relative\",\n    float: \"right\",\n    marginRight: \"-0.7rem\",\n    color: \"#ffffff\",\n    padding: \"0.3rem 0.3rem 0.25rem 0.25rem\",\n    backgroundColor: \"#070A0E\",\n  },\n  small: {\n    fontSize: \"12px\",\n  },\n  progress_bar_hover_space: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"10px\",\n    marginTop: \"1rem\",\n  },\n}));\n\nexport const BorrowLimitBar = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { usedBorrowPercentage, collateralPotentialInUSD } = props;\n\n  // TODO : Add tooltip\n\n  return (\n    <div className={classes.limitBar}>\n      <label className={clsx([classes.label, classes.limitBarLabel])}>\n        Borrow Limit (<AnimatedNumberText value={usedBorrowPercentage} />\n        %)\n      </label>\n      <div className={classes.progressBarWrapper}>\n        {/*<div className=\"progress dark-clear thin\">*/}\n        <div\n          className={clsx([classes.progress, classes.dark_clear, classes.thin])}\n        >\n          <div\n            role=\"progressbar\"\n            aria-valuemin={0}\n            aria-valuemax={100}\n            className={classes.progress_bar_green}\n            style={{ width: `${usedBorrowPercentage}%` }}\n          />\n        </div>\n\n        <div className={classes.progress_bar_percent_label}>\n          <div\n            style={{\n              minWidth: \"1%\",\n              maxWidth: \"99%\",\n              width: `${usedBorrowPercentage}%`,\n            }}\n          >\n            {/*<p className={clsx([classes.p, classes.small])}>*/}\n            {/*  {usedBorrowPercentage.toFixed(2)}%*/}\n            {/*</p>*/}\n          </div>\n        </div>\n\n        <div className={classes.progress_bar_hover_space}></div>\n      </div>\n      <label className={clsx([classes.label, classes.limitBarLabel])}>\n        $\n        <AnimatedNumberText value={collateralPotentialInUSD} />\n        {/*{\" \"}*/}\n        {/*$ {collateralPotentialInUSD.toFixed(2)}*/}\n      </label>\n    </div>\n  );\n});\n","import { makeStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport { PositionTotalBalances } from \"./PositionTotalBalances\";\nimport { useActiveLendingNetworkStore } from \"../../../../store/storeHooks\";\nimport { observer } from \"mobx-react\";\nimport { Hero } from \"../../../../components/structure/hero/Hero\";\nimport { HeroContentContainer } from \"../../../../components/structure/hero/HeroContentContainer\";\nimport { BorrowLimitBar } from \"./BorrowLimitBar\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport const PositionOverview = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const classes = useStyles();\n\n    const lnStore = useActiveLendingNetworkStore();\n\n    const supplyBalanceUsd = lnStore?.totalAccountSupplyBalanceUsd || 0;\n    const borrowBalanceUsd = lnStore?.totalAccountBorrowBalanceUsd || 0;\n    const netApy = lnStore?.netAccountApy || 0;\n    const totalYearlyChangeUsd = lnStore?.totalAccountYearlyChangeUsd || 0;\n    const collateralPotentialInUSD =\n      lnStore?.accountCollateralPotentialInUSD || 0;\n    const usedBorrowPercentage = lnStore?.accountUsedBorrowPercentage || 0;\n\n    return (\n      <Hero>\n        <HeroContentContainer>\n          <PositionTotalBalances\n            supplyBalanceUsd={supplyBalanceUsd}\n            borrowBalanceUsd={borrowBalanceUsd}\n            netApy={netApy}\n            totalYearlyChangeUsd={totalYearlyChangeUsd}\n            usedBorrowPercentage={usedBorrowPercentage}\n          />\n          <BorrowLimitBar\n            usedBorrowPercentage={usedBorrowPercentage}\n            collateralPotentialInUSD={collateralPotentialInUSD}\n          />\n        </HeroContentContainer>\n      </Hero>\n    );\n  }\n);\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { SingleLNStore } from \"../../../store/multiInstanceStores/SingleLNStore\";\nimport { MarketsSection } from \"./markets/MarketsSection\";\nimport { PositionOverview } from \"./positionOverview/PositionOverview\";\nimport { useActiveLendingNetworkStore } from \"../../../store/storeHooks\";\n\ninterface IProps {}\n\nexport const MainLendingNetworkTab = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    return (\n      <>\n        <PositionOverview />\n        <MarketsSection />\n      </>\n    );\n  }\n);\n","import React from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\n\ninterface IProps {\n  text: string;\n  onClick: () => void;\n  disabled?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport const ModalActionButton = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { text, onClick, disabled } = props;\n\n  console.log(\"Building button\");\n\n  return (\n    <Button\n      variant={\"contained\"}\n      fullWidth\n      disabled={disabled}\n      onClick={onClick}\n      color={\"primary\"}\n    >\n      {text}\n    </Button>\n  );\n});\n","import React from \"react\";\nimport {\n  Collapse,\n  Fade,\n  Grow,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { TokenIcon } from \"../../../../icons/TokenIcon\";\nimport { AnimatedNumberText } from \"../../../../AnimatedNumberText/AnimatedNumberText\";\n\nexport type TRatesRow = {\n  label: string;\n  value: number;\n  valuePrefix?: string;\n  valueSuffix?: string;\n  tokenSymbol?: string;\n\n  // Predicted value\n  displayPredictedValues?: boolean;\n  predictedValue?: number;\n};\n\ninterface IProps {\n  title: string;\n  subTitle?: string;\n\n  rateRows: TRatesRow[];\n\n  // Styling\n  bottomBorder?: boolean;\n}\n\nconst GRAYISH_TEXT = \"#AAB8C1\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"stretch\",\n  },\n\n  rateRow: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n    padding: \"0.5rem\",\n  },\n\n  bottomBorder: {\n    borderBottom: \"1px solid #CCD6DD\",\n  },\n  heavyBottomBorder: {\n    borderBottom: \"1px solid rgb(20, 30, 39)\",\n  },\n  symbolIcon: {\n    marginRight: \"0.25rem\",\n  },\n  labelText: {\n    // Push to the right\n    color: GRAYISH_TEXT,\n  },\n  valueText: {\n    // Push to the right\n    // marginLeft: \"auto\",\n    color: theme.palette.text.primary,\n  },\n}));\n\nexport const BaseRates = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { title, subTitle, rateRows, bottomBorder } = props;\n\n  const arrowText = \"->\";\n\n  return (\n    <div\n      className={clsx([\n        classes.container,\n        bottomBorder ? classes.heavyBottomBorder : null,\n      ])}\n    >\n      <Typography>{title}</Typography>\n      {subTitle && <Typography variant={\"caption\"}>{subTitle}</Typography>}\n      {rateRows.map((rateRow, index) => {\n        const isLast = index === rateRows.length;\n        const predictedValue = rateRow?.predictedValue || 0;\n\n        return (\n          <div\n            className={clsx([\n              classes.rateRow,\n              isLast ? null : classes.bottomBorder,\n            ])}\n            key={`${rateRow.tokenSymbol}_${rateRow.label}`}\n          >\n            {rateRow.tokenSymbol && (\n              <TokenIcon\n                symbol={rateRow.tokenSymbol}\n                extraClasses={[classes.symbolIcon]}\n              />\n            )}\n            {/* Label */}\n            <Typography className={classes.labelText}>\n              {rateRow.label}\n            </Typography>\n            <div></div>\n            <Typography\n              className={classes.valueText}\n              style={{ marginLeft: \"auto\" }}\n            >\n              {(+rateRow.value.toFixed(2)).toLocaleString()}\n              {\"  \"}\n              {!rateRow.displayPredictedValues && rateRow.valueSuffix}\n            </Typography>\n\n            {rateRow.displayPredictedValues && (\n              <>\n                <Typography className={classes.valueText}>\n                  {\"   \"}\n                  {arrowText}\n                  {/*{rateRow.valuePrefix}*/}\n                  {(+predictedValue.toFixed(2)).toLocaleString()}\n                  {\"  \"}\n                  {rateRow.valueSuffix}\n                </Typography>\n              </>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n});\n","import React, { useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { BaseRates, TRatesRow } from \"./BaseRates\";\n\ninterface IProps {\n  actionName: string;\n  assetSymbol: string;\n  assetSupplyApy: number;\n  distributionAssetSymbol: string;\n  distributionAssetApy: number;\n}\n\nexport const ActionRates = React.memo<IProps>((props) => {\n  const {\n    actionName,\n    assetSymbol,\n    assetSupplyApy,\n    distributionAssetSymbol,\n    distributionAssetApy,\n  } = props;\n\n  const rateRows = useMemo<TRatesRow[]>(() => {\n    const firstRow: TRatesRow = {\n      label: `${actionName} APY`,\n      tokenSymbol: assetSymbol,\n      value: assetSupplyApy,\n      valueSuffix: \"%\",\n    };\n    const secondRow: TRatesRow = {\n      label: \"Distribution APY\",\n      tokenSymbol: distributionAssetSymbol,\n      value: distributionAssetApy,\n      valueSuffix: \"%\",\n    };\n\n    return [firstRow, secondRow];\n  }, [\n    actionName,\n    assetSupplyApy,\n    assetSymbol,\n    distributionAssetApy,\n    distributionAssetSymbol,\n  ]);\n\n  return <BaseRates title={`${actionName} Rates`} rateRows={rateRows} />;\n});\n","import React, { useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { BaseRates, TRatesRow } from \"./BaseRates\";\n\ninterface IProps {\n  limitOrBalance: \"Limit\" | \"Balance\";\n  borrowLimitUsd: number;\n  borrowLimitUsedPercentage: number;\n  predictedBorrowLimitUsd: number;\n  predictedBorrowLimitPercentage: number;\n  displayPredictedValues?: boolean;\n  note?: string;\n}\n\nexport const BorrowLimitRates = React.memo<IProps>((props) => {\n  const {\n    limitOrBalance,\n    borrowLimitUsd,\n    borrowLimitUsedPercentage,\n    predictedBorrowLimitUsd,\n    predictedBorrowLimitPercentage,\n    displayPredictedValues,\n    note,\n  } = props;\n\n  const rateRows = useMemo<TRatesRow[]>(() => {\n    const firstRow: TRatesRow = {\n      label: `Borrow ${limitOrBalance}`,\n      value: borrowLimitUsd,\n      valueSuffix: \"$\",\n      displayPredictedValues: displayPredictedValues,\n      predictedValue: predictedBorrowLimitUsd,\n    };\n    const secondRow: TRatesRow = {\n      label: \"Borrow Limit Used\",\n      value: borrowLimitUsedPercentage,\n      valueSuffix: \"%\",\n      displayPredictedValues: displayPredictedValues,\n      predictedValue: predictedBorrowLimitPercentage,\n    };\n\n    return [firstRow, secondRow];\n  }, [\n    borrowLimitUsd,\n    borrowLimitUsedPercentage,\n    displayPredictedValues,\n    limitOrBalance,\n    predictedBorrowLimitPercentage,\n    predictedBorrowLimitUsd,\n  ]);\n\n  const title = \"Borrow Limit\";\n  const subTitle = note;\n\n  return (\n    <BaseRates\n      title={title}\n      subTitle={subTitle}\n      rateRows={rateRows}\n      bottomBorder\n    />\n  );\n});\n","import React, { useMemo } from \"react\";\nimport {\n  Button,\n  Fade,\n  IconButton,\n  makeStyles,\n  Modal,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {\n  BRAND_MAIN_COLOR,\n  GRAYISH_TEXT,\n  TEXT_ON_LIGHT,\n} from \"../../../theme/themeConstants\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nexport type TTxWaitingStage = \"USER_APPROVAL\" | \"CONFIRMATION\";\n\ninterface IProps {\n  open: boolean;\n  closeModal: () => void;\n\n  txWaitingStage: TTxWaitingStage;\n  txHash?: string;\n  explorerUrlBaseForTx?: string;\n  explorerName?: string;\n}\n\nconst TOP_DISTANCE_REM = 0.5;\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    maxWidth: \"90%\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n  },\n  txWaitingPanel: {\n    position: \"relative\",\n    width: \"30rem\",\n    maxWidth: \"100%\",\n    backgroundColor: \"#F9FAFB\",\n  },\n  panelHeader: {\n    width: \"100%\",\n    // color: \"#141E27\",\n    color: TEXT_ON_LIGHT,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n\n    padding: `${TOP_DISTANCE_REM * 2}rem`,\n\n    // Mobile\n    [theme.breakpoints.down(\"sm\")]: {\n      // padding: \"1.0rem\",\n      // display: \"flex\",\n      // flexDirection: \"row\",\n      // alignItems: \"center\",\n    },\n  },\n  title: {\n    fontWeight: \"bold\",\n  },\n  tokenIcon: {\n    marginRight: \"0.75rem\",\n    width: \"2.5rem\",\n    height: \"2.5rem\",\n    position: \"fixed\",\n    left: 0,\n  },\n  upperRightCorner: {\n    position: \"absolute\",\n    right: `${TOP_DISTANCE_REM / 2}rem`,\n    top: `${TOP_DISTANCE_REM / 2}rem`,\n    // Mobile\n    [theme.breakpoints.down(\"sm\")]: {\n      right: `${TOP_DISTANCE_REM / 8}rem`,\n      top: `${TOP_DISTANCE_REM / 8}rem`,\n    },\n  },\n  upperLeftCorner: {\n    position: \"absolute\",\n    left: `${TOP_DISTANCE_REM}rem`,\n    top: `${TOP_DISTANCE_REM}rem`,\n  },\n\n  messageContainer: {\n    // paddingTop: \"2rem\",\n    paddingBottom: \"1rem\",\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    textAlign: \"center\",\n\n    color: GRAYISH_TEXT,\n  },\n  explorerLink: {\n    // color: theme.palette.primary.main,\n    color: GRAYISH_TEXT,\n\n    \"&:hover\": {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nexport const TxWaitingModal = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    open,\n    closeModal,\n    txWaitingStage,\n    txHash,\n    explorerUrlBaseForTx,\n    explorerName,\n  } = props;\n  const theme = useTheme();\n\n  const isWaitingForUserApproval = txWaitingStage === \"USER_APPROVAL\";\n  const isWaitingForTxConfirmation = txWaitingStage === \"CONFIRMATION\";\n  const title = isWaitingForUserApproval\n    ? \"Please confirm the transaction\"\n    : // : \"Waiting for the transaction to be mined\";\n      \"Waiting for transaction confirmation\";\n\n  const message = isWaitingForUserApproval\n    ? \"Please approve the tx in your wallet.\"\n    : \"This might take a few moments\";\n\n  const explorerLink = useMemo(() => {\n    if (txHash && explorerUrlBaseForTx) {\n      return `${explorerUrlBaseForTx}/${txHash}`;\n    } else {\n      return null;\n    }\n  }, [explorerUrlBaseForTx, txHash]);\n\n  console.log({ explorerUrlBaseForTx });\n  console.log({ txHash });\n  console.log({ explorerLink });\n\n  return (\n    <Modal open={open} className={classes.modal} onBackdropClick={closeModal}>\n      <Fade in={open}>\n        <div className={classes.txWaitingPanel}>\n          {/* Quick-n-Dirty x button */}\n          <div className={classes.upperRightCorner}>\n            <IconButton onClick={closeModal}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n\n          {/* Header */}\n          <div className={classes.panelHeader}>\n            <Typography variant={\"h6\"} className={classes.title}>\n              {title}\n            </Typography>\n          </div>\n\n          <div className={classes.messageContainer}>\n            <Loader\n              type={isWaitingForUserApproval ? \"ThreeDots\" : \"Rings\"}\n              color={theme.palette.primary.main}\n            />\n            <Typography variant={\"h6\"}>{message}</Typography>\n            {explorerLink && (\n              <a\n                href={explorerLink}\n                target={\"_blank\"}\n                rel={\"noreferrer noopener\"}\n                className={classes.explorerLink}\n              >\n                <Typography variant={\"h6\"}>Open in {explorerName}</Typography>\n              </a>\n            )}\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  );\n});\n","import React, { ReactNode, useMemo } from \"react\";\nimport {\n  Button,\n  Fade,\n  IconButton,\n  makeStyles,\n  Modal,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { TokenIcon } from \"../../../icons/TokenIcon\";\nimport { TModalFooterMessagePayload } from \"./ModalFooter\";\nimport { ModalActionButton } from \"./ModalActionButton\";\nimport { ActionRates } from \"./rates/ActionRates\";\nimport {\n  BACKGROUND_LIGHT_COLOR,\n  BRAND_MAIN_COLOR,\n  TEXT_ON_LIGHT,\n} from \"../../../../theme/themeConstants\";\nimport { BorrowLimitRates } from \"./rates/BorrowLimitRates\";\nimport {\n  TTxWaitingStage,\n  TxWaitingModal,\n} from \"../../txWaitingModal/TxWaitingModal\";\nimport Color from \"color\";\n\nexport type TZeroOrOne = 0 | 1;\n\nexport interface IMarketModalCommonStatePayload {\n  // Tabs\n  currentTabIndex: TZeroOrOne;\n  onTabIndexChange: (newIndex: TZeroOrOne) => void;\n  tab0Title: string;\n  tab1Title: string;\n\n  // Assets\n  actionAssetSymbol: string;\n  actionAssetName: string;\n  distributionAssetSymbol: string;\n  assetExplorerLink: string;\n\n  // Borrow Limit (optional)\n  currentBorrowLimit?: number;\n  usedBorrowLimitPercentage?: number;\n\n  // TX waiting\n  explorerName: string;\n  explorerUrlBaseForTx: string;\n  activeTxHash?: string;\n  waitingForUserApproval?: boolean;\n  waitingForTxConfirmation?: boolean;\n}\n\nexport interface IMarketModalPerTabStatePayload {\n  // Message or input component\n  messageOrInput: ReactNode;\n  showInputActionButton: boolean;\n  inputActionButtonActive: boolean;\n  inputActionButtonText: string;\n  onInputActionButtonPressed?: () => void;\n\n  // Action Rates\n  actionName: \"Borrow\" | \"Supply\";\n  actionApy: number;\n  distributionApy: number;\n\n  // Borrow Limit (optional)\n  showBorrowLimit?: boolean;\n  showPredictedBorrowLimits?: boolean;\n  borrowLimitAfterChange?: number;\n  usedBorrowLimitPercentageAfterChange?: number;\n  borrowLimitNote?: string;\n\n  // Action button\n  actionButtonActive: boolean;\n  actionButtonText: string;\n  actionButtonDisabledText?: string;\n  actionButtonOnClick: () => void;\n\n  // Footer\n  footerMessagesPayloads: TModalFooterMessagePayload[];\n  // footerTitle: string | string[];\n  // footerTokenAmount: number;\n}\n\n// DEV_NOTE : To make it easier to build in parent components\nexport interface IMarketModalStatePayload\n  extends IMarketModalCommonStatePayload,\n    IMarketModalPerTabStatePayload {}\n\ninterface IProps extends IMarketModalStatePayload {\n  open: boolean;\n  closeModal: () => void;\n}\n\nconst TOP_DISTANCE_REM = 0.5;\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: TEXT_ON_LIGHT,\n  },\n  // paper: {\n  //   backgroundColor: theme.palette.background.paper,\n  //   // border: \"2px solid #000\",\n  //   boxShadow: theme.shadows[5],\n  //   padding: theme.spacing(20, 4, 3),\n  // },\n  marketInteractionPanel: {\n    position: \"relative\",\n    width: \"25.5rem\",\n    maxWidth: \"100%\",\n    backgroundColor: BACKGROUND_LIGHT_COLOR,\n  },\n  panelHeader: {\n    width: \"100%\",\n    // color: \"#141E27\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n\n    padding: `${TOP_DISTANCE_REM * 2}rem`,\n\n    // Mobile\n    [theme.breakpoints.down(\"sm\")]: {\n      // padding: \"1.0rem\",\n      // display: \"flex\",\n      // flexDirection: \"row\",\n      // alignItems: \"center\",\n    },\n  },\n  title: {},\n  tokenIcon: {\n    marginRight: \"0.75rem\",\n    width: \"2.5rem\",\n    height: \"2.5rem\",\n    position: \"fixed\",\n    left: 0,\n    transition: \"200ms\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      transform: \"scale(1.1)\",\n    },\n  },\n  upperRightCorner: {\n    position: \"absolute\",\n    right: `${TOP_DISTANCE_REM / 2}rem`,\n    top: `${TOP_DISTANCE_REM / 2}rem`,\n    // Mobile\n    [theme.breakpoints.down(\"sm\")]: {\n      right: `${TOP_DISTANCE_REM / 8}rem`,\n      top: `${TOP_DISTANCE_REM / 8}rem`,\n    },\n  },\n  upperLeftCorner: {\n    position: \"absolute\",\n    left: `${TOP_DISTANCE_REM}rem`,\n    top: `${TOP_DISTANCE_REM}rem`,\n  },\n\n  tabBody: {\n    paddingTop: \"2rem\",\n    paddingBottom: \"1rem\",\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    // backgroundColor: \"#ffffff\",\n    backgroundColor: new Color(BACKGROUND_LIGHT_COLOR)\n      .mix(Color.rgb([0, 0, 0]), 0.02)\n      .hex(),\n  },\n}));\n\nexport const MarketInteractionModal = React.memo<IProps>((props) => {\n  const {\n    open,\n    closeModal,\n\n    // Input/message\n    messageOrInput,\n    inputActionButtonText,\n    onInputActionButtonPressed,\n    showInputActionButton,\n    inputActionButtonActive,\n\n    // Assets\n    actionAssetSymbol,\n    actionAssetName,\n    distributionAssetSymbol,\n\n    // Tabs\n    currentTabIndex,\n    onTabIndexChange,\n    tab0Title,\n    tab1Title,\n\n    // Action Rates\n    actionName,\n    actionApy,\n    distributionApy,\n\n    // Borrow Limits (Optional)\n    showBorrowLimit,\n    showPredictedBorrowLimits,\n    currentBorrowLimit,\n    borrowLimitAfterChange,\n    usedBorrowLimitPercentage,\n    usedBorrowLimitPercentageAfterChange,\n    borrowLimitNote,\n\n    // Action button\n    actionButtonActive,\n    actionButtonText,\n    actionButtonDisabledText,\n    actionButtonOnClick,\n\n    // Footer\n    footerMessagesPayloads,\n\n    // TX Waiting\n    assetExplorerLink,\n    explorerName,\n    explorerUrlBaseForTx,\n    activeTxHash,\n    waitingForUserApproval,\n    waitingForTxConfirmation,\n  } = props;\n\n  const classes = useStyles();\n\n  const isSupply = actionName === \"Supply\";\n  const isBorrow = actionName === \"Borrow\";\n\n  const formattedMessages = useMemo(() => {}, []);\n\n  if (waitingForTxConfirmation || waitingForUserApproval) {\n    const txWaitingStage: TTxWaitingStage = waitingForTxConfirmation\n      ? \"CONFIRMATION\"\n      : \"USER_APPROVAL\";\n\n    return (\n      <TxWaitingModal\n        open={open}\n        closeModal={closeModal}\n        txWaitingStage={txWaitingStage}\n        txHash={activeTxHash}\n        explorerUrlBaseForTx={explorerUrlBaseForTx}\n        explorerName={explorerName}\n      />\n    );\n  }\n\n  return (\n    <Modal open={open} className={classes.modal} onBackdropClick={closeModal}>\n      <Fade in={open}>\n        <div className={classes.marketInteractionPanel}>\n          {/* Quick-n-Dirty x button */}\n          <div className={classes.upperRightCorner}>\n            <IconButton onClick={closeModal}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n\n          {/* Quick-n-Dirty Market icon */}\n          <a\n            target={\"_blank\"}\n            rel={\"noreferrer noopener\"}\n            href={assetExplorerLink}\n          >\n            <TokenIcon\n              symbol={actionAssetSymbol}\n              extraClasses={[classes.tokenIcon, classes.upperLeftCorner]}\n            />\n          </a>\n\n          {/* Header */}\n          <div className={classes.panelHeader}>\n            <Typography variant={\"h5\"} className={classes.title}>\n              {actionAssetName}\n            </Typography>\n          </div>\n\n          {/* Input or message */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {messageOrInput}\n\n            {showInputActionButton && (\n              <Button\n                color={\"primary\"}\n                style={{ marginRight: \"1.5rem\", maxHeight: \"3rem\" }}\n                variant={\"outlined\"}\n                onClick={onInputActionButtonPressed}\n                disabled={!inputActionButtonActive}\n              >\n                <Typography variant={\"body2\"}>\n                  {inputActionButtonText}\n                </Typography>\n              </Button>\n            )}\n          </div>\n\n          {/* Tabs */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          >\n            <div\n              style={{\n                flex: 1,\n                textAlign: \"center\",\n                borderBottom:\n                  currentTabIndex === 0\n                    ? `2px solid ${BRAND_MAIN_COLOR}`\n                    : \"none\",\n              }}\n            >\n              <Button fullWidth onClick={() => onTabIndexChange(0)}>\n                <Typography>{tab0Title}</Typography>\n              </Button>\n            </div>\n            <div\n              style={{\n                flex: 1,\n                textAlign: \"center\",\n                borderBottom:\n                  currentTabIndex === 1\n                    ? `2px solid ${BRAND_MAIN_COLOR}`\n                    : \"none\",\n              }}\n            >\n              <Button fullWidth onClick={() => onTabIndexChange(1)}>\n                <Typography>{tab1Title}</Typography>\n              </Button>\n            </div>\n          </div>\n\n          {/* Tab Body */}\n          <div className={classes.tabBody}>\n            {/* Modal action rates */}\n            <ActionRates\n              actionName={actionName}\n              assetSupplyApy={actionApy}\n              assetSymbol={actionAssetSymbol}\n              distributionAssetApy={distributionApy}\n              distributionAssetSymbol={distributionAssetSymbol}\n            />\n            <br />\n\n            {/* Borrow limit rates */}\n            {showBorrowLimit && (\n              <>\n                <br />\n                <BorrowLimitRates\n                  limitOrBalance={isBorrow ? \"Balance\" : \"Limit\"}\n                  borrowLimitUsd={currentBorrowLimit || 0}\n                  borrowLimitUsedPercentage={usedBorrowLimitPercentage || 0}\n                  predictedBorrowLimitPercentage={\n                    usedBorrowLimitPercentageAfterChange || 0\n                  }\n                  predictedBorrowLimitUsd={borrowLimitAfterChange || 0}\n                  displayPredictedValues={showPredictedBorrowLimits}\n                  note={borrowLimitNote}\n                />\n                <br />\n              </>\n            )}\n\n            <br />\n            {/* Action button */}\n            <ModalActionButton\n              onClick={actionButtonOnClick}\n              text={\n                actionButtonActive || !actionButtonDisabledText\n                  ? actionButtonText\n                  : actionButtonDisabledText\n              }\n              disabled={!actionButtonActive}\n            />\n\n            <br />\n            <br />\n\n            {/* DEV_NOTE : Footer inside of body to keep same padding easily */}\n            {/*{footerMessagesPayloads.map((footerMessagesPayload) => (*/}\n            {/*  <>*/}\n            {/*    <ModalFooter*/}\n            {/*      key={footerMessagesPayload.title}*/}\n            {/*      title={footerMessagesPayload.title}*/}\n            {/*      tokenAmount={footerMessagesPayload.tokenAmount}*/}\n            {/*      tokenSymbol={footerMessagesPayload.tokenSymbol}*/}\n            {/*    />*/}\n            {/*    <br key={`br_${footerMessagesPayload.title}`} />*/}\n            {/*  </>*/}\n            {/*))}*/}\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  );\n});\n","// DEV_NOTE : Taken from typeless library 'eth-json-rpc-errors';\nexport const JSON_RPC_ERROR_CODES = {\n  rpc: {\n    invalidInput: -32000,\n    resourceNotFound: -32001,\n    resourceUnavailable: -32002,\n    transactionRejected: -32003,\n    methodNotSupported: -32004,\n    parse: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internal: -32603,\n  },\n  provider: {\n    userRejectedRequest: 4001,\n    unauthorized: 4100,\n    unsupportedMethod: 4200,\n  },\n};\n","import { ContractTransaction } from \"ethers\";\nimport { useCallback, useState } from \"react\";\nimport { JSON_RPC_ERROR_CODES } from \"../../../constants/ethereumErrorCodes\";\n\nexport type TTxCreatingFunction = () =>\n  | Promise<ContractTransaction>\n  | undefined;\n\nexport function useTxWaitingLogic(\n  txCreatingFunction: TTxCreatingFunction,\n  closeModal: () => void,\n  closeModalOnSuccess: boolean\n) {\n  const {\n    activeTxHash,\n    setActiveTxHash,\n    waitingForTxConfirmation,\n    waitingForUserApproval,\n    setWaitingForTxConfirmation,\n    setWaitingForUserApproval,\n  } = useTxWaitingStateExplicit();\n\n  const wrappedTxBuildingFunction = useTxWaitingLogicExplicit(\n    txCreatingFunction,\n    closeModal,\n    setActiveTxHash,\n    setWaitingForUserApproval,\n    setWaitingForTxConfirmation,\n    closeModalOnSuccess\n  );\n\n  return {\n    activeTxHash,\n    waitingForUserApproval,\n    waitingForTxConfirmation,\n    wrappedTxBuildingFunction,\n  };\n}\n\nexport function useTxWaitingStateExplicit() {\n  const [activeTxHash, setActiveTxHash] = useState(\"\");\n  const [waitingForUserApproval, setWaitingForUserApproval] = useState(false);\n  const [waitingForTxConfirmation, setWaitingForTxConfirmation] = useState(\n    false\n  );\n\n  return {\n    activeTxHash,\n    setActiveTxHash,\n    waitingForUserApproval,\n    waitingForTxConfirmation,\n    setWaitingForUserApproval,\n    setWaitingForTxConfirmation,\n  };\n}\n\n/**\n * Wraps a call to a tx creating function with some UX logic of waiting for user approval and tx confirmation\n */\nexport function useTxWaitingLogicExplicit(\n  txCreatingFunction: TTxCreatingFunction,\n  closeModal: () => void,\n  setActiveTxHash: (val: string) => void,\n  setWaitingForUserApproval: (val: boolean) => void,\n  setWaitingForTxConfirmation: (val: boolean) => void,\n  closeModalOnSuccess: boolean\n) {\n  const wrappedTxBuildingFunction = useCallback(async () => {\n    let contractTx: ContractTransaction | undefined;\n\n    // We are going to ask the user to approve tx\n    setWaitingForUserApproval(true);\n\n    try {\n      contractTx = await txCreatingFunction();\n\n      setActiveTxHash(contractTx?.hash || \"\");\n\n      // We are after user approval, let's wait for the tx to be mined\n      setWaitingForTxConfirmation(true);\n\n      const receipt = await contractTx?.wait();\n      console.log(receipt);\n\n      if (closeModalOnSuccess) {\n        closeModal();\n      }\n    } catch (e) {\n      if (e.code === JSON_RPC_ERROR_CODES.provider.userRejectedRequest) {\n        // User denied tx\n        console.log(\"User denied tx\");\n      } else {\n        // TODO : Have a more user-friendly error communication.\n        // DEV_NOTE :\n        closeModal();\n        throw e;\n      }\n    } finally {\n      // No matter what, we ain't waiting after this line\n      setWaitingForUserApproval(false);\n      setWaitingForTxConfirmation(false);\n    }\n  }, [\n    closeModal,\n    closeModalOnSuccess,\n    setActiveTxHash,\n    setWaitingForTxConfirmation,\n    setWaitingForUserApproval,\n    txCreatingFunction,\n  ]);\n\n  return wrappedTxBuildingFunction;\n}\n","import {\n  useAccountStore,\n  useLendingNetworksStore,\n  useModalsStore,\n  useSystemStore,\n} from \"../../../store/storeHooks\";\nimport { TAssetInMarketParameters } from \"../../../services/lendingNetworksService/ILendingNetworksService\";\nimport { SingleCTokenStore } from \"../../../store/multiInstanceStores/SingleCTokenStore\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { TZeroOrOne } from \"./base/MarketInteractionModal\";\nimport { ethers } from \"ethers\";\nimport { useTxWaitingLogicExplicit } from \"../txWaitingModal/txWaitingHooks\";\n\nexport function useMarketInteractionModalBase() {\n  const accountStore = useAccountStore();\n  const modalsStore = useModalsStore();\n  const lendingNetworksStore = useLendingNetworksStore();\n  const systemStore = useSystemStore();\n  const activeLNStore = lendingNetworksStore.activeLNStore;\n  const assetAddressToParamsMap =\n    activeLNStore?.assetBaseAddressToParams ||\n    new Map<string, TAssetInMarketParameters>();\n  const assetBaseAddress = modalsStore.assetBaseAddress;\n\n  const assetParams = assetAddressToParamsMap.get(assetBaseAddress);\n  const isNativeCoin = assetParams?.symbol === systemStore.nativeCoinSymbol;\n\n  const cTokenStore = activeLNStore?.baseAssetsToCTokenStore.get(\n    assetBaseAddress\n  );\n\n  const cToken = cTokenStore?.cTokenAddress || \"\";\n\n  const supplyTokenAddress = assetParams?.address || \"\";\n  const supplyTokenSymbol = assetParams?.symbol || \"\";\n  const supplyTokenName = assetParams?.name || \"\";\n  const distributionTokenSymbol =\n    activeLNStore?.distributionAssetParams.symbol || \"NONE\";\n\n  const walletBalance = cTokenStore?.accountUnderlyingBalanceInUnits || 0;\n  const hasWalletBalance = walletBalance > 0;\n  const needToApprove = !isNativeCoin; // False for native\n\n  const pricePerUnitUsd = cTokenStore?.underlyingUsdPrice || 0;\n  const collateralFactorInUnits = cTokenStore?.collateralFactorInUnits || 0;\n  const maximillionAddress = activeLNStore?.maximillionAddress || \"\";\n  const currentLiquidityCashUsd = activeLNStore?.liquidityUsd || 0;\n  // const currentBorrowLimitUsd = activeLNStore?.collateralPotentialInUSD || 0;\n\n  const usedBorrowPercentage = activeLNStore?.accountUsedBorrowPercentage || 0;\n  const totalAccountBorrowBalanceUsd =\n    activeLNStore?.totalAccountBorrowBalanceUsd || 0;\n  const collateralPotentialInUSD =\n    activeLNStore?.accountCollateralPotentialInUSD || 0;\n  const priceCalculationDecimals = activeLNStore?.priceCalculationDecimals || 6;\n\n  const supplySideIncentiveApy =\n    cTokenStore?.supplySideIncentiveDistributionApyInUnits || 0;\n  const borrowSideIncentiveApy =\n    cTokenStore?.borrowSideIncentiveDistributionApyInUnits || 0;\n\n  const supplyApy = cTokenStore?.supplyApyInPercentages || 0;\n  const borrowApy = cTokenStore?.borrowApyInPercentages || 0;\n\n  // Can they borrow more ?\n  const currentLiquidityUsd = activeLNStore?.liquidityUsd || 0;\n  const hasAvailableLiquidity = currentLiquidityUsd > 0; // True means user can borrow&withdraw\n\n  // How many units can the user borrow more\n  const liquidityInAssetUnits = currentLiquidityUsd / pricePerUnitUsd;\n\n  const isCollaterable = cTokenStore?.isCollaterable || false;\n\n  return {\n    accountStore,\n    modalsStore,\n    lendingNetworksStore,\n    activeLNStore,\n    assetBaseAddress,\n    maximillionAddress,\n    isNativeCoin,\n    cTokenStore,\n    cToken,\n    supplyTokenAddress,\n    supplyTokenSymbol,\n    supplyTokenName,\n    distributionTokenSymbol,\n    isCollaterable,\n    collateralPotentialInUSD,\n\n    walletBalance,\n    hasWalletBalance,\n    needToApprove,\n\n    priceCalculationDecimals,\n    pricePerUnitUsd,\n    collateralFactorInUnits,\n    currentLiquidityCashUsd,\n    // currentBorrowLimitUsd,\n    usedBorrowPercentage,\n    totalAccountBorrowBalanceUsd,\n\n    supplyApy,\n    supplySideIncentiveApy,\n    borrowApy,\n    borrowSideIncentiveApy,\n    // incentiveDistributionPerYearInUnitsForSupply,\n    // incentiveDistributionPerYearInUnitsForBorrow,\n\n    hasAvailableLiquidity,\n    liquidityInAssetUnits,\n  };\n}\n\nexport function useMarketInteractionModalTabsState() {\n  const [activeTabIndex, setActiveTabIndex] = useState<TZeroOrOne>(0);\n\n  const borrowTabIndex = 0;\n  const repayTabIndex = 1;\n  const tab0Title = \"Borrow\";\n  const tab1Title = \"Repay\";\n\n  const isBorrow = activeTabIndex === borrowTabIndex;\n  const isRepay = activeTabIndex === repayTabIndex;\n\n  return {\n    activeTabIndex,\n    setActiveTabIndex,\n  };\n}\n\nexport function useMarketInteractionActiveTabState(activeTabIndex: TZeroOrOne) {\n  return [activeTabIndex === 0, activeTabIndex === 1];\n}\n\nexport function useOnEnableClicked(\n  cToken: string,\n  assetBaseAddress: string,\n  closeModal: () => void,\n  setActiveTxHash: (val: string) => void,\n  setWaitingForUserApproval: (val: boolean) => void,\n  setWaitingForTxConfirmation: (val: boolean) => void\n) {\n  const accountStore = useAccountStore();\n\n  const createEnableTx = useCallback(() => {\n    return accountStore.approveErc20Usage(\n      assetBaseAddress,\n      cToken,\n      ethers.constants.MaxUint256\n    );\n  }, [accountStore, assetBaseAddress, cToken]);\n\n  const wrappedEnableTx = useTxWaitingLogicExplicit(\n    createEnableTx,\n    closeModal,\n    setActiveTxHash,\n    setWaitingForUserApproval,\n    setWaitingForTxConfirmation,\n    false\n  );\n\n  const onEnableClicked = useCallback(async () => {\n    if (!cToken) {\n      return console.log(\"No CToken Address\");\n    }\n\n    await wrappedEnableTx();\n\n    console.log(`Enable button clicked`);\n    await console.log(`Enable is done !`);\n  }, [cToken, wrappedEnableTx]);\n\n  return onEnableClicked;\n}\n\n/**\n *\n * @param currentBorrowLimitUsd\n * @param totalAccountBorrowBalanceUsd sum of all active borrows in USD\n * @param actionInUnits DEV_NOTE : Units should be negative for actions that reduce collateral (borrow/withdraw)\n * @param unitPriceInUsd\n * @param collateralFactorInUnits\n */\nexport function useCalculateChangeInBorrowLimits(\n  currentBorrowLimitUsd: number,\n  totalAccountBorrowBalanceUsd: number,\n  actionInUnits: number,\n  unitPriceInUsd: number,\n  collateralFactorInUnits: number,\n  // Indicates the decimals used to calculate the prices in the smart contract.\n  // This will prevent js float calculation from interfering.\n  // For example, when withdrawing maximum amount, the float rounding\n  // could cause the app to think that this will lead to shortfall\n  // (because the value will we an something like -1e14.\n  pricePrecision: number\n) {\n  const priceSensitivizer = buildSensitivizer(pricePrecision);\n  const actionEffectInUsd = priceSensitivizer(actionInUnits * unitPriceInUsd);\n\n  const collateralValueOfActionEffect = priceSensitivizer(\n    actionEffectInUsd * collateralFactorInUnits\n  );\n\n  const borrowLimitAfterChange = priceSensitivizer(\n    currentBorrowLimitUsd + collateralValueOfActionEffect\n  );\n\n  const usedBorrowLimitPercentageAfterChange =\n    priceSensitivizer(totalAccountBorrowBalanceUsd / borrowLimitAfterChange) *\n    100;\n\n  const actionLeadsToShortfall = usedBorrowLimitPercentageAfterChange > 100;\n\n  return {\n    actionEffectInUsd,\n    actionLeadsToShortfall,\n    collateralValueOfActionEffect,\n    borrowLimitAfterChange,\n    usedBorrowLimitPercentageAfterChange,\n  };\n}\n\n/**\n *\n * @param currentBorrowLimitUsd\n * @param totalAccountBorrowBalanceUsd sum of all active borrows in USD\n * @param actionInUnits DEV_NOTE : Units should be negative for actions that reduce collateral (borrow/withdraw)\n * @param unitPriceInUsd\n * @param collateralFactorInUnits\n */\nexport function useCalculateChangeInBorrowLimitsForBorrow(\n  collateralPotentialInUSD: number,\n  currentBorrowLimitUsd: number,\n  totalAccountBorrowBalanceUsd: number,\n  actionInUnits: number,\n  unitPriceInUsd: number,\n  // Indicates the decimals used to calculate the prices in the smart contract.\n  // This will prevent js float calculation from interfering.\n  // For example, when withdrawing maximum amount, the float rounding\n  // could cause the app to think that this will lead to shortfall\n  // (because the value will we an something like -1e14.\n  pricePrecision: number\n) {\n  const priceSensitivizer = buildSensitivizer(pricePrecision);\n  const actionEffectInUsd = priceSensitivizer(actionInUnits * unitPriceInUsd);\n\n  const collateralValueOfActionEffect = actionEffectInUsd;\n\n  const borrowLimitAfterChange = priceSensitivizer(\n    currentBorrowLimitUsd + collateralValueOfActionEffect\n    // currentBorrowLimitUsd\n  );\n\n  const totalAccountBorrowBalanceUsdAfterAction =\n    totalAccountBorrowBalanceUsd + Math.abs(actionEffectInUsd);\n\n  const usedBorrowLimitPercentageAfterChange =\n    priceSensitivizer(\n      totalAccountBorrowBalanceUsdAfterAction / collateralPotentialInUSD\n    ) * 100;\n\n  const actionLeadsToShortfall = usedBorrowLimitPercentageAfterChange > 100;\n\n  return {\n    actionEffectInUsd,\n    actionLeadsToShortfall,\n    collateralValueOfActionEffect,\n    borrowLimitAfterChange,\n    usedBorrowLimitPercentageAfterChange,\n  };\n}\n\nexport function useCalculateChangeInBorrowBalance(\n  collateralPotentialInUSD: number,\n  totalAccountBorrowBalanceUsd: number,\n  actionInUnits: number,\n  unitPriceInUsd: number,\n  // Indicates the decimals used to calculate the prices in the smart contract.\n  // This will prevent js float calculation from interfering.\n  // For example, when withdrawing maximum amount, the float rounding\n  // could cause the app to think that this will lead to shortfall\n  // (because the value will we an something like -1e14.\n  pricePrecision: number\n) {\n  const priceSensitivizer = buildSensitivizer(pricePrecision);\n  const actionEffectInUsd = priceSensitivizer(actionInUnits * unitPriceInUsd);\n\n  const borrowBalanceAfterChange = priceSensitivizer(\n    totalAccountBorrowBalanceUsd + actionEffectInUsd\n    // currentBorrowLimitUsd\n  );\n\n  const totalAccountBorrowBalanceUsdAfterAction =\n    totalAccountBorrowBalanceUsd + Math.abs(actionEffectInUsd);\n\n  const usedBorrowLimitPercentageAfterChange =\n    priceSensitivizer(\n      totalAccountBorrowBalanceUsdAfterAction / collateralPotentialInUSD\n    ) * 100;\n\n  const actionLeadsToShortfall = usedBorrowLimitPercentageAfterChange > 100;\n\n  return {\n    actionEffectInUsd,\n    actionLeadsToShortfall,\n    borrowBalanceAfterChange,\n    usedBorrowLimitPercentageAfterChange,\n  };\n}\n\nexport function usePriceInSensitivity(price: number, sensitivity: number) {\n  return useMemo(() => {\n    return sensitivizePrice(price, sensitivity);\n  }, [price, sensitivity]);\n}\n\nexport function useSensitivizer(sensitivity: number) {\n  return useCallback(\n    (price: number) => {\n      return sensitivizePrice(price, sensitivity);\n    },\n    [sensitivity]\n  );\n}\n\nexport function buildSensitivizer(sensitivity: number) {\n  return (price: number) => {\n    return sensitivizePrice(price, sensitivity);\n  };\n}\n\nfunction sensitivizePrice(price: number, sensitivity: number): number {\n  return parseFloat(price.toFixed(sensitivity));\n}\n","import React from \"react\";\nimport { Fade, makeStyles, Typography } from \"@material-ui/core\";\nimport { TokenIcon } from \"../../../../icons/TokenIcon\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  tokenSymbol: string;\n  message: string;\n  subMessage?: string;\n  explorerLink: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100%\",\n    paddingTop: \"1rem\",\n    padding: \"2.5rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  largeIcon: {\n    width: \"3rem\",\n    height: \"3rem\",\n  },\n  fadeIn: {\n    transition: \"500ms\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      transform: \"scale(1.1)\",\n      // animation: \"$fadeIn 300ms\",\n      // border: \"1px solid red\",\n      // backgroundColor: theme.palette.primary.main,\n      // padding: `2.0rem`,\n      // height: \"3.5rem\",\n      // width: \"3.5rem\",\n    },\n  },\n\n  \"@keyframes fadeIn\": {\n    // from: { opacity: 1 },\n    // to: { opacity: 0 },\n    \"0%\": {\n      // opacity: 1,\n    },\n    \"100%\": {\n      // opacity: 0,\n    },\n  },\n}));\n\nexport const MainModalMessage = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { tokenSymbol, message, subMessage, explorerLink } = props;\n\n  return (\n    <div className={classes.container}>\n      <a target={\"_blank\"} rel={\"noreferrer noopener\"} href={explorerLink}>\n        <TokenIcon\n          symbol={tokenSymbol}\n          extraClasses={[classes.largeIcon, classes.fadeIn]}\n        />\n      </a>\n      <br />\n      {/*<Typography variant={\"h6\"}>Message ${tokenSymbol}</Typography>*/}\n      <Typography>{message}</Typography>\n      {subMessage && (\n        <>\n          <Typography variant={\"body2\"}>{subMessage}</Typography>{\" \"}\n        </>\n      )}\n    </div>\n  );\n});\n","import React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport {\n  IMarketModalCommonStatePayload,\n  IMarketModalPerTabStatePayload,\n  IMarketModalStatePayload,\n  MarketInteractionModal,\n  TZeroOrOne,\n} from \"./base/MarketInteractionModal\";\nimport { Button, Input, Typography } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport { BigNumber, ethers } from \"ethers\";\nimport {\n  useCalculateChangeInBorrowLimits,\n  useMarketInteractionActiveTabState,\n  useMarketInteractionModalBase,\n  useMarketInteractionModalTabsState,\n  useOnEnableClicked,\n} from \"./marketInteractionModalHooks\";\nimport { MainModalMessage } from \"./base/mainModalMessage/MainModalMessage\";\nimport {\n  useTxWaitingLogicExplicit,\n  useTxWaitingStateExplicit,\n} from \"../txWaitingModal/txWaitingHooks\";\nimport { TModalFooterMessagePayload } from \"./base/ModalFooter\";\nimport { useSystemStore } from \"../../../store/storeHooks\";\n\ninterface IProps {\n  open: boolean;\n  closeModal: () => void;\n}\n\nexport const SupplyModal = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const { open, closeModal } = props;\n\n    const systemStore = useSystemStore();\n\n    const {\n      lendingNetworksStore,\n      cTokenStore,\n      modalsStore,\n      accountStore,\n      assetBaseAddress,\n      maximillionAddress,\n      activeLNStore,\n      isNativeCoin,\n      cToken,\n      isCollaterable,\n      collateralPotentialInUSD,\n\n      walletBalance,\n      hasWalletBalance,\n      needToApprove,\n\n      distributionTokenSymbol,\n      supplyTokenAddress,\n      supplyTokenSymbol,\n      supplyTokenName,\n      priceCalculationDecimals,\n      pricePerUnitUsd,\n      // currentBorrowLimitUsd,\n      collateralFactorInUnits,\n      usedBorrowPercentage,\n      totalAccountBorrowBalanceUsd,\n      borrowApy,\n      borrowSideIncentiveApy,\n      supplyApy,\n      supplySideIncentiveApy,\n\n      hasAvailableLiquidity,\n      liquidityInAssetUnits,\n    } = useMarketInteractionModalBase();\n\n    const {\n      activeTabIndex,\n      setActiveTabIndex,\n    } = useMarketInteractionModalTabsState();\n\n    const {\n      activeTxHash,\n      setActiveTxHash,\n      waitingForUserApproval,\n      waitingForTxConfirmation,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation,\n    } = useTxWaitingStateExplicit();\n\n    const [isSupply, isWithdraw] = useMarketInteractionActiveTabState(\n      activeTabIndex\n    );\n\n    const onEnableClicked = useOnEnableClicked(\n      cToken,\n      assetBaseAddress,\n      closeModal,\n      setActiveTxHash,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation\n    );\n\n    // TODO : C.F.H : Follow the 'repay max' example\n    const [isAskingToWithdrawAll, setIsAskingToWithdrawAll] = useState(false);\n    const [supplyInputValue, setSupplyInputValue] = useState(0);\n    const [withdrawInputValue, setWithdrawInputValue] = useState(0);\n\n    useEffect(() => {\n      let newToken = cToken;\n      setIsAskingToWithdrawAll(false);\n    }, [cToken]);\n\n    const clearStateBeforeClose = useCallback(() => {\n      setSupplyInputValue(0);\n      setWithdrawInputValue(0);\n      closeModal();\n    }, [closeModal]);\n\n    // Constants\n    const tab0Title = \"Supply\";\n    const tab1Title = \"Withdraw\";\n\n    // TODO : Separate inputs for each usage / make a component\n    const inputComponent = useMemo(() => {\n      return (\n        <div\n          style={{\n            width: \"100%\",\n            padding: \"2.5rem\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Input\n            style={{ textAlign: \"center\" }}\n            inputProps={{ style: { textAlign: \"center\", appearance: \"none\" } }}\n            type={\"number\"}\n            title={\"Input\"}\n            name={\"Input\"}\n            value={isSupply ? supplyInputValue : withdrawInputValue}\n            onChange={(e) =>\n              isSupply\n                ? setSupplyInputValue(sanitizeNumericInput(e.target.value))\n                : setWithdrawInputValue(sanitizeNumericInput(e.target.value))\n            }\n          />\n        </div>\n      );\n    }, [isSupply, supplyInputValue, withdrawInputValue]);\n\n    // TODO : CRITICAL : Add test for 'some' approval (not unlimitted) as well\n    const hasApprovedERC20 = cTokenStore?.hasAnyAllowance;\n    const currentSupplyBalanceInUnits = cTokenStore?.accountSupplyInUnits || 0;\n    const currentSupplyBalanceInUsd = cTokenStore?.accountSupplyBalanceUsd || 0;\n    const currentSupplyBalanceInOTokens =\n      cTokenStore?.accountSupplyInOTokensRaw || BigNumber.from(0);\n    const hasSupplyBalance = currentSupplyBalanceInUnits > 0;\n    const hasBorrowBalance = totalAccountBorrowBalanceUsd > 0;\n\n    const onAskToWithdrawAllToggleClicked = useCallback(() => {\n      console.log(`set 'asking to withdraw all' to ${!isAskingToWithdrawAll}'`);\n      setIsAskingToWithdrawAll(!isAskingToWithdrawAll);\n    }, [isAskingToWithdrawAll]);\n\n    const createSupplyTx = () =>\n      accountStore.supplyToMarket(\n        cToken,\n        ethers.utils.parseUnits(\n          supplyInputValue.toString(),\n          cTokenStore?.underlyingDecimals || -1\n        ),\n        isNativeCoin,\n        maximillionAddress\n      );\n\n    const createWithdrwaTx = () =>\n      accountStore.withdrawFromMarket(\n        cToken,\n        ethers.utils.parseUnits(\n          withdrawInputValue.toString(),\n          cTokenStore?.underlyingDecimals || -1\n        ),\n        isNativeCoin,\n        maximillionAddress\n      );\n\n    const createWithdrawAllTx = useCallback(\n      () =>\n        // DEV_NOTE : In order to draw all, we draw by specific amount of all of the oTokens\n        accountStore.withdrawFromMarketByOTokens(\n          cToken,\n          currentSupplyBalanceInOTokens,\n          isNativeCoin,\n          maximillionAddress\n        ),\n      [\n        accountStore,\n        cToken,\n        currentSupplyBalanceInOTokens,\n        isNativeCoin,\n        maximillionAddress,\n      ]\n    );\n\n    console.log(\n      `Underlying decimals (${supplyTokenSymbol}) : ${cTokenStore?.underlyingDecimals}`\n    );\n\n    console.log(`Input value : ${withdrawInputValue.toString()}`);\n\n    const wrappedSupplyTx = useTxWaitingLogicExplicit(\n      createSupplyTx,\n      closeModal,\n      setActiveTxHash,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation,\n      true\n    );\n\n    const wrappedWithdrawTx = useTxWaitingLogicExplicit(\n      createWithdrwaTx,\n      closeModal,\n      setActiveTxHash,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation,\n      true\n    );\n\n    const wrappedWithdrawAllTx = useTxWaitingLogicExplicit(\n      createWithdrawAllTx,\n      closeModal,\n      setActiveTxHash,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation,\n      true\n    );\n\n    const onSupplyClicked = useCallback(async () => {\n      console.log(`Supply button clicked`);\n\n      await wrappedSupplyTx();\n\n      console.log(`Supply is done !`);\n    }, [wrappedSupplyTx]);\n\n    const onWithdrawClicked = useCallback(async () => {\n      console.log(`Withdraw button clicked`);\n\n      // Withdraw all or just some ?\n      if (isAskingToWithdrawAll) {\n        await wrappedWithdrawAllTx();\n      } else {\n        await wrappedWithdrawTx();\n      }\n\n      console.log(`Withdraw is done !`);\n    }, [isAskingToWithdrawAll, wrappedWithdrawAllTx, wrappedWithdrawTx]);\n\n    const supplyTokenExplorerLink = `${systemStore.explorerBaseAddressUrl}/${supplyTokenAddress}`;\n\n    console.log({ isAskingToWithdrawAll });\n    const messageOrInputComponent = useMemo<ReactNode>(() => {\n      if (isSupply) {\n        if (needToApprove && !hasApprovedERC20) {\n          // Message component - needs to approve\n          return (\n            <MainModalMessage\n              tokenSymbol={supplyTokenSymbol}\n              message={`Please approve ${supplyTokenSymbol} usage`}\n              explorerLink={supplyTokenExplorerLink}\n            />\n          );\n        } else {\n          // Input component - how much to supply ?\n          return inputComponent;\n        }\n      } else if (isWithdraw) {\n        if (isAskingToWithdrawAll) {\n          return (\n            <MainModalMessage\n              tokenSymbol={supplyTokenSymbol}\n              message={`Withdrawing all`}\n              subMessage={`~${(+currentSupplyBalanceInUnits.toFixed(\n                4\n              )).toLocaleString()}`}\n              explorerLink={supplyTokenExplorerLink}\n            />\n          );\n        } else {\n          // Input component - how much to withdraw ?\n          return inputComponent;\n        }\n      }\n\n      // Safe error\n      return <></>;\n    }, [\n      currentSupplyBalanceInUnits,\n      hasApprovedERC20,\n      inputComponent,\n      isAskingToWithdrawAll,\n      isSupply,\n      isWithdraw,\n      needToApprove,\n      supplyTokenExplorerLink,\n      supplyTokenSymbol,\n    ]);\n\n    const footerMessagePayloads = useMemo<TModalFooterMessagePayload[]>(() => {\n      const payloads: TModalFooterMessagePayload[] = [\n        {\n          title: `${supplyTokenSymbol} Price`,\n          tokenAmount: pricePerUnitUsd,\n          tokenSymbol: \"$\",\n        },\n        {\n          title: \"Currently Supplying\",\n          tokenAmount: currentSupplyBalanceInUnits,\n          tokenSymbol: supplyTokenSymbol,\n        },\n        {\n          title: \"Wallet Balance\",\n          tokenAmount: walletBalance,\n          tokenSymbol: supplyTokenSymbol,\n        },\n      ];\n\n      return payloads;\n    }, [\n      currentSupplyBalanceInUnits,\n      pricePerUnitUsd,\n      supplyTokenSymbol,\n      walletBalance,\n    ]);\n\n    // const isAskingToWithdrawAllAndCan = isAskingToWithdrawAll &&\n\n    // Must have wallet balance in this asset + Must approve (if needed)\n    const canSupply =\n      hasWalletBalance && (needToApprove ? hasApprovedERC20 : true);\n    const canWithdraw = hasSupplyBalance;\n\n    const borrowLimitNote = !isCollaterable\n      ? `Enable ${supplyTokenSymbol} as collateral to affect Borrow limit`\n      : undefined;\n\n    // Common payload part\n    const commonPayloadPart = useMemo<IMarketModalCommonStatePayload>(() => {\n      const commonModalState: IMarketModalCommonStatePayload = {\n        // Tabs\n        currentTabIndex: activeTabIndex,\n        onTabIndexChange: setActiveTabIndex,\n        tab0Title,\n        tab1Title,\n\n        // Assets\n        actionAssetSymbol: supplyTokenSymbol,\n        actionAssetName: supplyTokenName,\n        distributionAssetSymbol: distributionTokenSymbol,\n        assetExplorerLink: supplyTokenExplorerLink,\n\n        // Borrow Limit (optional)\n        currentBorrowLimit: collateralPotentialInUSD,\n        usedBorrowLimitPercentage: usedBorrowPercentage,\n\n        // Tx Waiting\n        explorerName: systemStore.explorerName,\n        explorerUrlBaseForTx: systemStore.explorerBaseTxUrl,\n        activeTxHash,\n        waitingForTxConfirmation,\n        waitingForUserApproval,\n      };\n\n      return commonModalState;\n    }, [\n      activeTabIndex,\n      activeTxHash,\n      collateralPotentialInUSD,\n      distributionTokenSymbol,\n      setActiveTabIndex,\n      supplyTokenExplorerLink,\n      supplyTokenName,\n      supplyTokenSymbol,\n      systemStore.explorerBaseTxUrl,\n      systemStore.explorerName,\n      usedBorrowPercentage,\n      waitingForTxConfirmation,\n      waitingForUserApproval,\n    ]);\n\n    // Payload for supply\n    const marketModalStatePayloadForSupplyTab = useMemo<IMarketModalPerTabStatePayload>(() => {\n      const isSupplyInputValueValid = supplyInputValue > 0;\n      const isOfferingMoreThanWalletBalance = supplyInputValue > walletBalance;\n      const actionButtonTextForSupply = canSupply\n        ? \"Supply\"\n        : needToApprove\n        ? \"Approve\"\n        : \"No Balance\";\n\n      const activeButtonActive =\n        (isSupplyInputValueValid &&\n          canSupply &&\n          !isOfferingMoreThanWalletBalance) ||\n        (needToApprove && !hasApprovedERC20);\n      const actionButtonCbForSupply = canSupply\n        ? onSupplyClicked\n        : onEnableClicked;\n\n      let reasonForNotBeingAbleToWithdraw = undefined;\n      if (!hasWalletBalance) {\n        reasonForNotBeingAbleToWithdraw = \"No balance to supply\";\n      } else if (isOfferingMoreThanWalletBalance) {\n        reasonForNotBeingAbleToWithdraw = \"Exceeding wallet balance\";\n      } else if (!isSupplyInputValueValid) {\n        // No message\n        // reasonForNotBeingAbleToWithdraw = \"Invalid sum\";\n      }\n\n      const actionButtonDisabledText = reasonForNotBeingAbleToWithdraw;\n\n      // Calculate the changes to borrow limit (USD and % used)\n      const {\n        collateralValueOfActionEffect,\n        borrowLimitAfterChange,\n        usedBorrowLimitPercentageAfterChange,\n      } = useCalculateChangeInBorrowLimits(\n        collateralPotentialInUSD,\n        totalAccountBorrowBalanceUsd,\n        supplyInputValue,\n        pricePerUnitUsd,\n        collateralFactorInUnits,\n        priceCalculationDecimals\n      );\n\n      const showPredictedBorrowLimits =\n        isCollaterable && collateralValueOfActionEffect !== 0;\n\n      // Input action button\n\n      const payload: IMarketModalPerTabStatePayload = {\n        // Message or input component\n        messageOrInput: messageOrInputComponent,\n        inputActionButtonText: \"\",\n        showInputActionButton: false,\n        inputActionButtonActive: false,\n        onInputActionButtonPressed: undefined,\n\n        // Action Rates\n        actionName: \"Supply\",\n        actionApy: supplyApy,\n        distributionApy: supplySideIncentiveApy,\n\n        // Borrow Limit (optional)\n        // DEV_NOTE : We want to show the effect of both supply and withdraw on the borrow limits\n        showBorrowLimit: isWithdraw || canSupply,\n        borrowLimitAfterChange: borrowLimitAfterChange,\n        usedBorrowLimitPercentageAfterChange: usedBorrowLimitPercentageAfterChange,\n        showPredictedBorrowLimits,\n        borrowLimitNote,\n\n        // Action button\n        actionButtonActive: activeButtonActive,\n        actionButtonText: actionButtonTextForSupply,\n        actionButtonDisabledText,\n        actionButtonOnClick: actionButtonCbForSupply,\n\n        // Footer\n        footerMessagesPayloads: footerMessagePayloads,\n      };\n\n      return payload;\n    }, [\n      borrowLimitNote,\n      canSupply,\n      collateralFactorInUnits,\n      collateralPotentialInUSD,\n      footerMessagePayloads,\n      hasApprovedERC20,\n      hasWalletBalance,\n      isCollaterable,\n      isWithdraw,\n      messageOrInputComponent,\n      needToApprove,\n      onEnableClicked,\n      onSupplyClicked,\n      priceCalculationDecimals,\n      pricePerUnitUsd,\n      supplyApy,\n      supplyInputValue,\n      supplySideIncentiveApy,\n      totalAccountBorrowBalanceUsd,\n      walletBalance,\n    ]);\n\n    // Payload for withdraw\n    const marketModalStatePayloadForWithdrawTab = useMemo<IMarketModalPerTabStatePayload>(() => {\n      // If requesting to withdraw all, let's make sure the balances will remain ok\n      const withdrawUnitsForShortfallCalculationWhenCollaterized = isAskingToWithdrawAll\n        ? currentSupplyBalanceInUnits\n        : withdrawInputValue;\n\n      const withdrawUnitsForShortfallCalculation = isCollaterable\n        ? withdrawUnitsForShortfallCalculationWhenCollaterized\n        : 0;\n\n      // Calculate borrow limit (USD and % used) after requested withdraw\n      const {\n        actionLeadsToShortfall,\n        collateralValueOfActionEffect,\n        borrowLimitAfterChange,\n        usedBorrowLimitPercentageAfterChange,\n      } = useCalculateChangeInBorrowLimits(\n        collateralPotentialInUSD,\n        totalAccountBorrowBalanceUsd,\n        withdrawUnitsForShortfallCalculation * -1,\n        pricePerUnitUsd,\n        collateralFactorInUnits,\n        priceCalculationDecimals\n      );\n\n      // These params are needed but area calculated a bit differently for when asking to borrow all vs a specific amount\n      let reasonForNotBeingAbleToWithdraw = undefined;\n      let showPredictedBorrowLimits = false;\n      let withdrawButtonActive = false;\n\n      // Is asking to withdraw all ?\n      if (isAskingToWithdrawAll) {\n        showPredictedBorrowLimits = isCollaterable;\n\n        if (actionLeadsToShortfall) {\n          reasonForNotBeingAbleToWithdraw = \"Will cause shortfall\";\n        }\n\n        withdrawButtonActive = !actionLeadsToShortfall;\n      } else {\n        // Specific amount\n        const withdrawInputValid = withdrawInputValue > 0;\n        const isRequestingMoreThanSuppliedBalance =\n          withdrawInputValue > currentSupplyBalanceInUnits;\n\n        // Make sure the user does not fall into shortfall.\n        // DEV_NOTE : This is used to ensure that withdraw will be allowed when there is no borrow +\n        //            when this asset is not used as collateral\n        const isRequestLegal =\n          !actionLeadsToShortfall ||\n          !hasBorrowBalance ||\n          (hasBorrowBalance && !isCollaterable);\n\n        withdrawButtonActive =\n          canWithdraw &&\n          withdrawInputValid &&\n          !isRequestingMoreThanSuppliedBalance &&\n          isRequestLegal;\n\n        if (!hasSupplyBalance) {\n          reasonForNotBeingAbleToWithdraw = \"No balance to withdraw\";\n        } else if (isRequestingMoreThanSuppliedBalance) {\n          reasonForNotBeingAbleToWithdraw = \"Exceeding supplied balance\";\n        } else if (!withdrawInputValid) {\n          // No message\n          // reasonForNotBeingAbleToWithdraw = \"Invalid sum\";\n        }\n\n        showPredictedBorrowLimits =\n          isCollaterable && collateralValueOfActionEffect !== 0;\n      }\n\n      // General params\n      const actionButtonCbForWithdraw = onWithdrawClicked;\n      const actionButtonTextForWithdraw = \"Withdraw\";\n      const actionButtonDisabledText = reasonForNotBeingAbleToWithdraw;\n      const showWithdrawMax = hasSupplyBalance;\n      const isWithdrawMaxActive = hasSupplyBalance;\n      const withdrawAllToggleButtonText = isAskingToWithdrawAll\n        ? \"Cancel\"\n        : \"All\";\n\n      const payload: IMarketModalPerTabStatePayload = {\n        // Message or input component\n        messageOrInput: messageOrInputComponent,\n        inputActionButtonText: withdrawAllToggleButtonText,\n        showInputActionButton: showWithdrawMax,\n        inputActionButtonActive: isWithdrawMaxActive,\n        onInputActionButtonPressed: onAskToWithdrawAllToggleClicked,\n\n        // Action Rates\n        actionName: \"Supply\",\n        actionApy: supplyApy,\n        distributionApy: supplySideIncentiveApy,\n\n        // Borrow Limit (optional)\n        showBorrowLimit: isWithdraw,\n        borrowLimitAfterChange,\n        showPredictedBorrowLimits,\n        usedBorrowLimitPercentageAfterChange,\n        borrowLimitNote,\n\n        // Action button\n        actionButtonActive: withdrawButtonActive,\n        actionButtonText: actionButtonTextForWithdraw,\n        actionButtonDisabledText,\n        actionButtonOnClick: actionButtonCbForWithdraw,\n\n        // Footer\n        footerMessagesPayloads: footerMessagePayloads,\n      };\n\n      return payload;\n    }, [\n      isAskingToWithdrawAll,\n      currentSupplyBalanceInUnits,\n      withdrawInputValue,\n      isCollaterable,\n      collateralPotentialInUSD,\n      totalAccountBorrowBalanceUsd,\n      pricePerUnitUsd,\n      collateralFactorInUnits,\n      priceCalculationDecimals,\n      onWithdrawClicked,\n      hasSupplyBalance,\n      messageOrInputComponent,\n      onAskToWithdrawAllToggleClicked,\n      supplyApy,\n      supplySideIncentiveApy,\n      isWithdraw,\n      borrowLimitNote,\n      footerMessagePayloads,\n      hasBorrowBalance,\n      canWithdraw,\n    ]);\n\n    const statePerTabPayload = isSupply\n      ? marketModalStatePayloadForSupplyTab\n      : marketModalStatePayloadForWithdrawTab;\n\n    const marketModalStatePayload = useMemo<IMarketModalStatePayload>(() => {\n      const payload: IMarketModalStatePayload = {\n        ...commonPayloadPart,\n        ...statePerTabPayload,\n      };\n\n      return payload;\n    }, [commonPayloadPart, statePerTabPayload]);\n\n    return (\n      <MarketInteractionModal\n        open={open}\n        closeModal={clearStateBeforeClose}\n        {...marketModalStatePayload}\n      />\n    );\n  }\n);\n\nfunction sanitizeNumericInput(stringValueOfNumericInput?: string): number {\n  let safeString = stringValueOfNumericInput || \"0\";\n  // DEV_NOTE : Barbaric way\n  while (safeString.length > 1 && safeString.charAt(0) === \"0\") {\n    console.log(`Starts in 0 : ${safeString}`);\n    safeString = safeString.substring(1, safeString.length);\n    console.log(`After trim : ${safeString}`);\n  }\n\n  const parsedAsFloat = +safeString;\n  if (!stringValueOfNumericInput || isNaN(parsedAsFloat)) {\n    return 0;\n  }\n\n  return parsedAsFloat;\n}\n","import React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport {\n  IMarketModalCommonStatePayload,\n  IMarketModalPerTabStatePayload,\n  IMarketModalStatePayload,\n  MarketInteractionModal,\n} from \"./base/MarketInteractionModal\";\nimport { Input } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport { BigNumber, ethers } from \"ethers\";\nimport {\n  useCalculateChangeInBorrowBalance,\n  useMarketInteractionActiveTabState,\n  useMarketInteractionModalBase,\n  useMarketInteractionModalTabsState,\n  useOnEnableClicked,\n} from \"./marketInteractionModalHooks\";\nimport { MainModalMessage } from \"./base/mainModalMessage/MainModalMessage\";\nimport {\n  useTxWaitingLogicExplicit,\n  useTxWaitingStateExplicit,\n} from \"../txWaitingModal/txWaitingHooks\";\nimport { TModalFooterMessagePayload } from \"./base/ModalFooter\";\nimport { useSystemStore } from \"../../../store/storeHooks\";\n\ninterface IProps {\n  open: boolean;\n  closeModal: () => void;\n}\n\nconst ONATIVE_MAX_REPAY_FACTOR = 1.05;\n// Percentage in factor from max limit that is considered safe.\nconst SAFE_BORROW_FACTOR = 0.4;\n\nexport const BorrowModal = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const { open, closeModal } = props;\n\n    const systemStore = useSystemStore();\n\n    const {\n      lendingNetworksStore,\n      cTokenStore,\n      modalsStore,\n      accountStore,\n      assetBaseAddress,\n      maximillionAddress,\n      activeLNStore,\n      isNativeCoin,\n      cToken,\n      isCollaterable,\n\n      walletBalance,\n      needToApprove,\n      hasWalletBalance,\n\n      collateralPotentialInUSD,\n      distributionTokenSymbol,\n      supplyTokenAddress,\n      supplyTokenSymbol,\n      supplyTokenName,\n      totalAccountBorrowBalanceUsd,\n      usedBorrowPercentage,\n      collateralFactorInUnits,\n      priceCalculationDecimals,\n      // currentBorrowLimitUsd,\n      pricePerUnitUsd,\n      borrowApy,\n      borrowSideIncentiveApy,\n      supplyApy,\n      supplySideIncentiveApy,\n\n      liquidityInAssetUnits,\n      hasAvailableLiquidity,\n    } = useMarketInteractionModalBase();\n\n    const {\n      activeTxHash,\n      setActiveTxHash,\n      waitingForUserApproval,\n      waitingForTxConfirmation,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation,\n    } = useTxWaitingStateExplicit();\n\n    const {\n      activeTabIndex,\n      setActiveTabIndex,\n    } = useMarketInteractionModalTabsState();\n\n    const [isBorrow, isRepay] = useMarketInteractionActiveTabState(\n      activeTabIndex\n    );\n\n    const onEnableClicked = useOnEnableClicked(\n      cToken,\n      assetBaseAddress,\n      closeModal,\n      setActiveTxHash,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation\n    );\n\n    const [isRepayingMax, setIsRepayingMax] = useState(false);\n    const [borrowInputValue, setBorrowInputValue] = useState(0);\n    const [repayInputValue, setRepayInputValue] = useState(0);\n\n    useEffect(() => {\n      let newToken = cToken;\n      setIsRepayingMax(false);\n    }, [cToken]);\n\n    const clearStateBeforeClose = useCallback(() => {\n      setBorrowInputValue(0);\n      setRepayInputValue(0);\n      closeModal();\n    }, [closeModal]);\n\n    // Constants\n    const tab0Title = \"Borrow\";\n    const tab1Title = \"Repay\";\n\n    // TODO : Separate inputs for each usage / make a component\n    const inputComponent = useMemo(() => {\n      return (\n        <div\n          style={{\n            width: \"100%\",\n            padding: \"2.5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Input\n            style={{ textAlign: \"center\" }}\n            inputProps={{ style: { textAlign: \"center\" } }}\n            type={\"number\"}\n            title={\"Input\"}\n            name={\"Input\"}\n            value={isBorrow ? borrowInputValue : repayInputValue}\n            onChange={(e) =>\n              isBorrow\n                ? setBorrowInputValue(sanitizeNumericInput(e.target.value))\n                : setRepayInputValue(sanitizeNumericInput(e.target.value))\n            }\n          />\n        </div>\n      );\n    }, [borrowInputValue, isBorrow, repayInputValue]);\n\n    // TODO : CRITICAL : Add test for 'some' approval (not unlimitted) as well\n    const hasApprovedERC20 = cTokenStore?.hasAnyAllowance;\n    // Is our user borrowing this asset ?\n    const currentBorrowBalance = cTokenStore?.accountBorrowInUnits || 0;\n    const hasBorrowBalance = currentBorrowBalance > 0;\n    const needsToButNotYetApproved = needToApprove && !hasApprovedERC20;\n\n    const createBorrowTx = () =>\n      accountStore.borrowFromMarket(\n        cToken,\n        ethers.utils.parseUnits(\n          borrowInputValue.toString(),\n          cTokenStore?.underlyingDecimals || -1\n        ),\n        isNativeCoin,\n        maximillionAddress\n      );\n\n    const repayAmount = useMemo(() => {\n      if (isRepayingMax) {\n        if (isNativeCoin) {\n          // TODO : Go over this calculation and maybe use fixed decimals/from chain store + put the factor somewhere proper\n          return ethers.utils.parseUnits(\n            (currentBorrowBalance * ONATIVE_MAX_REPAY_FACTOR).toString(),\n            cTokenStore?.underlyingDecimals || 0\n          );\n        } else {\n          return ethers.constants.MaxUint256;\n        }\n      } else {\n        return ethers.utils.parseUnits(\n          repayInputValue.toString(),\n          cTokenStore?.underlyingDecimals || 0\n        );\n      }\n    }, [\n      cTokenStore?.underlyingDecimals,\n      currentBorrowBalance,\n      isNativeCoin,\n      isRepayingMax,\n      repayInputValue,\n    ]);\n\n    const createRepayTx = () =>\n      accountStore.repayToMarket(\n        cToken,\n        repayAmount,\n        isNativeCoin,\n        maximillionAddress\n      );\n\n    const wrappedBorrowTx = useTxWaitingLogicExplicit(\n      createBorrowTx,\n      closeModal,\n      setActiveTxHash,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation,\n      true\n    );\n\n    const wrappedRepayTx = useTxWaitingLogicExplicit(\n      createRepayTx,\n      closeModal,\n      setActiveTxHash,\n      setWaitingForUserApproval,\n      setWaitingForTxConfirmation,\n      true\n    );\n\n    const onBorrowClicked = useCallback(async () => {\n      if (!cToken) {\n        return console.log(\"No CToken Address\");\n      }\n\n      console.log(`Borrow button clicked`);\n      await wrappedBorrowTx();\n      console.log(`Borrow is done !`);\n    }, [cToken, wrappedBorrowTx]);\n    const onBorrowMaxSafeClicked = useCallback(async () => {\n      if (!cToken) {\n        return console.log(\"No CToken Address\");\n      }\n\n      const safeAmountInUsd = collateralPotentialInUSD * SAFE_BORROW_FACTOR;\n      const amountLeftToSafe = safeAmountInUsd - totalAccountBorrowBalanceUsd;\n\n      if (amountLeftToSafe < 0) {\n        console.log(\n          `Already over safe borrow amount : safe is : ${safeAmountInUsd} | borrowedUsd is ${totalAccountBorrowBalanceUsd}`\n        );\n        setBorrowInputValue(0);\n      } else {\n        const safeBorrowInUnits =\n          cTokenStore?.getUnitsForUsdValue(amountLeftToSafe) || 0;\n\n        // TODO : CRITICAL : Move to constants\n        // DEV_NOTE : Decided to round up to 6 ( the markets decimals are 8 - this leaves us some space + this is the lowest decimals for all base assets - so we can safely use it)\n        setBorrowInputValue(parseFloat(safeBorrowInUnits.toFixed(6)));\n      }\n    }, [\n      cToken,\n      cTokenStore,\n      collateralPotentialInUSD,\n      totalAccountBorrowBalanceUsd,\n    ]);\n\n    const onRepayClicked = useCallback(async () => {\n      console.log(`Repay button clicked`);\n      await wrappedRepayTx();\n      console.log(`Repay is done !`);\n    }, [wrappedRepayTx]);\n\n    // How many units does the cToken holds ?\n    const cTokenCashInUnits = cTokenStore?.cTokenCashInUnits || 0;\n\n    // Is borrowing from this asset ?\n    const accountBorrowInUnits = cTokenStore?.accountBorrowInUnits || 0;\n\n    // How much underlying (in USD) does the market hold ?\n    const cTokenCashInUsd = cTokenStore?.cTokenCashInUSD || 0;\n\n    const repayIsZero = repayInputValue === 0;\n    const hasEnoughToRepayAll = walletBalance > accountBorrowInUnits;\n    const canRepayMax = hasWalletBalance && hasEnoughToRepayAll && !repayIsZero;\n\n    const onSetRepayToMaxClicked = useCallback(() => {\n      console.log(\"set repay max\");\n      setIsRepayingMax(!isRepayingMax);\n    }, [isRepayingMax]);\n\n    const supplyTokenExplorerLink = `${systemStore.explorerBaseAddressUrl}/${supplyTokenAddress}`;\n    console.log({ supplyTokenExplorerLink });\n\n    const messageOrInputComponent = useMemo<ReactNode>(() => {\n      if (isRepay) {\n        if (needsToButNotYetApproved) {\n          // Message component - needs to approve\n          return (\n            <MainModalMessage\n              tokenSymbol={supplyTokenSymbol}\n              message={`Please approve ${supplyTokenSymbol} usage`}\n              explorerLink={supplyTokenExplorerLink}\n            />\n          );\n        } else if (isRepayingMax) {\n          return (\n            <MainModalMessage\n              tokenSymbol={supplyTokenSymbol}\n              message={`Repaying all (~${(+currentBorrowBalance.toFixed(\n                2\n              )).toLocaleString()})`}\n              explorerLink={supplyTokenExplorerLink}\n            />\n          );\n        } else {\n          // Input component - how much to supply ?\n          return inputComponent;\n        }\n      } else if (isBorrow) {\n        // Input component - how much to withdraw ?\n        return inputComponent;\n      }\n\n      // Safe error\n      return <></>;\n    }, [\n      currentBorrowBalance,\n      inputComponent,\n      isBorrow,\n      isRepay,\n      isRepayingMax,\n      needsToButNotYetApproved,\n      supplyTokenExplorerLink,\n      supplyTokenSymbol,\n    ]);\n\n    const footerMessagePayloads = useMemo<TModalFooterMessagePayload[]>(() => {\n      return [\n        {\n          title: `${supplyTokenSymbol} Price`,\n          tokenAmount: pricePerUnitUsd,\n          tokenSymbol: \"$\",\n        },\n        {\n          title: \"Currently Borrowing\",\n          tokenAmount: accountBorrowInUnits,\n          tokenSymbol: supplyTokenSymbol,\n        },\n        {\n          title: \"Wallet Balance\",\n          tokenAmount: walletBalance,\n          tokenSymbol: supplyTokenSymbol,\n        },\n      ];\n    }, [\n      accountBorrowInUnits,\n      pricePerUnitUsd,\n      supplyTokenSymbol,\n      walletBalance,\n    ]);\n\n    // // Must have active borrow in this asset + Must approve (if needed)\n    // const canRepay =\n    //   hasBorrowBalance && (needToApprove ? hasApprovedERC20 : true);\n\n    // TODO : Make sure this is a right assumption\n    // Either what the user is allowed to borrow, or everything there is.\n    const maxPossibleBorrow = Math.max(\n      liquidityInAssetUnits,\n      cTokenCashInUnits\n    );\n\n    // Common payload part\n    const commonPayloadPart = useMemo<IMarketModalCommonStatePayload>(() => {\n      const commonModalState: IMarketModalCommonStatePayload = {\n        // Tabs\n        currentTabIndex: activeTabIndex,\n        onTabIndexChange: setActiveTabIndex,\n        tab0Title,\n        tab1Title,\n\n        // Assets\n        actionAssetSymbol: supplyTokenSymbol,\n        actionAssetName: supplyTokenName,\n        distributionAssetSymbol: distributionTokenSymbol,\n        assetExplorerLink: supplyTokenExplorerLink,\n\n        // Borrow Limit (optional)\n        // DEV_NOTE : This was a quick-fix, so the names were not changed. What\n        //            we want to show is the borrow balance (not limit)\n        currentBorrowLimit: totalAccountBorrowBalanceUsd,\n        usedBorrowLimitPercentage: usedBorrowPercentage,\n\n        // Tx Waiting\n        explorerName: systemStore.explorerName,\n        explorerUrlBaseForTx: systemStore.explorerBaseTxUrl,\n        activeTxHash,\n        waitingForUserApproval,\n        waitingForTxConfirmation,\n      };\n\n      return commonModalState;\n    }, [\n      activeTabIndex,\n      activeTxHash,\n      distributionTokenSymbol,\n      setActiveTabIndex,\n      supplyTokenExplorerLink,\n      supplyTokenName,\n      supplyTokenSymbol,\n      systemStore.explorerBaseTxUrl,\n      systemStore.explorerName,\n      totalAccountBorrowBalanceUsd,\n      usedBorrowPercentage,\n      waitingForTxConfirmation,\n      waitingForUserApproval,\n    ]);\n\n    // Payload for Borrow\n    const marketModalStatePayloadForBorrowTab = useMemo<IMarketModalPerTabStatePayload>(() => {\n      // Calculate the changes to borrow limit (USD and % used)\n      const {\n        actionLeadsToShortfall,\n        actionEffectInUsd,\n        usedBorrowLimitPercentageAfterChange,\n        borrowBalanceAfterChange,\n      } = useCalculateChangeInBorrowBalance(\n        collateralPotentialInUSD,\n        totalAccountBorrowBalanceUsd,\n        borrowInputValue, // Borrowing more will increase the borrow balance\n        pricePerUnitUsd,\n        priceCalculationDecimals\n      );\n\n      const isRequestingMoreThanCanBorrow =\n        borrowInputValue > maxPossibleBorrow;\n\n      const borrowUsdSum = actionEffectInUsd;\n      const isRequestingMoreThanMarketLiquidity =\n        borrowUsdSum > cTokenCashInUsd;\n\n      const canBorrow =\n        hasAvailableLiquidity &&\n        !isRequestingMoreThanCanBorrow &&\n        !isRequestingMoreThanMarketLiquidity &&\n        !actionLeadsToShortfall;\n\n      let reasonForNotBeingAbleToBorrow = undefined;\n      if (!hasAvailableLiquidity) {\n        reasonForNotBeingAbleToBorrow = \"Borrowing limit reached\";\n      } else if (isRequestingMoreThanCanBorrow) {\n        reasonForNotBeingAbleToBorrow = \"Requesting more than can borrow\";\n      } else if (isRequestingMoreThanMarketLiquidity) {\n        reasonForNotBeingAbleToBorrow = \"Exceeding market liquidity\";\n      } else if (actionLeadsToShortfall) {\n        reasonForNotBeingAbleToBorrow = \"Leads to shortfall\";\n      }\n\n      const actionButtonTextForBorrow = \"Borrow\";\n      const actionButtonDisabledText = reasonForNotBeingAbleToBorrow;\n\n      const activeButtonActive = canBorrow && borrowInputValue > 0;\n\n      const actionButtonCbForSupply = onBorrowClicked;\n\n      const showPredictedBorrowLimits = actionEffectInUsd !== 0;\n\n      const canBorrowMoreSafely =\n        usedBorrowPercentage < SAFE_BORROW_FACTOR * 100;\n\n      const payload: IMarketModalPerTabStatePayload = {\n        // Message or input component\n        messageOrInput: messageOrInputComponent,\n        inputActionButtonText: \"Max Safe\",\n        showInputActionButton: true,\n        inputActionButtonActive: canBorrowMoreSafely,\n        onInputActionButtonPressed: onBorrowMaxSafeClicked,\n\n        // Action Rates\n        actionName: \"Borrow\",\n        actionApy: borrowApy,\n        distributionApy: borrowSideIncentiveApy,\n\n        // Borrow Limit (optional)\n        showBorrowLimit: true,\n        borrowLimitAfterChange: borrowBalanceAfterChange,\n        usedBorrowLimitPercentageAfterChange: usedBorrowLimitPercentageAfterChange,\n        showPredictedBorrowLimits,\n\n        // Action button\n        actionButtonActive: activeButtonActive,\n        actionButtonText: actionButtonTextForBorrow,\n        actionButtonDisabledText,\n        actionButtonOnClick: actionButtonCbForSupply,\n\n        // Footer\n        footerMessagesPayloads: footerMessagePayloads,\n      };\n\n      return payload;\n    }, [\n      borrowApy,\n      borrowInputValue,\n      borrowSideIncentiveApy,\n      cTokenCashInUsd,\n      collateralPotentialInUSD,\n      footerMessagePayloads,\n      hasAvailableLiquidity,\n      maxPossibleBorrow,\n      messageOrInputComponent,\n      onBorrowClicked,\n      onBorrowMaxSafeClicked,\n      priceCalculationDecimals,\n      pricePerUnitUsd,\n      totalAccountBorrowBalanceUsd,\n      usedBorrowPercentage,\n    ]);\n\n    // Payload for repay\n    const marketModalStatePayloadForRepayTab = useMemo<IMarketModalPerTabStatePayload>(() => {\n      const isApproveDoneWith = needToApprove ? hasApprovedERC20 : true;\n\n      const isOfferingMoreThanWalletBalance = repayInputValue > walletBalance;\n      const isOfferingMoreThanHasBorrowed =\n        repayInputValue > accountBorrowInUnits;\n\n      // Must have enough wallet balance in this asset + Must approve (if needed)\n      const canRepay =\n        (hasWalletBalance &&\n          !isOfferingMoreThanWalletBalance &&\n          !isOfferingMoreThanHasBorrowed &&\n          !repayIsZero &&\n          isApproveDoneWith) ||\n        isRepayingMax;\n\n      const actionButtonActive = canRepay || needsToButNotYetApproved;\n      const actionButtonCbForRepay = needsToButNotYetApproved\n        ? onEnableClicked\n        : onRepayClicked;\n\n      let reasonForNotBeingAbleToRepay = undefined;\n      if (isOfferingMoreThanWalletBalance) {\n        reasonForNotBeingAbleToRepay = \"Exceeding wallet balance\";\n      } else if (isOfferingMoreThanHasBorrowed) {\n        reasonForNotBeingAbleToRepay = \"Exceeding borrowed amount\";\n      } else if (repayIsZero) {\n        // DEV_NOTE : Will be disabled with the call to action\n        reasonForNotBeingAbleToRepay = \"Repay\";\n      }\n\n      const actionButtonTextForRepay = canRepay\n        ? \"Repay\"\n        : needToApprove\n        ? \"Approve\"\n        : \"\";\n\n      const actionButtonDisabledText = reasonForNotBeingAbleToRepay;\n\n      // Calculate borrow limit (USD and % used) after requested withdraw\n      const {\n        usedBorrowLimitPercentageAfterChange,\n        actionEffectInUsd,\n        actionLeadsToShortfall,\n        borrowBalanceAfterChange,\n      } = useCalculateChangeInBorrowBalance(\n        collateralPotentialInUSD,\n        totalAccountBorrowBalanceUsd,\n        repayInputValue * -1, // Repaying will decrease the borrow balance\n        pricePerUnitUsd,\n        priceCalculationDecimals\n      );\n\n      const showPredictedBorrowLimits = actionEffectInUsd !== 0;\n\n      const inputActionButtonText = isRepayingMax ? \"Cancel\" : \"All\";\n      const showInputActionButton =\n        (isRepay || false) && !needsToButNotYetApproved && hasBorrowBalance;\n      const inputActionButtonActive = hasEnoughToRepayAll;\n      const onInputActionButtonPressed = onSetRepayToMaxClicked;\n\n      const payload: IMarketModalPerTabStatePayload = {\n        // Message or input component\n        messageOrInput: messageOrInputComponent,\n        inputActionButtonText,\n        showInputActionButton,\n        onInputActionButtonPressed,\n        inputActionButtonActive,\n\n        // Action Rates\n        actionName: \"Supply\",\n        actionApy: 4.56,\n        distributionApy: borrowSideIncentiveApy,\n\n        // Borrow Limit (optional)\n        showBorrowLimit: showPredictedBorrowLimits,\n        borrowLimitAfterChange: borrowBalanceAfterChange,\n        showPredictedBorrowLimits,\n        usedBorrowLimitPercentageAfterChange,\n\n        // Action button\n        actionButtonActive: !!actionButtonActive,\n        actionButtonText: actionButtonTextForRepay,\n        actionButtonDisabledText,\n        actionButtonOnClick: actionButtonCbForRepay,\n\n        // Footer\n        footerMessagesPayloads: footerMessagePayloads,\n      };\n\n      return payload;\n    }, [\n      accountBorrowInUnits,\n      borrowSideIncentiveApy,\n      collateralPotentialInUSD,\n      footerMessagePayloads,\n      hasApprovedERC20,\n      hasBorrowBalance,\n      hasEnoughToRepayAll,\n      hasWalletBalance,\n      isRepay,\n      isRepayingMax,\n      messageOrInputComponent,\n      needToApprove,\n      needsToButNotYetApproved,\n      onEnableClicked,\n      onRepayClicked,\n      onSetRepayToMaxClicked,\n      priceCalculationDecimals,\n      pricePerUnitUsd,\n      repayInputValue,\n      repayIsZero,\n      totalAccountBorrowBalanceUsd,\n      walletBalance,\n    ]);\n\n    const statePerTabPayload = isBorrow\n      ? marketModalStatePayloadForBorrowTab\n      : marketModalStatePayloadForRepayTab;\n\n    const marketModalStatePayload = useMemo<IMarketModalStatePayload>(() => {\n      const payload: IMarketModalStatePayload = {\n        ...commonPayloadPart,\n        ...statePerTabPayload,\n      };\n\n      return payload;\n    }, [commonPayloadPart, statePerTabPayload]);\n\n    return (\n      <MarketInteractionModal\n        open={open}\n        closeModal={clearStateBeforeClose}\n        {...marketModalStatePayload}\n      />\n    );\n  }\n);\n\nfunction sanitizeNumericInput(stringValueOfNumericInput?: string): number {\n  let safeString = stringValueOfNumericInput || \"0\";\n  // DEV_NOTE : Barbaric way\n  while (safeString.length > 1 && safeString.charAt(0) === \"0\") {\n    console.log(`Starts in 0 : ${safeString}`);\n    safeString = safeString.substring(1, safeString.length);\n    console.log(`After trim : ${safeString}`);\n  }\n\n  const parsedAsFloat = +safeString;\n  if (!stringValueOfNumericInput || isNaN(parsedAsFloat)) {\n    return 0;\n  }\n\n  return parsedAsFloat;\n}\n","import React from \"react\";\nimport {\n  Button,\n  Fade,\n  IconButton,\n  makeStyles,\n  Modal,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { TokenIcon } from \"../../icons/TokenIcon\";\nimport { BRAND_MAIN_COLOR, GRAYISH_TEXT } from \"../../../theme/themeConstants\";\nimport { BorrowLimitRates } from \"../MarketInteractionModal/base/rates/BorrowLimitRates\";\nimport { ModalActionButton } from \"../MarketInteractionModal/base/ModalActionButton\";\nimport {\n  TTxWaitingStage,\n  TxWaitingModal,\n} from \"../txWaitingModal/TxWaitingModal\";\n\ninterface IProps {\n  open: boolean;\n  closeModal: () => void;\n\n  actionAssetName: string;\n  actionAssetSymbol: string;\n\n  currentBorrowLimit: number;\n  usedBorrowLimitPercentage: number;\n  usedBorrowLimitPercentageAfterChange: number;\n  borrowLimitAfterChange: number;\n  showPredictedBorrowLimits: boolean;\n\n  actionName: string;\n  actionButtonActive: boolean;\n  actionButtonText: string;\n  actionButtonOnClick: () => void;\n\n  // TX waiting\n  waitingForUserApproval: boolean;\n  waitingForTxConfirmation: boolean;\n}\n\nconst TOP_DISTANCE_REM = 0.5;\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  collateralInteractionPanel: {\n    position: \"relative\",\n    width: \"30rem\",\n    maxWidth: \"100%\",\n    backgroundColor: \"#F9FAFB\",\n  },\n  panelHeader: {\n    width: \"100%\",\n    color: \"#141E27\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n\n    padding: `${TOP_DISTANCE_REM * 2}rem`,\n\n    // Mobile\n    [theme.breakpoints.down(\"sm\")]: {\n      // padding: \"1.0rem\",\n      // display: \"flex\",\n      // flexDirection: \"row\",\n      // alignItems: \"center\",\n    },\n  },\n  title: {\n    fontWeight: \"bold\",\n  },\n  tokenIcon: {\n    marginRight: \"0.75rem\",\n    width: \"2.5rem\",\n    height: \"2.5rem\",\n    position: \"fixed\",\n    left: 0,\n  },\n  upperRightCorner: {\n    position: \"absolute\",\n    right: `${TOP_DISTANCE_REM / 2}rem`,\n    top: `${TOP_DISTANCE_REM / 2}rem`,\n    // Mobile\n    [theme.breakpoints.down(\"sm\")]: {\n      right: `${TOP_DISTANCE_REM / 8}rem`,\n      top: `${TOP_DISTANCE_REM / 8}rem`,\n    },\n  },\n  upperLeftCorner: {\n    position: \"absolute\",\n    left: `${TOP_DISTANCE_REM}rem`,\n    top: `${TOP_DISTANCE_REM}rem`,\n  },\n\n  messageContainer: {\n    paddingTop: \"2rem\",\n    paddingBottom: \"1rem\",\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    textAlign: \"center\",\n\n    color: GRAYISH_TEXT,\n  },\n\n  tabBody: {\n    paddingTop: \"2rem\",\n    paddingBottom: \"1rem\",\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    backgroundColor: \"#ffffff\",\n  },\n}));\n\nexport const CollateralModal = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    open,\n    closeModal,\n    actionAssetSymbol,\n    actionAssetName,\n\n    showPredictedBorrowLimits,\n    currentBorrowLimit,\n    usedBorrowLimitPercentage,\n    usedBorrowLimitPercentageAfterChange,\n    borrowLimitAfterChange,\n    actionName,\n    actionButtonActive,\n    actionButtonText,\n    actionButtonOnClick,\n\n    waitingForTxConfirmation,\n    waitingForUserApproval,\n  } = props;\n\n  if (waitingForTxConfirmation || waitingForUserApproval) {\n    const txWaitingStage: TTxWaitingStage = waitingForTxConfirmation\n      ? \"CONFIRMATION\"\n      : \"USER_APPROVAL\";\n\n    return (\n      <TxWaitingModal\n        open={open}\n        closeModal={closeModal}\n        txWaitingStage={txWaitingStage}\n      />\n    );\n  }\n\n  return (\n    <Modal open={open} className={classes.modal} onBackdropClick={closeModal}>\n      <Fade in={open}>\n        <div className={classes.collateralInteractionPanel}>\n          {/* Quick-n-Dirty x button */}\n          <div className={classes.upperRightCorner}>\n            <IconButton onClick={closeModal}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n\n          {/* Quick-n-Dirty Market icon */}\n          <TokenIcon\n            symbol={actionAssetSymbol}\n            extraClasses={[classes.tokenIcon, classes.upperLeftCorner]}\n          />\n\n          {/* Header */}\n          <div className={classes.panelHeader}>\n            <Typography variant={\"h6\"} className={classes.title}>\n              {actionName} as collateral\n            </Typography>\n          </div>\n\n          <div className={classes.messageContainer}>\n            <Typography>\n              Each asset used as collateral increases your borrowing limit.{\" \"}\n              <br />\n              Be careful, this can subject the asset to being seized in\n              liquidation.\n              {/*Learn more.*/}\n            </Typography>\n          </div>\n\n          {/* Tab Body */}\n          <div className={classes.tabBody}>\n            {/* Borrow limit rates */}\n            <BorrowLimitRates\n              limitOrBalance={\"Limit\"}\n              borrowLimitUsd={currentBorrowLimit || 0}\n              borrowLimitUsedPercentage={usedBorrowLimitPercentage || 0}\n              predictedBorrowLimitPercentage={\n                usedBorrowLimitPercentageAfterChange || 0\n              }\n              predictedBorrowLimitUsd={borrowLimitAfterChange || 0}\n              displayPredictedValues={showPredictedBorrowLimits}\n            />\n\n            <br />\n            <br />\n\n            {/* Action button */}\n            <ModalActionButton\n              onClick={actionButtonOnClick}\n              text={actionButtonText}\n              disabled={!actionButtonActive}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  );\n});\n","import React, { useCallback, useMemo } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { CollateralModal } from \"./CollateralModal\";\nimport { useCalculateChangeInBorrowLimits } from \"../MarketInteractionModal/marketInteractionModalHooks\";\nimport { useCollateralModalState } from \"./collateralModalHooks\";\nimport { useTxWaitingLogic } from \"../txWaitingModal/txWaitingHooks\";\nimport {\n  TTxWaitingStage,\n  TxWaitingModal,\n} from \"../txWaitingModal/TxWaitingModal\";\nimport { useSystemStore } from \"../../../store/storeHooks\";\n\ninterface IProps {\n  open: boolean;\n  closeModal: () => void;\n}\n\nexport const ConnectedCollateralModal = observer<\n  React.FunctionComponent<IProps>\n>((props) => {\n  const { open, closeModal } = props;\n\n  const systemStore = useSystemStore();\n\n  const {\n    activeLNStore,\n    cToken,\n    accountSupplyInUnits,\n    underlyingName,\n    underlyingSymbol,\n    isCollaterable,\n\n    priceCalculationDecimals,\n    usedBorrowPercentage,\n    totalAccountBorrowBalanceUsd,\n    currentBorrowLimitUsd,\n    collateralFactorInUnits,\n    pricePerUnitUsd,\n  } = useCollateralModalState();\n\n  const newCollaterableValue = !isCollaterable;\n  // Will the new state add or reduce potential collateral\n  const signMultiplier = newCollaterableValue ? 1 : -1;\n  const effectiveUnits = signMultiplier * accountSupplyInUnits;\n\n  const actionButtonText = newCollaterableValue\n    ? `Use ${underlyingSymbol} as collateral`\n    : `Remove ${underlyingSymbol} as collateral`;\n\n  const actionName = newCollaterableValue ? \"Enable\" : \"Remove\";\n\n  // Calculate the changes to borrow limit (USD and % used)\n  const {\n    collateralValueOfActionEffect,\n    borrowLimitAfterChange,\n    usedBorrowLimitPercentageAfterChange,\n  } = useCalculateChangeInBorrowLimits(\n    currentBorrowLimitUsd,\n    totalAccountBorrowBalanceUsd,\n    effectiveUnits,\n    pricePerUnitUsd,\n    collateralFactorInUnits,\n    priceCalculationDecimals\n  );\n\n  // We always want to emphasis the change (even if it is 0)\n  const showPredictedBorrowLimits = true;\n\n  const actionButtonActive = true;\n\n  const txCreatingFunction = useMemo(() => {\n    if (newCollaterableValue) {\n      return () => activeLNStore?.enterMarketByCTokenAddress(cToken);\n    } else {\n      return () => activeLNStore?.exitMarketByCTokenAddress(cToken);\n    }\n  }, [activeLNStore, cToken, newCollaterableValue]);\n\n  const {\n    activeTxHash,\n    wrappedTxBuildingFunction,\n    waitingForUserApproval,\n    waitingForTxConfirmation,\n  } = useTxWaitingLogic(txCreatingFunction, closeModal, true);\n\n  const onActionButtonClicked = useCallback(async () => {\n    await wrappedTxBuildingFunction();\n  }, [wrappedTxBuildingFunction]);\n\n  if (waitingForTxConfirmation || waitingForUserApproval) {\n    const txWaitingStage: TTxWaitingStage = waitingForTxConfirmation\n      ? \"CONFIRMATION\"\n      : \"USER_APPROVAL\";\n\n    return (\n      <TxWaitingModal\n        open={open}\n        closeModal={closeModal}\n        txWaitingStage={txWaitingStage}\n        txHash={activeTxHash}\n        explorerUrlBaseForTx={systemStore.explorerBaseTxUrl}\n        explorerName={systemStore.explorerName}\n      />\n    );\n  }\n\n  return (\n    <CollateralModal\n      open={open}\n      closeModal={closeModal}\n      actionName={actionName}\n      actionButtonText={actionButtonText}\n      actionAssetName={underlyingName}\n      actionAssetSymbol={underlyingSymbol}\n      actionButtonActive={actionButtonActive}\n      actionButtonOnClick={onActionButtonClicked}\n      showPredictedBorrowLimits={showPredictedBorrowLimits}\n      borrowLimitAfterChange={borrowLimitAfterChange}\n      currentBorrowLimit={currentBorrowLimitUsd}\n      usedBorrowLimitPercentage={usedBorrowPercentage}\n      usedBorrowLimitPercentageAfterChange={\n        usedBorrowLimitPercentageAfterChange\n      }\n      waitingForUserApproval={waitingForUserApproval}\n      waitingForTxConfirmation={waitingForTxConfirmation}\n    />\n  );\n});\n","import {\n  useAccountStore,\n  useLendingNetworksStore,\n  useModalsStore,\n  useSystemStore,\n} from \"../../../store/storeHooks\";\nimport { TAssetInMarketParameters } from \"../../../services/lendingNetworksService/ILendingNetworksService\";\n\nexport function useCollateralModalState() {\n  const accountStore = useAccountStore();\n  const modalsStore = useModalsStore();\n  const lendingNetworksStore = useLendingNetworksStore();\n  const systemStore = useSystemStore();\n  const activeLNStore = lendingNetworksStore.activeLNStore;\n\n  const assetAddressToParamsMap =\n    activeLNStore?.assetBaseAddressToParams ||\n    new Map<string, TAssetInMarketParameters>();\n  const assetBaseAddress = modalsStore.assetBaseAddress;\n\n  const assetParams = assetAddressToParamsMap.get(assetBaseAddress);\n  const isNativeCoin = assetParams?.symbol === systemStore.nativeCoinSymbol;\n\n  const cTokenStore = activeLNStore?.baseAssetsToCTokenStore.get(\n    assetBaseAddress\n  );\n\n  const cToken = cTokenStore?.cTokenAddress || \"\";\n  const underlyingName = cTokenStore?.underlyingName || \"\";\n  const underlyingSymbol = cTokenStore?.underlyingSymbol || \"\";\n  const accountSupplyInUnits = cTokenStore?.accountSupplyInUnits || 0;\n  const isCollaterable = cTokenStore?.isCollaterable || false;\n\n  const pricePerUnitUsd = cTokenStore?.underlyingUsdPrice || 0;\n  const collateralFactorInUnits = cTokenStore?.collateralFactorInUnits || 0;\n  const currentBorrowLimitUsd = activeLNStore?.liquidityUsd || 0;\n  const usedBorrowPercentage = activeLNStore?.accountUsedBorrowPercentage || 0;\n  const totalAccountBorrowBalanceUsd =\n    activeLNStore?.totalAccountBorrowBalanceUsd || 0;\n\n  const priceCalculationDecimals = activeLNStore?.priceCalculationDecimals || 6;\n\n  return {\n    activeLNStore,\n    cToken,\n    underlyingName,\n    underlyingSymbol,\n    accountSupplyInUnits,\n    isCollaterable,\n\n    priceCalculationDecimals,\n    pricePerUnitUsd,\n    collateralFactorInUnits,\n    currentBorrowLimitUsd,\n    usedBorrowPercentage,\n    totalAccountBorrowBalanceUsd,\n  };\n}\n","import React from \"react\";\nimport {\n  Button,\n  Fade,\n  IconButton,\n  makeStyles,\n  Modal,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { TokenIcon } from \"../../icons/TokenIcon\";\nimport {\n  BACKGROUND_DARK_COLOR,\n  BRAND_MAIN_COLOR,\n  GRAYISH_TEXT,\n  TEXT_ON_DARK,\n  TEXT_ON_LIGHT,\n} from \"../../../theme/themeConstants\";\nimport { ModalActionButton } from \"../MarketInteractionModal/base/ModalActionButton\";\n\ninterface IProps {\n  open: boolean;\n  closeModal: () => void;\n\n  incentiveTokenAddress: string;\n  incentiveTokenName: string;\n  incentiveTokenSymbol: string;\n\n  balanceInUnits: number;\n  unclaimedInUnits: number;\n\n  canClaim: boolean;\n  whyCannotClaim: string;\n  onClaim: () => void;\n\n  // Extra native coin balance\n  showNativeCoinBalance?: boolean;\n  nativeCoinName?: string;\n  nativeCoinBalanceInUnits?: number;\n}\n\nconst TOP_DISTANCE_REM = 0.5;\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  collateralInteractionPanel: {\n    position: \"relative\",\n    width: \"30rem\",\n    maxWidth: \"100%\",\n    // backgroundColor: \"#F9FAFB\",\n    backgroundColor: \"#F9FAFB\",\n  },\n  panelHeader: {\n    width: \"100%\",\n    color: \"#141E27\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n\n    padding: `${TOP_DISTANCE_REM * 2}rem`,\n\n    // Mobile\n    [theme.breakpoints.down(\"sm\")]: {\n      // padding: \"1.0rem\",\n      // display: \"flex\",\n      // flexDirection: \"row\",\n      // alignItems: \"center\",\n    },\n  },\n  title: {\n    fontWeight: \"bold\",\n  },\n  tokenIcon: {\n    marginRight: \"0.75rem\",\n    width: \"2.5rem\",\n    height: \"2.5rem\",\n    position: \"fixed\",\n    left: 0,\n  },\n  upperRightCorner: {\n    position: \"absolute\",\n    right: `${TOP_DISTANCE_REM / 2}rem`,\n    top: `${TOP_DISTANCE_REM / 2}rem`,\n    // Mobile\n    [theme.breakpoints.down(\"sm\")]: {\n      right: `${TOP_DISTANCE_REM / 8}rem`,\n      top: `${TOP_DISTANCE_REM / 8}rem`,\n    },\n  },\n  upperLeftCorner: {\n    position: \"absolute\",\n    left: `${TOP_DISTANCE_REM}rem`,\n    top: `${TOP_DISTANCE_REM}rem`,\n  },\n\n  messageContainer: {\n    paddingTop: \"1rem\",\n    paddingBottom: \"2rem\",\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    textAlign: \"center\",\n\n    color: GRAYISH_TEXT,\n    // display: \"flex\",\n    // flexDirection: \"row\",\n  },\n\n  balanceColumn: {\n    flex: 1,\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    // border: `1px solid ${TEXT_ON_LIGHT}`,\n  },\n  amountTitle: {\n    fontWeight: \"bold\",\n    flex: 1,\n    paddingBottom: \"0.2rem\",\n  },\n\n  amount: {\n    color: TEXT_ON_LIGHT,\n  },\n\n  tabBody: {\n    // paddingTop: \"2rem\",\n    paddingBottom: \"1rem\",\n    paddingLeft: \"1.5rem\",\n    paddingRight: \"1.5rem\",\n    // backgroundColor: \"#ffffff\",\n  },\n\n  heroToken: {\n    height: \"4rem\",\n    width: \"4rem\",\n    marginBottom: \"1rem\",\n  },\n}));\n\nexport const IncentiveModal = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    open,\n    closeModal,\n    incentiveTokenName,\n    incentiveTokenAddress,\n    incentiveTokenSymbol,\n    balanceInUnits,\n    unclaimedInUnits,\n    canClaim,\n    onClaim,\n    whyCannotClaim,\n    showNativeCoinBalance,\n    nativeCoinName,\n    nativeCoinBalanceInUnits,\n  } = props;\n\n  return (\n    <Modal open={open} className={classes.modal} onBackdropClick={closeModal}>\n      <Fade in={open}>\n        <div className={classes.collateralInteractionPanel}>\n          {/* Quick-n-Dirty x button */}\n          <div className={classes.upperRightCorner}>\n            <IconButton onClick={closeModal}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n\n          {/* Quick-n-Dirty Market icon */}\n          <TokenIcon\n            symbol={incentiveTokenSymbol}\n            extraClasses={[classes.tokenIcon, classes.upperLeftCorner]}\n          />\n\n          {/* Header */}\n          <div className={classes.panelHeader}>\n            <Typography variant={\"h6\"} className={classes.title}>\n              {incentiveTokenName}\n            </Typography>\n          </div>\n\n          <div className={classes.messageContainer}>\n            <div>\n              <TokenIcon\n                symbol={incentiveTokenSymbol}\n                extraClasses={[classes.heroToken]}\n              />\n            </div>\n\n            {/* Balances display */}\n            <div style={{ display: \"flex\" }}>\n              {/* Incentive balance */}\n              <div className={classes.balanceColumn}>\n                <Typography className={classes.amountTitle}>\n                  {incentiveTokenSymbol} Balance\n                </Typography>\n                <Typography variant={\"body2\"} className={classes.amount}>\n                  {balanceInUnits.toFixed(4)}\n                </Typography>\n              </div>\n\n              {/* ? Native coin balance ? */}\n              {showNativeCoinBalance && (\n                <div className={classes.balanceColumn}>\n                  <Typography className={classes.amountTitle}>\n                    {nativeCoinName} Balance\n                  </Typography>\n                  <Typography variant={\"body2\"} className={classes.amount}>\n                    {nativeCoinBalanceInUnits?.toFixed(4)}\n                  </Typography>\n                </div>\n              )}\n\n              {/* Claimable balance */}\n              <div className={classes.balanceColumn}>\n                <Typography className={classes.amountTitle}>\n                  Can claim\n                </Typography>\n                <Typography variant={\"body2\"} className={classes.amount}>\n                  {unclaimedInUnits.toFixed(4)}\n                </Typography>\n              </div>\n            </div>\n          </div>\n\n          {/*/!* Tab Body *!/*/}\n          <div className={classes.tabBody}>\n            {/* Action button */}\n            <ModalActionButton\n              onClick={onClaim}\n              text={canClaim ? `Claim ${incentiveTokenSymbol}` : whyCannotClaim}\n              disabled={!canClaim}\n            />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  );\n});\n","import React, { ReactNode, useCallback, useMemo, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  useCalculateChangeInBorrowLimits,\n  useMarketInteractionModalBase,\n} from \"../MarketInteractionModal/marketInteractionModalHooks\";\nimport {\n  useTxWaitingLogic,\n  useTxWaitingStateExplicit,\n} from \"../txWaitingModal/txWaitingHooks\";\nimport { IncentiveModal } from \"./IncentiveModal\";\nimport {\n  useIncentiveModalState,\n  useOnClaimLnIncentive,\n} from \"./incentiveModalHooks\";\nimport {\n  TTxWaitingStage,\n  TxWaitingModal,\n} from \"../txWaitingModal/TxWaitingModal\";\nimport { useSystemStore } from \"../../../store/storeHooks\";\n\ninterface IProps {\n  open: boolean;\n  closeModal: () => void;\n}\n\nexport const ConnectedIncentiveModal = observer<\n  React.FunctionComponent<IProps>\n>((props) => {\n  const { open, closeModal } = props;\n\n  const systemStore = useSystemStore();\n\n  const {\n    activeLNStore,\n    incentiveTokenAddress,\n    incentiveTokenName,\n    incentiveTokenSymbol,\n    compAllocatedUnits,\n    compBalanceUnits,\n    nativeCoinName,\n    nativeCoinSymbol,\n    showNativeCoinBalance,\n    nativeCoinBalance,\n  } = useIncentiveModalState();\n\n  const {\n    activeTxHash,\n    setActiveTxHash,\n    waitingForUserApproval,\n    waitingForTxConfirmation,\n    setWaitingForUserApproval,\n    setWaitingForTxConfirmation,\n  } = useTxWaitingStateExplicit();\n\n  const onClaimClicked = useOnClaimLnIncentive(\n    activeLNStore,\n    closeModal,\n    setActiveTxHash,\n    setWaitingForUserApproval,\n    setWaitingForTxConfirmation\n  );\n\n  let whyCannotClaim = \"\";\n  let canClaim = true;\n\n  if (compAllocatedUnits === 0) {\n    canClaim = false;\n    whyCannotClaim = \"Nothing to claim\";\n  } else if (waitingForUserApproval) {\n    canClaim = false;\n    whyCannotClaim = \"Please approve tx\";\n  }\n  if (waitingForTxConfirmation) {\n    canClaim = false;\n    whyCannotClaim = \"Waiting for TX confirmation\";\n  }\n\n  if (waitingForTxConfirmation || waitingForUserApproval) {\n    const txWaitingStage: TTxWaitingStage = waitingForTxConfirmation\n      ? \"CONFIRMATION\"\n      : \"USER_APPROVAL\";\n\n    // TODO : Use the directo logic hook\n    return (\n      <TxWaitingModal\n        open={open}\n        closeModal={closeModal}\n        txWaitingStage={txWaitingStage}\n        txHash={activeTxHash}\n        explorerUrlBaseForTx={systemStore.explorerBaseTxUrl}\n        explorerName={systemStore.explorerName}\n      />\n    );\n  }\n\n  return (\n    <IncentiveModal\n      open={open}\n      closeModal={closeModal}\n      incentiveTokenAddress={incentiveTokenAddress || \"\"}\n      incentiveTokenName={incentiveTokenName || \"\"}\n      incentiveTokenSymbol={incentiveTokenSymbol || \"\"}\n      balanceInUnits={compBalanceUnits}\n      unclaimedInUnits={compAllocatedUnits}\n      canClaim={canClaim}\n      onClaim={onClaimClicked}\n      whyCannotClaim={whyCannotClaim}\n      showNativeCoinBalance={showNativeCoinBalance}\n      nativeCoinName={nativeCoinName}\n      nativeCoinBalanceInUnits={nativeCoinBalance}\n    />\n  );\n});\n","import {\n  useAccountStore,\n  useCryptoWalletIntegrationStore,\n  useLendingNetworksStore,\n  useModalsStore,\n  useSystemStore,\n} from \"../../../store/storeHooks\";\nimport { TAssetInMarketParameters } from \"../../../services/lendingNetworksService/ILendingNetworksService\";\nimport { useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useTxWaitingLogicExplicit } from \"../txWaitingModal/txWaitingHooks\";\nimport { SingleLNStore } from \"../../../store/multiInstanceStores/SingleLNStore\";\nimport { LENDING_NETWORK_NAMES } from \"../../../services/lendingNetworksService/lendingNetworksParams\";\n\nexport function useIncentiveModalState() {\n  const accountStore = useAccountStore();\n  const modalsStore = useModalsStore();\n  const systemStore = useSystemStore();\n  const cryptoWalletConnectionStore = useCryptoWalletIntegrationStore();\n  const lendingNetworksStore = useLendingNetworksStore();\n  const activeLNStore = lendingNetworksStore.activeLNStore;\n\n  const incentiveTokenSymbol = activeLNStore?.distributionAssetParams.symbol;\n  const incentiveTokenName = activeLNStore?.distributionAssetParams.name;\n  const incentiveTokenAddress = activeLNStore?.distributionAssetParams.address;\n\n  const compBalanceUnits = activeLNStore?.compBalanceUnits || 0;\n  const compAllocatedUnits = activeLNStore?.compAllocatedUnits || 0;\n\n  const showNativeCoinBalance =\n    activeLNStore?.name === LENDING_NETWORK_NAMES.fuseAlpha;\n  const nativeCoinSymbol = systemStore.nativeCoinSymbol;\n  const nativeCoinName = systemStore.nativeCoinName;\n  const nativeCoinBalance = cryptoWalletConnectionStore.nativeCoinBalance;\n\n  return {\n    activeLNStore,\n    incentiveTokenSymbol,\n    incentiveTokenName,\n    incentiveTokenAddress,\n    compBalanceUnits,\n    compAllocatedUnits,\n    showNativeCoinBalance,\n    nativeCoinSymbol,\n    nativeCoinName,\n    nativeCoinBalance,\n  };\n}\n\nexport function useOnClaimLnIncentive(\n  activeLNStore: SingleLNStore | undefined,\n  closeModal: () => void,\n  setActiveTxHash: (val: string) => void,\n  setWaitingForUserApproval: (val: boolean) => void,\n  setWaitingForTxConfirmation: (val: boolean) => void\n) {\n  const createClaimLnIncentiveTx = useCallback(() => {\n    return activeLNStore!.claimLnIncentiveToken();\n  }, [activeLNStore]);\n\n  const wrappedClaimTx = useTxWaitingLogicExplicit(\n    createClaimLnIncentiveTx,\n    closeModal,\n    setActiveTxHash,\n    setWaitingForUserApproval,\n    setWaitingForTxConfirmation,\n    true\n  );\n\n  const onClaimClicked = useCallback(async () => {\n    if (activeLNStore) {\n      console.log(`Claim LN incentive button clicked`);\n      await wrappedClaimTx();\n      closeModal();\n      console.log(`Claim LN incentive is done`);\n    } else {\n      return console.log(\"No Ln Store for claiming\");\n    }\n  }, [activeLNStore, closeModal, wrappedClaimTx]);\n\n  return onClaimClicked;\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport React, { useRef } from \"react\";\nimport useHover from \"@react-hook/hover\";\nimport {\n  AFFIRMATIVE_GREEN_COLOR,\n  DEAFFIRMATIVE_RED_COLOR,\n} from \"../../../../theme/themeConstants\";\nimport Color from \"color\";\nimport { CompletionCircle } from \"../../../../components/completionCircle/CompletionCircle\";\nimport { DualCompletionCircle } from \"../../../../components/balances/DualCompletionCircle\";\nimport {\n  amountToSumInScale,\n  numericalDisplay,\n} from \"../../../../components/displayCalculations/displayCalculations\";\n\ninterface IProps {\n  totalSupplyUsd: number;\n  totalBorrowUsd: number;\n}\n\nconst dimension = 140;\nconst width = dimension;\nconst strokeWidth = 4;\nconst radius = width / 2 - strokeWidth * 2;\n\nconst useStyles = makeStyles((theme) => ({\n  netApyWrapper: {\n    // TODO : decrease by 20 when in small screen\n    height: \"140px\",\n    width: \"140px\",\n    position: \"relative\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"140px\",\n      width: \"140px\",\n    },\n  },\n  netApy: {},\n  netApyDescription: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    height: radius * 2,\n    width: radius * 2,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    margin: \"auto\",\n    // margin: \"0.1875rem\",\n    // margin: strokeWidth * 3,\n    // backgroundColor: \"#070A0E\",\n    backgroundColor: theme.palette.background.default,\n    borderRadius: \"50%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0.25rem\",\n\n    \"&:hover\": {\n      // backgroundColor: \"rgba(20, 30, 39, 0.98)\",\n      backgroundColor: Color.rgb(theme.palette.background.default)\n        .lighten(0.2)\n        .hex(),\n    },\n  },\n  netApyDescription_Active: {\n    backgroundColor: \"rgba(20, 30, 39, 0.98)\",\n  },\n  label: {\n    textAlign: \"center\",\n    color: \"#657786\",\n\n    // fontFamily: \"Haas Grot Text R\",\n    fontStyle: \"medium\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    // color: \"#AAB8C1\",\n  },\n  label_active: {\n    color: \"white\",\n  },\n  headline: {\n    fontWeight: 300,\n    color: \"#ffffff\",\n    marginTop: \"0.7rem\",\n  },\n  headline_inactive: {\n    fontSize: \"1.6rem\",\n  },\n  headline_active: {\n    color: \"#F9FAFB\",\n    fontSize: \"12px\",\n    textAlign: \"center\",\n  },\n\n  supplyCircle: {\n    // stroke: \"white\",\n    stroke: AFFIRMATIVE_GREEN_COLOR,\n    transition: \"stroke-dashoffset 0.35s\",\n\n    transform: \"rotate(-90deg)\",\n    transformOrigin: \"50% 50%\",\n  },\n\n  svgContainer: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  svgCircle: {\n    // \"&:hover\": {\n    //   strokeWidth: strokeWidth * 1.5,\n    // },\n  },\n}));\n\nexport const NetworkNetApy: React.FC<IProps> = (props) => {\n  const classes = useStyles();\n  const { totalSupplyUsd, totalBorrowUsd } = props;\n\n  const utilizationFactor = totalBorrowUsd / totalSupplyUsd;\n  const utilizationPercentage = utilizationFactor * 100;\n\n  const apyDirectionMessage = `Assets Utilization`;\n  const utilizationPercentageUIMessage = numericalDisplay(\n    utilizationPercentage,\n    4\n  );\n\n  const totalBorrowUsdInScale = amountToSumInScale(totalBorrowUsd);\n\n  return (\n    <DualCompletionCircle\n      // Supply is always showed as 100\n      primaryCompletionPercentage={100}\n      secondaryCompletionPercentage={utilizationPercentage}\n      baseTitle={apyDirectionMessage}\n      activeTitle={`${totalBorrowUsdInScale.unitsForDisplay}${totalBorrowUsdInScale.scaleUnit}$`}\n      baseMessage={`${utilizationPercentageUIMessage}%`}\n      activeMessage={`Borrowed assets`}\n    />\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { BalanceHeadline } from \"../../../../components/balances/BalanceHeadline\";\nimport { HeroBalancesContainer } from \"../../../../components/structure/hero/HeroBalancesContainer\";\nimport { NetworkNetApy } from \"./NetworkNetApy\";\n\ninterface IProps {\n  networkTotalSupplyBalanceUsd: number;\n  networkTotalBorrowBalanceUsd: number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  balancesTotal: {},\n}));\n\nexport const NetworkTotalBalances = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { networkTotalBorrowBalanceUsd, networkTotalSupplyBalanceUsd } = props;\n\n  const supplyBalancesComponent = useMemo(() => {\n    return (\n      <BalanceHeadline\n        sum={networkTotalSupplyBalanceUsd}\n        titleText={\"Network supply balance\"}\n        isSupply={true}\n        alignLeft={false}\n      />\n    );\n  }, [networkTotalSupplyBalanceUsd]);\n\n  const borrowBalancesComponent = useMemo(() => {\n    return (\n      <BalanceHeadline\n        sum={networkTotalBorrowBalanceUsd}\n        titleText={\"Network borrow balance\"}\n        isSupply={false}\n        alignLeft={false}\n      />\n    );\n  }, [networkTotalBorrowBalanceUsd]);\n\n  const mainComponent = useMemo(() => {\n    return (\n      <NetworkNetApy\n        totalSupplyUsd={networkTotalSupplyBalanceUsd}\n        totalBorrowUsd={networkTotalBorrowBalanceUsd}\n      />\n    );\n  }, [networkTotalBorrowBalanceUsd, networkTotalSupplyBalanceUsd]);\n\n  return (\n    <HeroBalancesContainer\n      balancesBorrow={borrowBalancesComponent}\n      balancesSupply={supplyBalancesComponent}\n      mainComponent={mainComponent}\n    />\n  );\n});\n","export const SYMBOLS_TO_COLORS = {\n  BTC: \"#f7931a\",\n  WBTC: \"#f7931a\",\n  ETH: \"#ecf0f1\",\n  WETH: \"#ecf0f1\",\n  USDC: \"#2775CA\",\n  FUSE: \"#A6F291\",\n  WFUSE: \"#A6F291\",\n};\n","import React from \"react\";\nimport { makeStyles, Tooltip, Typography } from \"@material-ui/core\";\n\nimport clsx from \"clsx\";\nimport {\n  AFFIRMATIVE_GREEN_COLOR,\n  BACKGROUND_DARK_COLOR,\n  BACKGROUND_LIGHT_COLOR,\n  BACKGROUND_PAGE_CREAM,\n  DEAFFIRMATIVE_RED_COLOR,\n  OLA_CYAN,\n  OLA_ORANGE,\n  TEXT_ON_LIGHT,\n} from \"../../../../theme/themeConstants\";\nimport { AnimatedNumberText } from \"../../../../components/AnimatedNumberText/AnimatedNumberText\";\nimport {\n  amountToSumInScale,\n  numericalDisplay,\n} from \"../../../../components/displayCalculations/displayCalculations\";\nimport { TAssetInMarketParameters } from \"../../../../services/lendingNetworksService/ILendingNetworksService\";\nimport { useStateful } from \"react-hanger\";\nimport { SYMBOLS_TO_COLORS } from \"../../../../constants/assetsDisplay\";\n\n// TODO : Move these types somewhere better\nexport type TSuppliedAssetState = {\n  suppliedUnits: number;\n  suppliedUsd: number;\n  supplyApyPercentage: number;\n};\n\nexport type TBorrowedAssetState = {\n  borrowedUnits: number;\n  borrowedUsd: number;\n  borrowApyPercentage: number;\n};\n\nexport type TSuppliedAssetGist = TAssetInMarketParameters & TSuppliedAssetState;\n\ninterface IProps {\n  totalNetworkSupplyUsd: number;\n  suppliedAssets: TSuppliedAssetGist[];\n  activeAssetSymbol: string;\n  setActiveAssetSymbol: (symbol: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  limitBar: {\n    display: \"flex\",\n    marginTop: \"3.25rem\",\n  },\n  label: {\n    // fontFamily: \"Haas Grot Text R\",\n    fontStyle: \"medium\",\n    fontWeight: 600,\n    fontSize: \"12px\",\n    color: \"#AAB8C1\",\n  },\n  limitBarLabel: {\n    color: \"#657786\",\n    // marginTop: \"0.7rem\",\n    // marginRight: \"0.625rem\",\n    marginTop: \"0.7rem\",\n    marginRight: \"0.625rem\",\n    \"&:last-of-type\": {\n      marginRight: 0,\n      marginLeft: \"0.625rem\",\n    },\n  },\n  progressBarWrapper: {\n    position: \"relative\",\n    flex: \"1 1\",\n  },\n  // progress_bar_green: {\n  //   display: \"flex\",\n  //   backgroundColor: AFFIRMATIVE_GREEN_COLOR,\n  // },\n  percentage_bar: {\n    cursor: \"pointer\",\n    height: \"100%\",\n    transition: \"200ms\",\n    \"&:hover\": {},\n  },\n  semi_clear: {\n    filter: \"opacity(0.5)\",\n  },\n  progress_bar_red: {\n    display: \"flex\",\n    backgroundColor: DEAFFIRMATIVE_RED_COLOR,\n  },\n  progress: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flex: \"1 1\",\n    height: \"7px\",\n    maxWidth: \"100%\",\n    overflow: \"hidden\",\n    backgroundColor: \"rgba(40, 49, 55, 0.1)\",\n    borderRadius: \"100px\",\n    marginTop: \"1rem\",\n  },\n  dark_clear: {\n    background: \"rgba(54, 61, 68, 0.5)\",\n  },\n  thin: {\n    height: \"3px\",\n  },\n  progress_bar_percent_label: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n  },\n  p: {\n    position: \"relative\",\n    float: \"right\",\n    marginRight: \"-0.7rem\",\n    color: \"#ffffff\",\n    padding: \"0.3rem 0.3rem 0.25rem 0.25rem\",\n    backgroundColor: \"#070A0E\",\n  },\n  small: {\n    fontSize: \"12px\",\n  },\n  progress_bar_hover_space: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"10px\",\n    marginTop: \"1rem\",\n  },\n  tooltipWrapper: {\n    // backgroundColor: BACKGROUND_DARK_COLOR,\n    border: `1px solid ${BACKGROUND_PAGE_CREAM}`,\n    backgroundColor: BACKGROUND_PAGE_CREAM,\n    color: TEXT_ON_LIGHT,\n    marginBottom: 10,\n  },\n  tooltipArrow: {\n    color: BACKGROUND_LIGHT_COLOR,\n  },\n  tooltipBaseText: {\n    color: TEXT_ON_LIGHT,\n  },\n  tooltipNumber: {\n    // color: OLA_ORANGE,\n    fontWeight: \"bold\",\n  },\n}));\n\nconst colors = [\"red\", \"green\", \"blue\", \"yellow\"];\n\nexport const NetworkSupplyBar = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    totalNetworkSupplyUsd,\n    suppliedAssets,\n    activeAssetSymbol,\n    setActiveAssetSymbol,\n  } = props;\n\n  const hasActiveAsset = activeAssetSymbol !== \"\";\n  // console.log({ activeAssetSymbol: activeAssetSymbol });\n  // console.log({ hasActiveAsset });\n\n  const totalNetworkSupplyUsdInScale = amountToSumInScale(\n    totalNetworkSupplyUsd\n  );\n\n  // TODO : Add tooltip\n\n  return (\n    <div className={classes.limitBar}>\n      {/* Title label*/}\n      <label className={clsx([classes.label, classes.limitBarLabel])}>\n        Supplied Assets\n      </label>\n\n      <div className={classes.progressBarWrapper}>\n        <div className={clsx([classes.progress, classes.dark_clear])}>\n          {suppliedAssets.map((suppliedAssetGist, index) => {\n            // @ts-ignore\n            const colorForAsset = SYMBOLS_TO_COLORS[suppliedAssetGist.symbol];\n            const colorByIndex = colors[index % suppliedAssets.length];\n            const color = colorForAsset || colorByIndex;\n            const proportion =\n              (suppliedAssetGist.suppliedUsd / totalNetworkSupplyUsd) * 100;\n\n            const isActiveAsset =\n              suppliedAssetGist.symbol === activeAssetSymbol;\n            const shouldMakeSecondary = hasActiveAsset && !isActiveAsset;\n\n            const extraClass = shouldMakeSecondary\n              ? classes.semi_clear\n              : undefined;\n\n            const suppliedUnitsInScale = amountToSumInScale(\n              suppliedAssetGist.suppliedUnits\n            );\n            const suppliedUsdInScale = amountToSumInScale(\n              suppliedAssetGist.suppliedUsd\n            );\n\n            const supplyApyPercentageToDisplay = numericalDisplay(\n              suppliedAssetGist.supplyApyPercentage,\n              4\n            );\n\n            return (\n              <Tooltip\n                arrow\n                placement={\"top\"}\n                key={`${suppliedAssetGist.symbol}_tooltip`}\n                title={\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Typography>{suppliedAssetGist.symbol} Supply</Typography>\n                    <Typography className={classes.tooltipNumber}>\n                      {suppliedUsdInScale.unitsForDisplay}\n                      {suppliedUsdInScale.scaleUnit}$\n                    </Typography>\n                    <br />\n                    <Typography>APY</Typography>\n                    <Typography className={classes.tooltipNumber}>\n                      {supplyApyPercentageToDisplay}%\n                    </Typography>\n                  </div>\n                }\n                enterTouchDelay={0}\n                onOpen={() => setActiveAssetSymbol(suppliedAssetGist.symbol)}\n                onClose={() => setActiveAssetSymbol(\"\")}\n                classes={{\n                  tooltip: classes.tooltipWrapper,\n                  arrow: classes.tooltipArrow,\n                }}\n              >\n                <div\n                  role=\"progressbar\"\n                  aria-valuemin={0}\n                  aria-valuemax={100}\n                  className={clsx([classes.percentage_bar, extraClass])}\n                  style={{ width: `${proportion}%`, backgroundColor: color }}\n                  key={suppliedAssetGist.symbol}\n                />\n              </Tooltip>\n            );\n          })}\n        </div>\n\n        {/*<div className={classes.progress_bar_hover_space}></div>*/}\n      </div>\n\n      {/* USD sum*/}\n      <label className={clsx([classes.label, classes.limitBarLabel])}>\n        ${totalNetworkSupplyUsdInScale.scaleUnit}\n        <AnimatedNumberText value={totalNetworkSupplyUsdInScale.units} />\n      </label>\n    </div>\n  );\n});\n","import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useActiveLendingNetworkStore } from \"../../../../store/storeHooks\";\nimport { observer } from \"mobx-react\";\nimport { Hero } from \"../../../../components/structure/hero/Hero\";\nimport { HeroContentContainer } from \"../../../../components/structure/hero/HeroContentContainer\";\nimport { NetworkTotalBalances } from \"./NetworkTotalBalances\";\nimport { NetworkSupplyBar } from \"./NetworkSupplyBar\";\n\ninterface IProps {\n  activeAssetSymbol: string;\n  setActiveAssetSymbol: (symbol: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport const NetworkOverview = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const { setActiveAssetSymbol, activeAssetSymbol } = props;\n    const classes = useStyles();\n\n    const lnStore = useActiveLendingNetworkStore();\n\n    const lNSupplyBalanceUsd = lnStore?.totalLNSupplyBalanceUsd || 0;\n    const lNBorrowBalanceUsd = lnStore?.totalLNBorrowBalanceUsd || 0;\n    const suppliedAssetGists = lnStore?.lnSuppliedAssetsGists || [];\n\n    return (\n      <Hero>\n        <HeroContentContainer>\n          <NetworkTotalBalances\n            networkTotalSupplyBalanceUsd={lNSupplyBalanceUsd}\n            networkTotalBorrowBalanceUsd={lNBorrowBalanceUsd}\n          />\n          <NetworkSupplyBar\n            totalNetworkSupplyUsd={lNSupplyBalanceUsd}\n            suppliedAssets={suppliedAssetGists}\n            activeAssetSymbol={activeAssetSymbol}\n            setActiveAssetSymbol={setActiveAssetSymbol}\n          />\n        </HeroContentContainer>\n      </Hero>\n    );\n  }\n);\n","import React, { useMemo } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { CardProps } from \"@material-ui/core/Card/Card\";\nimport {\n  TBorrowedAssetState,\n  TSuppliedAssetState,\n} from \"../networkOverview/NetworkSupplyBar\";\nimport { TAssetInMarketParameters } from \"../../../../services/lendingNetworksService/ILendingNetworksService\";\nimport {\n  BACKGROUND_DARK_COLOR,\n  OLA_CYAN,\n  TEXT_ON_DARK,\n} from \"../../../../theme/themeConstants\";\nimport { DualCompletionCircle } from \"../../../../components/balances/DualCompletionCircle\";\nimport { useCTokenStoreByBaseAsset } from \"../../../../store/storeHooks\";\nimport { observer } from \"mobx-react\";\nimport { numericalDisplay } from \"../../../../components/displayCalculations/displayCalculations\";\nimport { SYMBOLS_TO_COLORS } from \"../../../../constants/assetsDisplay\";\nimport clsx from \"clsx\";\n\ninterface IProps {\n  underlyingAddress: string;\n  isActive?: boolean;\n  shouldDim?: boolean;\n}\n\n// interface IProps\n//     extends TBorrowedAssetState,\n//         TSuppliedAssetState,\n//         TAssetInMarketParameters {\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  cardContainer: {\n    transition: \"300ms\",\n    borderRadius: \"10%\",\n    // boxSizing: \"border-box\",\n  },\n  activeCard: {\n    backgroundColor: BACKGROUND_DARK_COLOR,\n    color: TEXT_ON_DARK,\n    border: `5px solid ${OLA_CYAN}`,\n  },\n  semiHidden: {\n    filter: \"opacity(0.85)\",\n  },\n  cardHeader: {\n    paddingTop: \"0.5rem\",\n    // textAlign: \"center\",\n    fontWeight: \"bold\",\n    // color: TEXT_ON_LIGHT,\n    // paddingTop: \"0.5rem\",\n    // paddingBottom: \"0.5rem\",\n    // paddingLeft: \"0.5rem\",\n    // paddingRight: \"0.5rem\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    // backgroundColor: BACKGROUND_DARK_COLOR,\n    // color: TEXT_ON_DARK,\n  },\n}));\n\nexport const AssetViewCard = observer<React.FC<IProps & CardProps>>((props) => {\n  const classes = useStyles();\n  const {\n    underlyingAddress,\n    isActive,\n    shouldDim,\n    className: classNameForContainer,\n    ...restCardProps\n  } = props;\n  const cTokenStore = useCTokenStoreByBaseAsset(underlyingAddress);\n\n  const symbol = cTokenStore?.underlyingSymbol || \"Loading\";\n  const totalSupplyBalanceUsd = cTokenStore?.totalSupplyBalanceUsd || 0;\n  const totalBorrowBalanceUsd = cTokenStore?.totalBorrowBalanceUsd || 0;\n  const underlyingUsdPrice = cTokenStore?.underlyingUsdPrice || 0;\n\n  const usagePercentage = (totalBorrowBalanceUsd / totalSupplyBalanceUsd) * 100;\n\n  const usagePercentageForDisplay = numericalDisplay(usagePercentage, 4);\n  const totalBorrowBalanceUsdForDisplay = numericalDisplay(\n    totalBorrowBalanceUsd,\n    4\n  );\n  const underlyingUsdPriceForDisplay = numericalDisplay(underlyingUsdPrice, 4);\n\n  // @ts-ignore\n  const colorForAsset = SYMBOLS_TO_COLORS[symbol] || \"black\";\n\n  const classesForContainer = useMemo(() => {\n    const classNames = [classes.cardContainer, classNameForContainer];\n\n    if (isActive) {\n      classNames.push(classes.activeCard);\n    } else if (shouldDim) {\n      classNames.push(classes.semiHidden);\n    }\n\n    return classNames;\n  }, [\n    classNameForContainer,\n    classes.activeCard,\n    classes.cardContainer,\n    classes.semiHidden,\n    isActive,\n    shouldDim,\n  ]);\n\n  return (\n    <Card {...restCardProps} className={clsx(classesForContainer)}>\n      <div className={classes.cardHeader}>\n        <Typography variant={\"h6\"}>\n          {symbol} (${underlyingUsdPriceForDisplay}$)\n        </Typography>\n      </div>\n      <CardContent>\n        <DualCompletionCircle\n          baseTitle={`${symbol} borrowed`}\n          baseMessage={`${totalBorrowBalanceUsdForDisplay}$`}\n          activeTitle={`${symbol} Utilization`}\n          activeMessage={`${usagePercentageForDisplay}%`}\n          primaryCompletionPercentage={100}\n          secondaryCompletionPercentage={usagePercentage}\n        />\n      </CardContent>\n    </Card>\n  );\n});\n","import { makeStyles, Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { observer } from \"mobx-react\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { ContentContainer } from \"../../../../components/structure/ContentContainer\";\nimport {\n  useAccountStore,\n  useActiveLendingNetworkStore,\n  useModalsStore,\n} from \"../../../../store/storeHooks\";\nimport { TAssetInMarketParameters } from \"../../../../services/lendingNetworksService/ILendingNetworksService\";\nimport { TCTokenMetadata } from \"../../../../services/contractsIntegration/CompoundLensService/ICompoundLensService\";\nimport { MarketsPanel } from \"../../MarketsTab/markets/MarketsPanel\";\nimport { AssetViewCard } from \"./AssetViewCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  interfaceContainer: {\n    \"--alertHeight\": \"0px\",\n    // TODO : Understand this calculation\n    // minHeight: \"calc(100vh - 82px - 23rem + 34px - var(--alertHeight))\",\n  },\n  row: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    justifyContent: \"center\",\n    marginRight: \"-0.665rem\",\n    marginLeft: \"-0.665rem\",\n  },\n  cardsGrid: {\n    width: \"100%\",\n    display: \"grid\",\n    // DEV_NOTE : For now, manually match to the 'DualCompletionCircle' width\n    gridTemplateColumns: \"repeat(auto-fit, minmax(170px, 1fr))\",\n    gridGap: 15,\n    padding: 15,\n    // justifyItems: \"center\",\n    // justifyContent: \"center\",\n  },\n}));\n\ninterface IProps {\n  activeAssetSymbol: string;\n  setActiveAssetSymbol: (symbol: string) => void;\n}\n\nexport const AssetsViewSection: React.FC<IProps> = observer((props) => {\n  const classes = useStyles();\n  const { activeAssetSymbol, setActiveAssetSymbol } = props;\n  const [error, setError] = React.useState<string | null>(null);\n\n  const accountStore = useAccountStore();\n  const modalsStore = useModalsStore();\n  const lnStore = useActiveLendingNetworkStore();\n\n  const onCollateralableChange = useCallback(\n    async (baseAssetAddress: string, newCollaterableValue: boolean) => {\n      modalsStore.showCollateralModal(baseAssetAddress);\n      // if (!lnStore) {\n      //   return;\n      // }\n      //\n      // // TODO : Make this tx handling better\n      // if (newCollaterableValue) {\n      //   console.log(`Entered market request - ${baseAssetAddress}`);\n      //   await lnStore.enterMarket(baseAssetAddress);\n      //   console.log(\"Entered market\");\n      // } else {\n      //   await lnStore.exitMarket(baseAssetAddress);\n      //   console.log(\"Left market\");\n      // }\n    },\n    [modalsStore]\n  );\n\n  const getPayloadForMarketInteractionModal = useCallback(\n    (baseAssetAddress: string) => {\n      if (!lnStore) {\n        return {\n          cTokenMeta: undefined,\n          assetParameters: undefined,\n        };\n      }\n      const cTokenStore = lnStore.baseAssetsToCTokenStore.get(baseAssetAddress);\n      const assetParameters = lnStore.assetsParams.find(\n        (assetParam) => assetParam.address === baseAssetAddress\n      );\n\n      if (!assetParameters) {\n        console.error(`No asset parameters found for ${baseAssetAddress}`);\n      } else if (!cTokenStore) {\n        console.error(`No cToken meta found for ${baseAssetAddress}`);\n      }\n\n      const payload: {\n        assetParameters: TAssetInMarketParameters | undefined;\n        cTokenMeta: TCTokenMetadata | undefined;\n      } = {\n        assetParameters,\n        cTokenMeta: undefined,\n      };\n\n      return payload;\n    },\n    [lnStore]\n  );\n\n  const onSupplyAssetSelected = useCallback(\n    (baseAssetAddress: string) => {\n      modalsStore.showSupplyModal(baseAssetAddress);\n    },\n    [modalsStore]\n  );\n\n  const onBorrowAssetSelected = useCallback(\n    (baseAssetAddress: string) => {\n      modalsStore.showBorrowModal(baseAssetAddress);\n    },\n    [modalsStore]\n  );\n\n  // React.useEffect(() => {\n  //   if (lendingNetworkStore && lendingNetworkStore.tokens === null) {\n  //     let cancel = false;\n  //     const fetch = async () => {\n  //       if (!cancel) {\n  //         try {\n  //           await lendingNetworkStore.loadCTokenMetadata();\n  //         } catch (e) {\n  //           setError(\n  //             `Unable to fetch the tokens data of network \"${lendingNetworkStore.id}\"`\n  //           );\n  //         }\n  //       }\n  //     };\n  //\n  //     fetch();\n  //     return () => {\n  //       cancel = true;\n  //     };\n  //   }\n  // }, [lendingNetworkStore]);\n\n  // if (lendingNetworkStore.assetsGists === null) {\n  //   return <div style={{ color: \"white\" }}>Loading tokens meta data...</div>;\n  // }\n\n  if (error) {\n    return <Typography style={{ color: \"white\" }}>Error: {error}</Typography>;\n  }\n\n  if (!lnStore) {\n    return <Typography style={{ color: \"white\" }}>Initializing...</Typography>;\n  }\n\n  // Dim all but the active, if have one\n  const shouldDim = activeAssetSymbol !== \"\";\n\n  return (\n    <ContentContainer>\n      <section>\n        <div className={clsx([classes.interfaceContainer, classes.cardsGrid])}>\n          {lnStore.cTokensStores.map((cTokenStore) => {\n            const isActive = cTokenStore.underlyingSymbol === activeAssetSymbol;\n\n            return (\n              <div key={`${cTokenStore.underlyingName}_div`}>\n                <AssetViewCard\n                  underlyingAddress={cTokenStore.underlyingAssetAddress}\n                  isActive={isActive}\n                  shouldDim={!isActive && shouldDim}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    </ContentContainer>\n  );\n});\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { NetworkOverview } from \"./networkOverview/NetworkOverview\";\nimport { AssetsViewSection } from \"./assetsView/AssetsViewSection\";\nimport { useStateful } from \"react-hanger\";\n\ninterface IProps {}\n\nexport const NetworkTab = observer<React.FunctionComponent<IProps>>((props) => {\n  const activeAssetSymbolWrapper = useStateful(\"\");\n\n  return (\n    <>\n      <NetworkOverview\n        activeAssetSymbol={activeAssetSymbolWrapper.value}\n        setActiveAssetSymbol={activeAssetSymbolWrapper.setValue}\n      />\n      <AssetsViewSection\n        activeAssetSymbol={activeAssetSymbolWrapper.value}\n        setActiveAssetSymbol={activeAssetSymbolWrapper.setValue}\n      />\n    </>\n  );\n});\n","import { makeStyles, Tab, Tabs, Typography } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport {\n  useLendingNetworksStore,\n  useModalsStore,\n} from \"../../store/storeHooks\";\nimport { MainLendingNetworkTab } from \"./MarketsTab/MainLendingNetworkTab\";\nimport { SupplyModal } from \"../../components/modals/MarketInteractionModal/SupplyModal\";\nimport { BorrowModal } from \"../../components/modals/MarketInteractionModal/BorrowModal\";\nimport { ConnectedCollateralModal } from \"../../components/modals/collateralModal/ConnectedCollateralModal\";\nimport { ConnectedIncentiveModal } from \"../../components/modals/incentiveModal/ConnectedIncentiveModal\";\nimport {\n  BACKGROUND_DARK_COLOR,\n  TEXT_ON_DARK,\n} from \"../../theme/themeConstants\";\nimport { NetworkTab } from \"./networkTab/NetworkTab\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  tabsHeader: {\n    backgroundColor: BACKGROUND_DARK_COLOR,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: TEXT_ON_DARK,\n  },\n}));\n\ninterface IProps {\n  networkId: string;\n}\n\nexport const LendingNetworkPage = observer<React.FC<IProps>>(\n  ({ networkId }) => {\n    const classes = useStyles();\n    const { path, url } = useRouteMatch();\n    const history = useHistory();\n    const lendingNetworksStore = useLendingNetworksStore();\n    const [error, setError] = React.useState<string | null>(null);\n\n    const lnStore = lendingNetworksStore.activeLNStore;\n    const modalsStore = useModalsStore();\n\n    // Update active LN\n    useEffect(() => {\n      lendingNetworksStore.setActiveLn(networkId);\n    }, [lendingNetworksStore, networkId]);\n\n    // const [\n    //   lendingNetworkStore,\n    //   setLendingNetworkStore,\n    // ] = React.useState<SingleLNStore | null>(null);\n\n    // React.useEffect(() => {\n    //   if (lendingNetworksStore.isLoading) {\n    //     return;\n    //   }\n    //\n    //   const lendingNetworkStore = lendingNetworksStore.getLendingNetworkStore(\n    //     networkId\n    //   );\n    //   if (lendingNetworkStore === null) {\n    //     setError(`A network with id \"${networkId}\" was not found`);\n    //   } else {\n    //     setLendingNetworkStore(lendingNetworkStore);\n    //   }\n    // }, [lendingNetworksStore, lendingNetworksStore.isLoading, networkId]);\n\n    if (lendingNetworksStore.isLoading) {\n      return <Typography>Loading...</Typography>;\n    }\n\n    if (error) {\n      return <Typography>Error: {error}</Typography>;\n    }\n\n    return (\n      // TODO : Change this to use proper page structure\n      <div className={classes.root}>\n        {/* DEV_NOTE : Temp solution for tabs */}\n        <div className={classes.tabsHeader}>\n          <Tabs\n            value={history.location.pathname}\n            onChange={(e, value) => history.push(value)}\n            indicatorColor={\"primary\"}\n          >\n            <Tab label=\"Markets\" value={`${url}/markets`} />\n            <Tab label=\"Network\" value={`${url}/network`} />\n          </Tabs>\n        </div>\n        <Switch>\n          <Route\n            path={`${path}/markets`}\n            exact\n            render={() => <MainLendingNetworkTab />}\n          />\n          <Route path={`${path}/network`} render={() => <NetworkTab />} />\n          <Redirect to={`${path}/markets`} />\n        </Switch>\n\n        {/*  Modals used by this page  */}\n        <SupplyModal\n          open={modalsStore.isSupplyModalActive}\n          closeModal={() => modalsStore.hideSupplyModal()}\n        />\n        <BorrowModal\n          open={modalsStore.isBorrowModalActive}\n          closeModal={() => modalsStore.hideBorrowModal()}\n        />\n        <ConnectedCollateralModal\n          open={modalsStore.isCollateralModalActive}\n          closeModal={() => modalsStore.hideCollateralModal()}\n        />\n\n        <ConnectedIncentiveModal\n          closeModal={() => modalsStore.hideIncentiveModal()}\n          open={modalsStore.isInventiveModalActive}\n        />\n      </div>\n    );\n  }\n);\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Fade,\n  makeStyles,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { ILendingNetworkGist } from \"../../services/lendingNetworksService/ILendingNetworksService\";\nimport { TokenIcon } from \"../../components/icons/TokenIcon\";\nimport {\n  BACKGROUND_DARK_COLOR,\n  BACKGROUND_LIGHT_COLOR,\n  TEXT_ON_DARK,\n  TEXT_ON_LIGHT,\n} from \"../../theme/themeConstants\";\nimport { SingleLNStore } from \"../../store/multiInstanceStores/SingleLNStore\";\nimport clsx from \"clsx\";\n\ninterface IProps {\n  lnStore: SingleLNStore;\n  onViewNetwork: (networkId: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    // margin: \"1rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flex: 1,\n    maxWidth: \"100%\",\n    width: \"15rem\",\n    miWidth: \"15rem\",\n    backgroundColor: BACKGROUND_LIGHT_COLOR,\n    borderRadius: \"5%\",\n    // backgroundColor: \"rgba(0,0,0,0.1)\",\n    boxShadow:\n      \"6px 6px 6px 6px rgba(0, 0, 0, 0.2),  -8px -8px 18px 0px rgba(255, 255, 255, 0.55)\",\n\n    justifySelf: \"center\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    color: TEXT_ON_LIGHT,\n  },\n  cardHeader: {\n    // textAlign: \"center\",\n    fontWeight: \"bold\",\n    // color: TEXT_ON_LIGHT,\n    paddingTop: \"0.5rem\",\n    paddingBottom: \"0.5rem\",\n    paddingLeft: \"0.5rem\",\n    paddingRight: \"0.5rem\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"Center\",\n    backgroundColor: BACKGROUND_DARK_COLOR,\n    color: TEXT_ON_DARK,\n  },\n  alphaMessage: {\n    fontWeight: \"bold\",\n    color: \"#feb276\",\n    userSelect: \"none\",\n    // animation: \"$MoveUpDown 1.5s linear infinite\",\n    position: \"relative\",\n  },\n  content: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    color: TEXT_ON_LIGHT,\n  },\n  lnAssetTooltipWrapper: {\n    // backgroundColor: BACKGROUND_DARK_COLOR,\n    border: `1px solid ${BACKGROUND_DARK_COLOR}`,\n    backgroundColor: BACKGROUND_LIGHT_COLOR,\n    color: TEXT_ON_LIGHT,\n    marginBottom: 10,\n  },\n  lnAssetTooltipArrow: {\n    // backgroundColor: \"red\",\n    color: BACKGROUND_DARK_COLOR,\n    // border: `1px solid ${BACKGROUND_DARK_COLOR}`,\n    // color: \"#80dae3\",\n  },\n  lnAssetWrapper: {\n    height: \"2rem\",\n    width: \"2rem\",\n    // margin: \"0.1rem\",\n    // flex: 1,\n    // textAlign: \"center\",\n    // border: \"1px solid red\",\n  },\n  lnAsset: {\n    // flex: 1,\n    // height: \"100%\",\n    // width: \"100%\",\n  },\n  zoom: {\n    // paddingTop: 10,\n    cursor: \"pointer\",\n    transition: \"all ease 400ms\",\n    \"&:hover\": {\n      // height: \"2rem\",\n      // width: \"2rem\",\n      transform: \"scale(1.1)\",\n    },\n  },\n\n  \"@keyframes MoveUpDown\": {\n    \"0%, 100%\": {\n      bottom: \"-2px\",\n    },\n    \"50%\": {\n      bottom: \"2px\",\n    },\n  },\n}));\n\nexport const NetworkListItem: React.FC<IProps> = observer((props) => {\n  const classes = useStyles();\n  const { onViewNetwork, lnStore } = props;\n  const { id, name, distributionAssetParameters } = lnStore.lnGist;\n  const { symbol } = distributionAssetParameters;\n  // TODO : Fix styling\n  return (\n    <Card className={classes.card}>\n      {/*<CardHeader title={name} className={classes.title} />*/}\n      <div className={classes.cardHeader}>\n        <Typography variant={\"h6\"}>{name}</Typography>\n        <Typography variant={\"body2\"} className={classes.alphaMessage}>\n          In alpha\n        </Typography>\n      </div>\n\n      <CardContent style={{ width: \"100%\" }}>\n        <div\n          style={{\n            justifyItems: \"center\",\n            justifyContent: \"center\",\n            width: \"100%\",\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit, minmax(2rem, 1fr)\",\n            gridGap: 10,\n            // gridTemplateColumns: \"repeat(auto-fill,1fr)\",\n          }}\n        >\n          {lnStore.cTokensStores.map((cTokenStore) => (\n            <Tooltip\n              title={\"\"}\n              className={clsx([classes.lnAssetWrapper, classes.zoom])}\n              // style={{ border: \"1px solid red\" }}\n              key={`${cTokenStore.underlyingSymbol}_tooltip`}\n              enterTouchDelay={0}\n              leaveTouchDelay={5000}\n              // leaveDelay={200000}\n              interactive\n              arrow\n              placement={\"top\"}\n              classes={{\n                tooltip: classes.lnAssetTooltipWrapper,\n                arrow: classes.lnAssetTooltipArrow,\n              }}\n              TransitionComponent={Fade}\n              TransitionProps={{ timeout: 300 }}\n            >\n              <TokenIcon\n                symbol={cTokenStore.underlyingSymbol}\n                key={cTokenStore.underlyingSymbol}\n                extraClasses={[classes.lnAsset, classes.zoom]}\n              />\n            </Tooltip>\n          ))}\n        </div>\n      </CardContent>\n      <CardActions\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          backgroundColor: BACKGROUND_DARK_COLOR,\n          width: \"100%\",\n        }}\n      >\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => onViewNetwork(id)}\n        >\n          Enter Network\n        </Button>\n      </CardActions>\n    </Card>\n  );\n});\n","import { makeStyles } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { ILendingNetworkGist } from \"../../services/lendingNetworksService/ILendingNetworksService\";\nimport { NetworkListItem } from \"./NetworkListItem\";\nimport { SingleLNStore } from \"../../store/multiInstanceStores/SingleLNStore\";\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    display: \"flex\",\n    // flexDirection: \"column\",\n    // alignItems: \"center\",\n    margin: spacing(1, 8),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n  },\n}));\n\ninterface IProps {\n  // lendingNetworksGists: ILendingNetworkGist[];\n  lendingNetworkStores: SingleLNStore[];\n  onViewNetwork: (networkId: string) => void;\n}\n\nexport const NetworksList: React.FC<IProps> = observer((props) => {\n  const classes = useStyles();\n  const { lendingNetworkStores, onViewNetwork } = props;\n\n  return (\n    <div className={classes.root}>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(15rem, 1fr)\",\n          gridGap: 15,\n          padding: 15,\n          justifyItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {lendingNetworkStores.map((lnStore) => (\n          <NetworkListItem\n            onViewNetwork={onViewNetwork}\n            lnStore={lnStore}\n            key={lnStore.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n});\n","import { makeStyles, Typography } from \"@material-ui/core\";\nimport { observer } from \"mobx-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport { useLendingNetworksStore } from \"../../store/storeHooks\";\nimport { NetworksList } from \"./NetworksList\";\nimport {\n  BACKGROUND_DARK_COLOR,\n  OLA_BLUE,\n  OLA_CYAN,\n  OLA_ORANGE,\n  TEXT_ON_LIGHT,\n} from \"../../theme/themeConstants\";\nimport { ContentContainer } from \"../../components/structure/ContentContainer\";\n\nconst textShadowWidth = 1;\nconst textShadow = `-${textShadowWidth}px -${textShadowWidth}px 0 ${BACKGROUND_DARK_COLOR},\n                    ${textShadowWidth}px -${textShadowWidth}px 0 ${BACKGROUND_DARK_COLOR},\n                     -${textShadowWidth}px ${textShadowWidth}px 0 ${BACKGROUND_DARK_COLOR},\n                      ${textShadowWidth}px ${textShadowWidth}px 0 ${BACKGROUND_DARK_COLOR}`;\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    paddingTop: spacing(10),\n    // backgroundColor: BACKGROUND_DARK_COLOR,\n  },\n  title: {\n    color: TEXT_ON_LIGHT,\n    paddingBottom: spacing(2),\n  },\n  mainMessage: {\n    color: TEXT_ON_LIGHT,\n  },\n  letterO: {\n    margin: \"0.1rem\",\n    color: OLA_ORANGE,\n    // stroke: \"2px #feb276\",\n    // textShadow:\n    //   \"-2px -2px 0 #feb276, 2px -2px 0 #feb276, -2px 2px 0 #feb276, 2px 2px #feb276\",\n    // textShadow: `-2px -2px 0 ${BACKGROUND_DARK_COLOR}, 2px -2px 0 ${BACKGROUND_DARK_COLOR}, -2px 2px 0 ${BACKGROUND_DARK_COLOR}, 2px 2px 0 ${BACKGROUND_DARK_COLOR}`,\n    // textShadow,\n  },\n  letterL: {\n    margin: \"0.1rem\",\n    color: OLA_CYAN,\n    // textShadow:\n    //   \"-2px -2px 0 #80dae3, 2px -2px 0 #80dae3, -2px 2px 0 #80dae3, 2px 2px #80dae3\",\n    // textShadow: `-2px -2px 0 ${BACKGROUND_DARK_COLOR}, 2px -2px 0 ${BACKGROUND_DARK_COLOR}, -2px 2px 0 ${BACKGROUND_DARK_COLOR}, 2px 2px 0 ${BACKGROUND_DARK_COLOR}`,\n    // textShadow,\n  },\n  letterA: {\n    margin: \"0.1rem\",\n    color: OLA_BLUE,\n    // textShadow:\n    //   \"-2px -2px 0 #5053d4, 2px -2px 0 #5053d4, -2px 2px 0 #5053d4, 2px 2px #5053d4\",\n    // textShadow: `-2px -2px 0 ${BACKGROUND_DARK_COLOR}, 2px -2px 0 ${BACKGROUND_DARK_COLOR}, -2px 2px 0 ${BACKGROUND_DARK_COLOR}, 2px 2px 0 ${BACKGROUND_DARK_COLOR}`,\n    // textShadow: `-1px -1px 0 ${BACKGROUND_DARK_COLOR}, 1px -1px 0 ${BACKGROUND_DARK_COLOR}, -1px 1px 0 ${BACKGROUND_DARK_COLOR}, 1px 1px 0 ${BACKGROUND_DARK_COLOR}`,\n    // textShadow,\n  },\n  logoSpan: {\n    // height: `${TITLE_HEIGHT_REM}rem`,\n    height: \"6rem\",\n    // width: `${TITLE_HEIGHT_REM}rem`,\n    // width: \"20rem\",\n    backgroundImage: `url(${process.env.PUBLIC_URL}/assets/images/ola/ola_symbol_clear.png)`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"contain\",\n    backgroundColor: \"transparent\",\n    backgroundPosition: \"center\",\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n  },\n}));\n\nexport const AllNetworksPage: React.FC = observer(() => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { url } = useRouteMatch();\n  const lendingNetworksStore = useLendingNetworksStore();\n  // const { isLoading, lendingNetworks } = useLendingNetworksStore();\n  const activeLendingNetworkId = lendingNetworksStore.activeLendingNetworkId;\n  // Reset the 'active ln' when entering this page\n  useEffect(() => {\n    console.log(`In effect ${activeLendingNetworkId}`);\n    if (activeLendingNetworkId !== \"\") {\n      lendingNetworksStore.setActiveLn(\"\");\n    }\n  }, [activeLendingNetworkId, lendingNetworksStore]);\n\n  const onViewNetwork = React.useCallback(\n    (networkId: string) => {\n      const targetUrl = `${url}/${networkId}`;\n      history.push(targetUrl);\n    },\n    [history, url]\n  );\n\n  const texts = useMemo(() => {\n    return [\"New\", \"Exciting\"];\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <ContentContainer>\n        {/*<Typography variant=\"h1\" align=\"center\" className={classes.title}>*/}\n        {/*  /!*Ola Lending Networks*!/*/}\n        {/*  <span className={classes.letterO}>O</span>*/}\n        {/*  <span className={classes.letterL}>l</span>*/}\n        {/*  <span className={classes.letterA}>a </span>*/}\n        {/*  <span className={classes.letterO}>F</span>*/}\n        {/*  <span className={classes.letterL}>i</span>*/}\n        {/*  <span className={classes.letterA}>n</span>*/}\n        {/*  <span className={classes.letterO}>a</span>*/}\n        {/*  <span className={classes.letterL}>n</span>*/}\n        {/*  <span className={classes.letterA}>c</span>*/}\n        {/*  <span className={classes.letterO}>e</span>*/}\n        {/*</Typography>*/}\n        <div className={classes.logoSpan}></div>\n        <br />\n        <Typography variant=\"h1\" align=\"center\" className={classes.title}>\n          {/*Ola Lending Networks*/}\n          <span className={classes.letterO}>O</span>\n          <span className={classes.letterL}>n</span>{\" \"}\n          {/*<span className={classes.letterA}>a </span>*/}\n          <span className={classes.letterO}>F</span>\n          <span className={classes.letterL}>u</span>\n          <span className={classes.letterA}>s</span>\n          <span className={classes.letterO}>e</span>\n          {/*<span className={classes.letterL}>n</span>*/}\n          {/*<span className={classes.letterA}>c</span>*/}\n          {/*<span className={classes.letterO}>e</span>*/}\n        </Typography>\n\n        {/*<Typography variant=\"h5\" align=\"center\" className={classes.mainMessage}>*/}\n        {/*  <span className={classes.letterO}>Peer</span>*/}\n        {/*  <span className={classes.letterL}> to</span>*/}\n        {/*  <span className={classes.letterA}> Pool </span>*/}\n        {/*  Lending*/}\n        {/*</Typography>*/}\n        {/*<br />*/}\n        {/*<Typography variant={\"h6\"} align={\"center\"}>*/}\n        {/*  Curently in alpha*/}\n        {/*</Typography>*/}\n        {lendingNetworksStore.isLoading ? (\n          <Typography>Loading...</Typography>\n        ) : (\n          <NetworksList\n            // lendingNetworksGists={lendingNetworksStore.allLNGists}\n            onViewNetwork={onViewNetwork}\n            lendingNetworkStores={lendingNetworksStore.lendingNetworksStores}\n          />\n        )}\n      </ContentContainer>\n    </div>\n  );\n});\n","import { makeStyles, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { LendingNetworkPage } from \"./LendingNetworkPage/LendingNetworkPage\";\nimport { AllNetworksPage } from \"./AllNetworksPage/AllNetworksPage\";\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    borderRadius: 16,\n    width: \"80%\",\n    minHeight: 400,\n    maxWidth: 1200,\n    padding: spacing(2),\n    marginTop: spacing(4),\n    marginBottom: spacing(4),\n    margin: \"0 auto\",\n  },\n}));\n\nexport const Main: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    // <Paper elevation={22} className={classes.root}>\n    <Switch>\n      <Route path=\"/networks\" exact component={AllNetworksPage} />\n      <Route\n        path=\"/networks/:network_id\"\n        render={({ match }) => (\n          <LendingNetworkPage networkId={match.params.network_id} />\n        )}\n      />\n      <Redirect to=\"/networks\" />\n    </Switch>\n    // </Paper>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Header } from \"./components/header/Header\";\nimport { Main } from \"./pages/Main\";\nimport { observer } from \"mobx-react\";\nimport { useLendingNetworksStore } from \"./store/storeHooks\";\nimport { TLNContractsAddresses } from \"./services/Services\";\n\n// TODO : Handle tx failing gracefully.\n\nexport const App = observer(() => {\n  // This part is responsible for keeping the LN services aimed at the right LN contracts\n  const lendingNetworksStore = useLendingNetworksStore();\n  const firstLNParamsUnitrollerAddress =\n    lendingNetworksStore.lendingNetworkParameters[0]?.unitrollerAddress || \"\";\n  // const lnContractsAddresses = useMemo(() => {\n  //   console.log(\"Calculatin ln addresses\");\n  //   // console.log(firstLNParamsUnitrollerAddress);\n  //   const addresses: TLNContractsAddresses = {\n  //     unitrollerAddress:\n  //       lendingNetworksStore.lendingNetworkParameters[0]?.unitrollerAddress ||\n  //       \"\",\n  //   };\n  //\n  //   return addresses;\n  // }, [lendingNetworksStore.lendingNetworkParameters]);\n\n  // const addresses: TLNContractsAddresses = {\n  //   unitrollerAddress:\n  //     lendingNetworksStore.lendingNetworkParameters[0]?.unitrollerAddress || \"\",\n  // };\n\n  // useSyncLNServices();\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL || \"/\"}>\n      <Header />\n      <Main />\n    </BrowserRouter>\n  );\n});\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport responsiveFontSizes from \"@material-ui/core/styles/responsiveFontSizes\";\nimport {\n  BACKGROUND_DARK_COLOR,\n  BRAND_MAIN_COLOR,\n  TEXT_ON_LIGHT,\n} from \"./themeConstants\";\n\nexport const baseTheme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      primary: {\n        // main: \"#1a237e\",\n        main: BRAND_MAIN_COLOR,\n      },\n      secondary: {\n        main: \"#0091ea\",\n      },\n      text: {\n        // primary: \"#141E27\",\n        primary: TEXT_ON_LIGHT,\n      },\n      background: {\n        default: BACKGROUND_DARK_COLOR,\n      },\n    },\n  })\n);\n","import Web3 from \"web3\";\nimport { ICryptoWalletConnectionService } from \"./ICryptoWalletConnectionService\";\nimport { IEthereumProvider } from \"./IEthereumProvider\";\nimport { fromWei } from \"web3-utils\";\n\n// TODO : FUTURE : O.L : Change all ethereum.<call> to the new standard events format.\n//                        Consider using AbstractProvider\nexport class CryptoWalletConnectionService\n  implements ICryptoWalletConnectionService {\n  private readonly web3?: Web3;\n  public readonly hasEthereumProvider: boolean;\n  public readonly hasEventsSupport: boolean;\n  public readonly isMetamaskInstalled: boolean;\n  public readonly isSemiCompliantEthereumProviderInstalled: boolean;\n\n  constructor(private ethereum: IEthereumProvider) {\n    this.hasEthereumProvider = this.ethereum !== undefined;\n\n    // Distinguishes between installed ethereum providers\n    this.isMetamaskInstalled =\n      this.hasEthereumProvider && !!this.ethereum.isMetaMask;\n    this.isSemiCompliantEthereumProviderInstalled =\n      this.hasEthereumProvider && !this.ethereum.isMetaMask;\n\n    if (this.hasEthereumProvider) {\n      this.web3 = new Web3(this.ethereum as any);\n    }\n\n    const onFunction = this.hasEthereumProvider ? this.ethereum.on : undefined;\n    this.hasEventsSupport = onFunction !== undefined && onFunction !== null;\n  }\n\n  public async requestConnectionPermission(): Promise<boolean> {\n    try {\n      // await this.ethereum.enable();\n      // @ts-ignore\n      await this.ethereum.request({ method: \"eth_requestAccounts\" });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  // Getters\n  public getEthereumProvider() {\n    return this.ethereum;\n  }\n\n  public get didUserApproveDappInThePast(): boolean {\n    // DEV_NOTE : O.L : IMPORTANT ! : This currently works with the soon to be deprecated apis of metamask injected 'ethereum'\n    //                                and is not part of the properties in the official types of web3.\n    //                                We need to check and find a better way to detect if the user has already approved wallet access.\n    // @ts-ignore\n    return this.isMetamaskInstalled && !!this.ethereum.selectedAddress;\n  }\n\n  async getIsMainNetwork(): Promise<boolean> {\n    return this.isMetamaskInstalled && this.ethereum.networkVersion === \"1\";\n  }\n\n  // Data \"reading\"\n  async readChainId(): Promise<number> {\n    const chainId = (await this.web3?.eth.getChainId()) || -1;\n    return chainId;\n  }\n\n  async readEthereumBalance(address: string): Promise<number> {\n    const balance = await this.web3?.eth.getBalance(address);\n    const balanceInDecimal = parseFloat(fromWei(balance || \"0\"));\n    return balanceInDecimal;\n  }\n\n  async readMainAddress(): Promise<string> {\n    const accounts = (await this.web3?.eth.getAccounts()) || [];\n    return accounts[0];\n  }\n\n  async readCurrentBlockNumber(): Promise<number> {\n    return this.web3?.eth.getBlockNumber() || 0;\n  }\n\n  // Event listeners\n  onMainAddressChange(onChange: (mainAddress: string) => void): () => void {\n    if (!this.hasEventsSupport) {\n      throw new Error(\n        `Cannot subscribe to events with given Ethereum provider`\n      );\n    }\n\n    const listener = (accounts: string[]) => onChange(accounts[0]);\n\n    this.ethereum.on(\"accountsChanged\", listener);\n\n    return () => {\n      this.ethereum.off(\"accountsChanged\", listener);\n    };\n  }\n\n  onChainIdChange(onChange: (chainId: number) => void): () => void {\n    if (!this.hasEventsSupport) {\n      throw new Error(\n        `Cannot subscribe to events with given Ethereum provider`\n      );\n    }\n\n    const listener = (chainId: string) => {\n      console.log(`Typof chainId : ${typeof chainId}`);\n      onChange(parseInt(chainId));\n    };\n\n    this.ethereum.on(\"chainChanged\", listener);\n\n    return () => {\n      this.ethereum.off(\"chainChanged\", listener);\n    };\n  }\n}\n","export const READ_ONLY_ETHEREUM_ENDPOINT =\n  process.env.REACT_APP_READ_ONLY_ETHEREUM_ENDPOINT;\n\nexport const IS_PROD =\n  process.env.REACT_APP_USE_PROD === \"true\" ||\n  process.env.NODE_ENV === \"production\";\n\nexport const IS_DEV = !IS_PROD;\n","export async function fetchLocalJson<T = any>(localPath: string): Promise<T> {\n  const fetchRes = await fetch(`${process.env.PUBLIC_URL}/${localPath}`);\n  const json = (await fetchRes.json()) as T;\n\n  return json;\n}\n","import {\n  ILendingNetworkGist,\n  ILendingNetworkLiveState,\n  ILendingNetworkParameters,\n  ILendingNetworksService,\n} from \"./ILendingNetworksService\";\nimport { IS_DEV } from \"../../configs\";\nimport { fetchLocalJson } from \"../networkActions\";\nimport LocalNetworkDevLNAddresses from \"../../solidityInterfaces/localLNaddresses.json\";\n// TODO : CRITICAL almost : Add 'decimals on chain' to make sure that decimals are right for each chain.\nimport LocalNetworkDevTokensAddresses from \"../../solidityInterfaces/localTokensAddresses.json\";\nimport { NATIVE_COIN_ASSET_ADDRESS } from \"../../constants/constantAddresses\";\nimport { LendingNetworksParam } from \"./lendingNetworksParams\";\n\nexport class LendingNetworksService implements ILendingNetworksService {\n  async fetchALlLendingNetworksParameters(): Promise<\n    ILendingNetworkParameters[]\n  > {\n    const lnParams: ILendingNetworkParameters[] = [];\n\n    if (IS_DEV) {\n      const devNetworksgist = await this.fetchDevNetworkGist();\n\n      lnParams.push(...devNetworksgist);\n    } else {\n      lnParams.push(...LendingNetworksParam);\n    }\n\n    return lnParams;\n  }\n\n  async fetchAllLendingNetworksGists(): Promise<ILendingNetworkGist[]> {\n    return [];\n    const allLNsGists: ILendingNetworkGist[] = [];\n  }\n\n  async fetchLendingNetworkLiveState(\n    networkId: string\n  ): Promise<ILendingNetworkLiveState> {\n    return {\n      participatingSuppliers: 0,\n      tvl: 0,\n    };\n  }\n\n  private async fetchDevNetworkGist() {\n    const devNetworksgist = await fetchLocalJson<ILendingNetworkGist[]>(\n      \"lnParameters/devLnParams.json\"\n    );\n\n    // DEV_NOTE : We have one, and we want to at least semi-dynamically get the addresses\n    devNetworksgist[0].id = LocalNetworkDevLNAddresses.unitroller;\n    devNetworksgist[0].unitrollerAddress =\n      LocalNetworkDevLNAddresses.unitroller;\n    devNetworksgist[0].maximillionAddress =\n      LocalNetworkDevLNAddresses.maxmimilion;\n    devNetworksgist[0].distributionAssetParameters.address =\n      LocalNetworkDevTokensAddresses[\"WFUSE\"];\n\n    for (let assetInMarket of devNetworksgist[0].assets) {\n      const { symbol } = assetInMarket;\n      // @ts-ignore\n      const assetAddress = LocalNetworkDevTokensAddresses[symbol];\n      const assetAddressToUse =\n        symbol === \"FUSE\" ? NATIVE_COIN_ASSET_ADDRESS : assetAddress;\n\n      if (!assetAddressToUse) {\n        // This quick-fail will save some time debugging\n        throw new Error(`No addres for asset ${symbol}`);\n      } else {\n        assetInMarket.address = assetAddressToUse;\n      }\n    }\n\n    return devNetworksgist;\n  }\n}\n","/**\n * This functions takes a tuple returned from an 'ethers' contract object and returns it in a pure object form.\n */\nexport function etheresStructResponseToObject<T extends object>(\n  ethersStructResponse: any\n): T {\n  const obj = {};\n\n  for (let key in ethersStructResponse) {\n    // DEV_NOTE : We assume that all numeric keys belongs to the array and ignore them\n    if (Number.isNaN(parseInt(key))) {\n      // @ts-ignore\n      obj[key] = ethersStructResponse[key];\n    }\n  }\n\n  return obj as T;\n}\n","import { Contract } from \"ethers\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport UniswapAnchoredViewJson from \"../../../solidityInterfaces/UniswapAnchoredView.json\";\nimport {\n  IUniswapAnchoredViewService,\n  TTokenConfig,\n} from \"./IUniswapAnchoredViewService\";\nimport { UniswapAnchoredView } from \"../../../solidityInterfaces/UniswapAnchoredView\";\nimport { etheresStructResponseToObject } from \"../contractsIntegrationUtils\";\n\nexport class UniswapAnchoredViewService implements IUniswapAnchoredViewService {\n  private uniswapAnchoredViewContract: UniswapAnchoredView;\n\n  constructor(\n    uniswapAnchoredViewAddress: string,\n    signerOrProvider?: Signer | Provider\n  ) {\n    this.uniswapAnchoredViewContract = new Contract(\n      uniswapAnchoredViewAddress,\n      UniswapAnchoredViewJson.abi,\n      signerOrProvider\n    ) as UniswapAnchoredView;\n  }\n\n  /**\n   * @ DEV_NOTE : Basic example for contract reading function.\n   */\n  async getTokenConfigBySymbol(tokenSymbol: string): Promise<TTokenConfig> {\n    return etheresStructResponseToObject(\n      await this.uniswapAnchoredViewContract.getTokenConfigBySymbol(tokenSymbol)\n    );\n  }\n}\n","import { IEthereumProvider } from \"../services/cryptoWalletConnectionService/IEthereumProvider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { ethers } from \"ethers\";\nimport { READ_ONLY_ETHEREUM_ENDPOINT } from \"../configs\";\n\nexport function getSignerOrProvider(\n  ethereumProvider?: IEthereumProvider\n): Signer | Provider {\n  let signerOrProvider;\n\n  // DEV_NOTE: This should allow us to continue reading\n  if (ethereumProvider) {\n    // @ts-ignore\n    signerOrProvider = new ethers.providers.Web3Provider(ethereumProvider);\n  } else {\n    signerOrProvider = new ethers.providers.JsonRpcProvider(\n      // TODO: Change this to network specific values (mainnet, kovan etc...)\n      READ_ONLY_ETHEREUM_ENDPOINT\n    );\n  }\n\n  const signer = signerOrProvider.getSigner();\n  if (signer) {\n    signer\n      .getAddress()\n      .then((address) => console.log(`Signer is ${address}`))\n      .catch((e) => console.log(`Signer exists but we cannot get address`));\n    signerOrProvider = signer;\n  } else {\n    console.log(`Provider only`);\n  }\n\n  return signerOrProvider;\n}\n","import { BigNumber, Contract, ContractTransaction } from \"ethers\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport ComptrollerJson from \"../../../solidityInterfaces/Comptroller.json\";\nimport { IComptrollerService } from \"./IComptrollerService\";\nimport { Comptroller } from \"../../../solidityInterfaces/Comptroller\";\nimport { toJS } from \"mobx\";\n\nexport class ComptrollerService implements IComptrollerService {\n  // We will use the unitroller address but with the 'comptroller' interface (As it is only a proxy)\n  private unitrollerProxyContract: Comptroller;\n\n  constructor(unitrollerAddress: string, signerOrProvider: Signer | Provider) {\n    console.log(\"Before init uni\");\n\n    this.unitrollerProxyContract = new Contract(\n      unitrollerAddress,\n      ComptrollerJson.abi,\n      signerOrProvider\n    ) as Comptroller;\n\n    console.log(\"Initialized unitroller\");\n  }\n\n  public getComptrollerProxyAddress(): string {\n    return this.unitrollerProxyContract.address;\n  }\n\n  // TODO : This is not called for now, check if it is needed and then check if it works\n  public updateUnitrollerAddress(unitrollerAddress: string): void {\n    const after = this.unitrollerProxyContract.attach(unitrollerAddress);\n    console.log(`Param is ${unitrollerAddress}`);\n    console.log(`Result address is ${toJS(after.address)}`);\n    console.log(\n      `Property address is ${toJS(this.unitrollerProxyContract.address)}`\n    );\n  }\n\n  /**\n   * @ DEV_NOTE : All of the CTokens of this comptroller\n   */\n  async getAllMarkets(): Promise<string[]> {\n    const markets = await this.unitrollerProxyContract.getAllMarkets();\n    return markets;\n  }\n\n  async enterMarkets(cTokens: string[]): Promise<ContractTransaction> {\n    return this.unitrollerProxyContract.enterMarkets(cTokens);\n    // const res = await this.unitrollerProxyContract.callStatic.enterMarkets(\n    //   cTokens\n    // );\n    //\n    // console.log(`enter markets : ${res}`);\n    //\n    // return (null as any) as ContractTransaction;\n  }\n  async exitMarket(cToken: string): Promise<ContractTransaction> {\n    return this.unitrollerProxyContract.exitMarket(cToken);\n  }\n\n  async claimIncentiveFromAllMarkets(\n    account: string\n  ): Promise<ContractTransaction> {\n    return this.unitrollerProxyContract[\"claimComp(address)\"](account);\n  }\n}\n","import { BigNumber, Contract, ContractTransaction } from \"ethers\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport ERC20Json from \"../../../solidityInterfaces/ERC20.json\";\nimport { ERC20 } from \"../../../solidityInterfaces/ERC20\";\nimport { IErc20Service } from \"./IErc20Service\";\n\nexport class Erc20Service implements IErc20Service {\n  private erc20Contract: ERC20;\n\n  constructor(erc20Address: string, signerOrProvider: Signer | Provider) {\n    this.erc20Contract = new Contract(\n      erc20Address,\n      ERC20Json.abi,\n      signerOrProvider\n    ) as ERC20;\n  }\n\n  public async readBalance(address: string): Promise<BigNumber> {\n    return this.erc20Contract.balanceOf(address);\n  }\n\n  public async readAllowance(\n    ownerAddress: string,\n    spenderAddress: string\n  ): Promise<BigNumber> {\n    return this.erc20Contract.allowance(ownerAddress, spenderAddress);\n  }\n\n  public async approve(\n    spenderAddress: string,\n    amount: BigNumber\n  ): Promise<ContractTransaction> {\n    return this.erc20Contract.approve(spenderAddress, amount);\n  }\n}\n","import { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { IErc20BuilderService } from \"./IErc20BuilderService\";\nimport { IErc20Service } from \"./IErc20Service\";\nimport { Erc20Service } from \"./Erc20Service\";\n\nexport class Erc20BuilderService implements IErc20BuilderService {\n  constructor(private signerOrProvider: Signer | Provider) {}\n\n  buildErc20Service(erc20Address: string): IErc20Service {\n    return new Erc20Service(erc20Address, this.signerOrProvider);\n  }\n}\n","import { BigNumber, Contract, ContractTransaction } from \"ethers\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport CErc20Json from \"../../../solidityInterfaces/CErc20.json\";\nimport { ICErc20Service } from \"./ICErc20Service\";\nimport { CErc20 } from \"../../../solidityInterfaces/CErc20\";\n\nexport class CErc20Service implements ICErc20Service {\n  private cErc20Contract: CErc20;\n\n  constructor(erc20Address: string, signerOrProvider: Signer | Provider) {\n    this.cErc20Contract = new Contract(\n      erc20Address,\n      CErc20Json.abi,\n      signerOrProvider\n    ) as CErc20;\n  }\n\n  public async mint(amount: BigNumber): Promise<ContractTransaction> {\n    return this.cErc20Contract.mint(amount);\n  }\n\n  public async withdraw(amount: BigNumber): Promise<ContractTransaction> {\n    return this.cErc20Contract.redeemUnderlying(amount);\n  }\n\n  public async withdrawByOTokens(\n    oTokensAmount: BigNumber\n  ): Promise<ContractTransaction> {\n    return this.cErc20Contract.redeem(oTokensAmount);\n  }\n\n  public async borrow(amount: BigNumber): Promise<ContractTransaction> {\n    return this.cErc20Contract.borrow(amount);\n  }\n\n  public async repayBorrow(amount: BigNumber): Promise<ContractTransaction> {\n    return this.cErc20Contract.repayBorrow(amount);\n  }\n}\n","import { BigNumber, Contract, ContractTransaction } from \"ethers\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport CEtherJson from \"../../../solidityInterfaces/CEther.json\";\nimport MaximillionJson from \"../../../solidityInterfaces/Maximillion.json\";\nimport { ICEtherService } from \"./ICEtherService\";\nimport { CEther } from \"../../../solidityInterfaces/CEther\";\nimport { Maximillion } from \"../../../solidityInterfaces/Maximillion\";\nimport { formatEther, parseEther } from \"ethers/lib/utils\";\n\nexport class CEtherService implements ICEtherService {\n  private cEther: CEther;\n  private maximillion: Maximillion;\n\n  constructor(\n    cEtherAddress: string,\n    maximillionAddress: string,\n    private signerOrProvider: Signer | Provider\n  ) {\n    this.cEther = new Contract(\n      cEtherAddress,\n      CEtherJson.abi,\n      signerOrProvider\n    ) as CEther;\n\n    this.maximillion = new Contract(\n      maximillionAddress,\n      MaximillionJson.abi,\n      signerOrProvider\n    ) as Maximillion;\n  }\n\n  public async mint(amount: BigNumber): Promise<ContractTransaction> {\n    return this.cEther.mint({ value: amount });\n  }\n\n  public async withdraw(amount: BigNumber): Promise<ContractTransaction> {\n    return this.cEther.redeemUnderlying(amount);\n  }\n\n  public async withdrawByOTokens(\n    oTokensAmount: BigNumber\n  ): Promise<ContractTransaction> {\n    return this.cEther.redeem(oTokensAmount);\n  }\n\n  public async borrow(amount: BigNumber): Promise<ContractTransaction> {\n    return this.cEther.borrow(amount);\n  }\n\n  public async repayBorrow(amount: BigNumber): Promise<ContractTransaction> {\n    throw new Error(`Cannot call 'repayBorrow' for oNative`);\n  }\n\n  public async repayBorrowWithMaximillion(\n    borrowerAddress: string,\n    amount: BigNumber\n  ): Promise<ContractTransaction> {\n    console.log(`CEther repay borrow : ${amount.toString()}`);\n    console.log(`CEther repay borrow : ${formatEther(amount)}`);\n    return this.maximillion.repayBehalf(borrowerAddress, { value: amount });\n  }\n}\n","import { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { ICTokensBuilderService } from \"./ICTokensBuilderService\";\nimport { ICErc20Service } from \"./ICErc20Service\";\nimport { CErc20Service } from \"./CErc20Service\";\nimport { CEtherService } from \"./CEtherService\";\n\nexport class CTokensBuilderService implements ICTokensBuilderService {\n  constructor(private signerOrProvider: Signer | Provider) {}\n\n  buildCErc20Service(cErc20Address: string): ICErc20Service {\n    return new CErc20Service(cErc20Address, this.signerOrProvider);\n  }\n\n  buildCEtherService(cEther: string, maximillion: string): CEtherService {\n    return new CEtherService(cEther, maximillion, this.signerOrProvider);\n  }\n}\n","import localTokensAddressesJson from \"../solidityInterfaces/localTokensAddresses.json\";\nimport { TChainIds } from \"./chainConstants\";\n\nexport const SUPPORTED_TOKENS_PER_CHAIN = {\n  // Local Hardhat\n  1337: { ...localTokensAddressesJson },\n  31337: { ...localTokensAddressesJson },\n  // Ethereum mainnet\n  1: {},\n\n  // Fuse mainnet\n  122: null,\n};\n\n// Quick-n-Dirty to get Token names\nexport const SYMBOLS_TO_NAMES = {\n  DAI: \"DAI\",\n  USDC: \"USD Coin\",\n  FUSE: \"Fuse\",\n  BTC: \"Bitcoin\",\n  ETH: \"Ether\",\n  WETH: \"Wrapped Ether\",\n  WBTC: \"Wrapped Bitcoin\",\n  USDT: \"Tether\",\n};\n\nexport type TNativeCoinDetails = {\n  name: string;\n  symbol: string;\n  decimals: number;\n};\n\nconst ETHER_COIN_DETAILS: TNativeCoinDetails = {\n  symbol: \"ETH\",\n  name: \"Ether\",\n  decimals: 18,\n};\n\nconst FUSE_COIN_DETAILS: TNativeCoinDetails = {\n  symbol: \"FUSE\",\n  name: \"Fuse\",\n  decimals: 18,\n};\n\nexport const NATIVE_COIN_DETAILS_PER_CHAIN: Record<\n  TChainIds,\n  TNativeCoinDetails\n> = {\n  // Local + hardhat\n  1337: FUSE_COIN_DETAILS,\n  31337: FUSE_COIN_DETAILS,\n  // Mainnet\n  // 1: ETHER_COIN_DETAILS,\n  // Ropsten\n  3: ETHER_COIN_DETAILS,\n  // Fuse\n  122: FUSE_COIN_DETAILS,\n};\n\n// TODO : SEMI-CRITICAL : Have the right value for each chain.\nconst DAYS_IN_YEAR = 365;\nconst MAINNET_ETHERUM_BLOCKS_PER_YEAR = 2102400;\n\nconst ROPSTEN_BLOCKS_PER_MINUTE = 5;\nconst ROPSTEN_BLOCK_PER_DAY = ROPSTEN_BLOCKS_PER_MINUTE * 60 * 24;\nconst ROPSTEN_BLOCK_PER_YEAR = ROPSTEN_BLOCK_PER_DAY * DAYS_IN_YEAR;\n\nconst FUSE_BLOCKS_PER_MINUTE = 12;\nconst FUSE_BLOCK_PER_DAY = FUSE_BLOCKS_PER_MINUTE * 60 * 24;\nconst FUSE_BLOCK_PER_YEAR = FUSE_BLOCK_PER_DAY * DAYS_IN_YEAR;\n\nexport const BLOCKS_PER_YEAR_BY_CHAIN = {\n  // None\n  \"-1\": 0,\n\n  // Local Hardhat\n  1337: FUSE_BLOCK_PER_YEAR,\n  31337: FUSE_BLOCK_PER_YEAR,\n  // Ethereum mainnet\n  1: MAINNET_ETHERUM_BLOCKS_PER_YEAR,\n\n  // Ropsten\n  3: ROPSTEN_BLOCK_PER_YEAR,\n\n  // Rinkby\n  // 4: null,\n\n  // Fuse Mainnet\n  122: FUSE_BLOCK_PER_YEAR,\n\n  // BSC\n  // 97: null,\n};\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  makeObservable,\n  observable,\n  reaction,\n} from \"mobx\";\nimport { ICryptoWalletConnectionService } from \"../services/cryptoWalletConnectionService/ICryptoWalletConnectionService\";\nimport { IEthereumProvider } from \"../services/cryptoWalletConnectionService/IEthereumProvider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getSignerOrProvider } from \"../ethereumConnection/ethereumConnection\";\nimport { BLOCKS_PER_YEAR_BY_CHAIN } from \"../constants/supportedTokensPerChain\";\n\nexport class CryptoWalletConnectionStore {\n  @observable private walletConnectionRequestApproved: boolean = false;\n\n  @observable public ethereumProvider: IEthereumProvider;\n  @observable public signerOrProvider: Signer | Provider;\n  @observable public hasEthereumProvider: boolean;\n  @observable public hasEventsSupport: boolean;\n\n  @observable public mainAddress: string = \"\";\n  @observable public chainId: number = -1;\n\n  @observable public nativeCoinBalance: number = 0;\n\n  @computed public get blocksPerYear(): number {\n    // @ts-ignore\n    const blocksPerYear = BLOCKS_PER_YEAR_BY_CHAIN[this.chainId];\n\n    if (blocksPerYear === undefined) {\n      return 0;\n    }\n\n    return blocksPerYear;\n  }\n\n  private addressCheckingInterval?: NodeJS.Timeout = undefined;\n  reactionToWalletConnection: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletConnectionService: ICryptoWalletConnectionService\n  ) {\n    makeObservable(this);\n\n    this.ethereumProvider = this.cryptoWalletConnectionService.getEthereumProvider();\n    this.signerOrProvider = getSignerOrProvider(this.ethereumProvider);\n    this.hasEthereumProvider =\n      cryptoWalletConnectionService.hasEthereumProvider;\n    this.hasEventsSupport = cryptoWalletConnectionService.hasEventsSupport;\n\n    this.reactionToWalletConnection = reaction(\n      () => this.isConnectedToWallet,\n      async (isConnected) => {\n        if (isConnected) {\n          this.readInformationFromConnectedWallet();\n        }\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n\n    if (this.hasEthereumProvider) {\n      // We will only detect address change if the Ethereum provider can support it\n      if (this.cryptoWalletConnectionService.hasEventsSupport) {\n        console.log(\"Provider has events support\");\n        this.cryptoWalletConnectionService.onMainAddressChange((address) => {\n          console.log(`DETECTED ADDDRESS CHANGE ${address}`);\n          this.setMainAddress(address);\n        });\n\n        this.cryptoWalletConnectionService.onChainIdChange((chainId) => {\n          console.log(`CHAIN-ID CHANGE ${chainId}`);\n          this.setChainId(chainId);\n        });\n      } else {\n        console.log(\"Provider does not have events support\");\n\n        // Else, we will read it one time + set an interval\n        this.addressCheckingInterval = setInterval(\n          () => this.refreshState(),\n          1000\n        );\n      }\n    }\n  }\n\n  @computed\n  public get isConnectedToWallet(): boolean {\n    return (\n      this.hasEthereumProvider &&\n      (this.cryptoWalletConnectionService.didUserApproveDappInThePast ||\n        this.walletConnectionRequestApproved)\n    );\n  }\n\n  public async refreshState() {\n    console.log(\"REFRESH-STATE\");\n    await this.readInformationFromConnectedWallet();\n  }\n\n  public async askToConnect(): Promise<boolean> {\n    if (this.isConnectedToWallet) {\n      return true;\n    } else {\n      const permissionGranted = await this.cryptoWalletConnectionService.requestConnectionPermission();\n      this.setWalletConnectionRequestApproved(permissionGranted);\n\n      return this.walletConnectionRequestApproved;\n    }\n  }\n\n  private async readInformationFromConnectedWallet() {\n    // Chain Id\n    const chainId = await this.cryptoWalletConnectionService.readChainId();\n    this.setChainId(chainId);\n\n    // Wallet address\n    const walletAddress = await this.cryptoWalletConnectionService.readMainAddress();\n    this.setMainAddress(walletAddress);\n\n    // Wallet balance\n    const walletBalance = await this.cryptoWalletConnectionService.readEthereumBalance(\n      walletAddress\n    );\n    this.setNativeCoinBalance(walletBalance);\n  }\n\n  @action(\"setWalletConnectionRequestApproved\")\n  private setWalletConnectionRequestApproved(requestApproved: boolean) {\n    this.walletConnectionRequestApproved = requestApproved;\n  }\n\n  @action(\"setMainAddress\")\n  private setMainAddress(mainAddress: string) {\n    this.mainAddress = mainAddress;\n  }\n\n  @action(\"setChainId\")\n  private setChainId(chainId: number) {\n    this.chainId = chainId;\n  }\n\n  @action(\"setNativeCoinBalance\")\n  private setNativeCoinBalance(nativeCoinBalance: number) {\n    console.log({ nativeCoinBalance });\n    this.nativeCoinBalance = nativeCoinBalance;\n  }\n}\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  ObservableMap,\n  reaction,\n} from \"mobx\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { PromiEvent, TransactionReceipt } from \"web3-core\";\nimport { JSON_RPC_ERROR_CODES } from \"../constants/ethereumErrorCodes\";\nimport { TErc20Meta } from \"../services/contractsIntegration/TokensLensService/ITokensLensService\";\nimport { BigNumber } from \"ethers\";\nimport { LendingNetworksStore } from \"./LendingNetworksStore\";\nimport { SingleLNStore } from \"./multiInstanceStores/SingleLNStore\";\nimport { IErc20BuilderService } from \"../services/contractsIntegration/erc20Service/IErc20BuilderService\";\nimport { ICTokensBuilderService } from \"../services/contractsIntegration/cTokensService/ICTokensBuilderService\";\nimport { SystemStore } from \"./SystemStore\";\n\nexport type TTokenMetaWithBalance = TErc20Meta & {\n  balance: BigNumber;\n  name: string;\n  balanceInUnits: number;\n};\n\nexport type TAssetAmount = {\n  rawAmount: BigNumber;\n  amountInUnits: number;\n};\n\nexport class AccountStore {\n  @observable public contractParametersDoneLoading = false;\n  @observable public contractParametersErrorLoading = false;\n  @observable public doneLoading = false;\n  @observable public errorLoading = false;\n\n  // Symbol -> TokenMetaWithBalance\n  @observable public tokensWithBalances: ObservableMap<\n    string,\n    TTokenMetaWithBalance\n  > = observable(new Map<string, TTokenMetaWithBalance>());\n\n  // Spender -> token-address -> TAssetAmount\n  @observable public allowances: ObservableMap<\n    string,\n    Map<string, TAssetAmount>\n  > = observable(new Map<string, Map<string, TAssetAmount>>());\n\n  // TODO : Move tx's state to a different store\n  @observable\n  public txPending = false;\n  @observable public txHadError = false;\n  @observable public txCanceled = false;\n\n  /**\n   * For better DX\n   */\n  @computed get symbolsToUnits(): Record<string, number> {\n    console.log(\"Computing s2u\");\n    const s2u = Array.from(this.tokensWithBalances.entries()).reduce(\n      (obj, cur) => {\n        const [symbol, metaWithBalances] = cur;\n        obj[symbol] = metaWithBalances.balanceInUnits;\n\n        return obj;\n      },\n      {} as Record<string, number>\n    );\n\n    return s2u;\n  }\n\n  private addressChangeReaction: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletIntegrationStore: CryptoWalletConnectionStore,\n    private systemStore: SystemStore,\n    private lendingNetworksStore: LendingNetworksStore,\n    private erc20BuilderService: IErc20BuilderService,\n    private cTokensBuilderService: ICTokensBuilderService\n  ) {\n    this.addressChangeReaction = reaction(\n      () => [\n        this.cryptoWalletIntegrationStore.chainId,\n        this.cryptoWalletIntegrationStore.mainAddress,\n        this.lendingNetworksStore.activeLNStore as SingleLNStore,\n      ],\n      async ([chainId, address, activeLNStoreId]) => {\n        this.setDoneLoading(false);\n        await this.reactToConnectedChainOrAddressChanged(\n          // DEV_NOTE : We add 'as' because TS thinks mixes the string and number in the array\n          chainId as number,\n          address as string,\n          (activeLNStoreId as SingleLNStore) || undefined\n        );\n        this.setDoneLoading(true);\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n  }\n\n  // **** Computed values ****\n\n  // **** Contract interactions ****\n  private async handlePromievent(\n    promievent: PromiEvent<TransactionReceipt>,\n    name = \"A promievent\"\n  ): Promise<TransactionReceipt | undefined> {\n    this.resetTxIndicators();\n\n    // Indicate tx is pending\n    this.setTxPending(true);\n    console.log(`Waiting for promievent of ${name}`);\n\n    try {\n      const res = await promievent;\n      console.log(`Got Results for promievent of ${name}`);\n      return res;\n    } catch (e) {\n      if (\n        (e as any).code === JSON_RPC_ERROR_CODES.provider.userRejectedRequest\n      ) {\n        this.setTxCanceled(true);\n      } else {\n        throw e;\n      }\n    } finally {\n      this.setTxPending(false);\n    }\n  }\n\n  public async approveErc20Usage(\n    erc20Address: string,\n    spender: string,\n    amount: BigNumber\n  ) {\n    // TODO : Add proper tx interaction.\n    console.log(\n      `Approving ${amount.toString()} for ${spender} on ${erc20Address}`\n    );\n    const contractInteraction = await this.erc20BuilderService\n      .buildErc20Service(erc20Address)\n      .approve(spender, amount);\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    contractInteraction.wait().then(() => this.manuallyUpdateAllStores());\n\n    // TODO : CRITICAL : Handle txs\n    return contractInteraction;\n  }\n\n  public async supplyToMarket(\n    cTokenAddress: string,\n    amount: BigNumber,\n    isNativeCoin: boolean,\n    maximillionAddress: string\n  ) {\n    // TODO : Add proper tx interaction.\n    console.log(`Supplying ${amount.toString()} to market ${cTokenAddress}`);\n    const cTokenService = isNativeCoin\n      ? this.cTokensBuilderService.buildCEtherService(\n          cTokenAddress,\n          maximillionAddress\n        )\n      : this.cTokensBuilderService.buildCErc20Service(cTokenAddress);\n\n    const contractInteraction = await cTokenService.mint(amount);\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    contractInteraction.wait().then(() => this.manuallyUpdateAllStores());\n\n    // TODO : CRITICAL : Handle txs\n    return contractInteraction;\n  }\n\n  public async withdrawFromMarket(\n    cTokenAddress: string,\n    amount: BigNumber,\n    isNativeCoin: boolean,\n    maximillionAddress: string\n  ) {\n    // TODO : Add proper tx interaction.\n    console.log(`Withdrawing ${amount.toString()} to market ${cTokenAddress}`);\n    const cTokenService = isNativeCoin\n      ? this.cTokensBuilderService.buildCEtherService(\n          cTokenAddress,\n          maximillionAddress\n        )\n      : this.cTokensBuilderService.buildCErc20Service(cTokenAddress);\n\n    const contractInteraction = await cTokenService.withdraw(amount);\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    contractInteraction.wait().then(() => this.manuallyUpdateAllStores());\n\n    // TODO : CRITICAL : Handle txs\n    return contractInteraction;\n  }\n\n  public async withdrawFromMarketByOTokens(\n    cTokenAddress: string,\n    oTokensAmount: BigNumber,\n    isNativeCoin: boolean,\n    maximillionAddress: string\n  ) {\n    // TODO : Add proper tx interaction.\n    console.log(\n      `Withdrawing all (${oTokensAmount.toString()} oTokens) from market ${cTokenAddress}`\n    );\n    const cTokenService = isNativeCoin\n      ? this.cTokensBuilderService.buildCEtherService(\n          cTokenAddress,\n          maximillionAddress\n        )\n      : this.cTokensBuilderService.buildCErc20Service(cTokenAddress);\n\n    const contractInteraction = await cTokenService.withdrawByOTokens(\n      oTokensAmount\n    );\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    contractInteraction.wait().then(() => this.manuallyUpdateAllStores());\n\n    // TODO : CRITICAL : Handle txs\n    return contractInteraction;\n  }\n\n  public async borrowFromMarket(\n    cTokenAddress: string,\n    amount: BigNumber,\n    isNativeCoin: boolean,\n    maximillionAddress: string\n  ) {\n    // TODO : Add proper tx interaction.\n    console.log(`Borrowing ${amount.toString()} to market ${cTokenAddress}`);\n    const cTokenService = isNativeCoin\n      ? this.cTokensBuilderService.buildCEtherService(\n          cTokenAddress,\n          maximillionAddress\n        )\n      : this.cTokensBuilderService.buildCErc20Service(cTokenAddress);\n\n    const contractInteraction = await cTokenService.borrow(amount);\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    contractInteraction.wait().then(() => this.manuallyUpdateAllStores());\n\n    // TODO : CRITICAL : Handle txs\n    return contractInteraction;\n  }\n\n  public async repayToMarket(\n    cTokenAddress: string,\n    amount: BigNumber,\n    isNativeCoin: boolean,\n    maximillionAddress: string\n  ) {\n    // TODO : Add proper tx interaction.\n    console.log(`Repaying ${amount.toString()} to market ${cTokenAddress}`);\n    let contractTransaction;\n\n    if (isNativeCoin) {\n      const cNativeService = this.cTokensBuilderService.buildCEtherService(\n        cTokenAddress,\n        maximillionAddress\n      );\n\n      contractTransaction = await cNativeService.repayBorrowWithMaximillion(\n        this.cryptoWalletIntegrationStore.mainAddress,\n        amount\n      );\n    } else {\n      const cTokenService = this.cTokensBuilderService.buildCErc20Service(\n        cTokenAddress\n      );\n      contractTransaction = await cTokenService.repayBorrow(amount);\n    }\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    const receipt = await contractTransaction\n      .wait()\n      .then(() => this.manuallyUpdateAllStores());\n\n    // TODO : CRITICAL : Handle txs\n    // return receipt;\n    return contractTransaction;\n  }\n\n  // **** Current address changed ****\n\n  private async reactToConnectedChainOrAddressChanged(\n    chainId: number,\n    currentAddress: string,\n    activeLnStore?: SingleLNStore\n  ) {\n    if (currentAddress) {\n      if (this.cryptoWalletIntegrationStore.hasEventsSupport) {\n        this.refreshAccountListeners(currentAddress);\n      }\n\n      try {\n        await this.refreshDataForAccount(\n          chainId,\n          currentAddress,\n          this.systemStore.nativeCoinSymbol,\n          activeLnStore\n        );\n\n        // if\n      } catch (e) {\n        this.failLoadingProcess(e);\n        console.error(\n          \"Error in reacting to address change in Orbs Account Store\",\n          e\n        );\n      }\n    }\n  }\n\n  // **** Data reading and setting ****\n\n  /**\n   * DEV_NOTE : Move this to a dedicated 'tx's store that will handle tx and state refreshment.\n   */\n  public async manuallyUpdateAllStores() {\n    if (this.lendingNetworksStore.activeLNStore) {\n      this.lendingNetworksStore.activeLNStore.refreshFromOutside();\n    }\n    await this.manuallyReadAccountData();\n  }\n\n  public async manuallyReadAccountData() {\n    try {\n      await this.refreshDataForAccount(\n        this.cryptoWalletIntegrationStore.chainId,\n        this.cryptoWalletIntegrationStore.mainAddress,\n        this.systemStore.nativeCoinSymbol,\n        this.lendingNetworksStore.activeLNStore\n      );\n    } catch (e) {\n      this.failLoadingProcess(e);\n      console.error(\n        \"Error in manually reading address data in Account Store\",\n        e\n      );\n    }\n  }\n\n  private async refreshDataForAccount(\n    chainId: number,\n    accountAddress: string,\n    nativeCoinSymbol: string,\n    activeLnStore?: SingleLNStore\n  ) {\n    console.log(\n      `reading data for ${accountAddress} on ${chainId} for ln ${activeLnStore?.id}`\n    );\n    // Clear old data\n    this.clearAllAccountData();\n  }\n\n  private clearAllAccountData() {\n    this.clearTokenBalancesMap();\n  }\n\n  // **** Read and Set ****\n\n  // ****  Subscriptions ****\n\n  private async refreshAccountListeners(accountAddress: string) {\n    this.cancelAllCurrentSubscriptions();\n  }\n\n  private cancelAllCurrentSubscriptions() {}\n\n  // ****  Complex setters ****\n  private failLoadingProcess(error: Error) {\n    this.setErrorLoading(true);\n    this.setDoneLoading(true);\n  }\n\n  private resetTxIndicators() {\n    this.setTxPending(false);\n    this.setTxHadError(false);\n    this.setTxCanceled(false);\n  }\n\n  // ****  Observables setter actions ****\n  @action(\"setDoneLoading\")\n  private setDoneLoading(doneLoading: boolean) {\n    this.doneLoading = doneLoading;\n  }\n\n  @action(\"setErrorLoading\")\n  private setErrorLoading(errorLoading: boolean) {\n    this.errorLoading = errorLoading;\n  }\n\n  @action(\"setTxPending\")\n  private setTxPending(txPending: boolean) {\n    this.txPending = txPending;\n  }\n\n  @action(\"setTxCanceled\")\n  private setTxCanceled(txCanceled: boolean) {\n    this.txCanceled = txCanceled;\n  }\n\n  @action(\"setTxHadError\")\n  private setTxHadError(txHadError: boolean) {\n    this.txHadError = txHadError;\n  }\n\n  @action(\"clearTokenBalancesMap\")\n  private clearTokenBalancesMap() {\n    this.tokensWithBalances.clear();\n  }\n\n  @action(\"replaceTokenBalancesMap\")\n  private replaceTokenBalancesMap(\n    tokensWithBalancesMap: Map<string, TTokenMetaWithBalance>\n  ) {\n    this.tokensWithBalances.replace(tokensWithBalancesMap);\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nexport type TAssetInMarketParameters = {\n  name: string;\n  symbol: string;\n  address: string;\n  decimals: number;\n  isNativeCoin: boolean;\n};\n\nexport type TAssetInMarketState = {};\n\nexport type TAssetInMarketGist = TAssetInMarketParameters & TAssetInMarketState;\n\nexport const EMPTY_ASSET_IN_MARKET_PARAMETERS: TAssetInMarketParameters = {\n  address: \"\",\n  symbol: \"\",\n  name: \"\",\n  decimals: 0,\n  isNativeCoin: false,\n};\n\n// \"Parameters\" refers to the unChangeable elements (name, id, tokens, etc..)\n// TODO : Think of a better name\nexport interface ILendingNetworkParameters {\n  id: string;\n  chainId: string;\n  name: string;\n  lnHomePage: string;\n  unitrollerAddress: string;\n  maximillionAddress: string;\n  assets: TAssetInMarketParameters[];\n  distributionAssetParameters: TAssetInMarketParameters;\n}\n\nexport interface ILendingNetworkLiveState {\n  tvl: number;\n  participatingSuppliers: number;\n}\n\nexport interface ILendingNetworkGist\n  extends ILendingNetworkParameters,\n    ILendingNetworkLiveState {}\n\nexport interface ITokenData {\n  cToken: string;\n  cTokenName: string;\n  cTokenSymbol: string;\n  cTokenDecimals: string;\n  exchangeRateCurrent: string;\n  supplyRatePerBlock: string;\n  borrowRatePerBlock: string;\n  reserveFactorMantissa: string;\n  totalBorrows: string;\n  totalReserves: string;\n  totalSupply: string;\n  totalCash: string;\n  isListed: boolean;\n  collateralFactorMantissa: string;\n}\n\nexport interface IUnderlyingMetadata {\n  underlyingAssetAddress: string;\n  underlyingDecimals: string;\n  underlyingName: string;\n  underlyingSymbol: string;\n}\n\nexport interface ITokenUnderlyingPrice {\n  cToken: string;\n  underlyingPrice: string;\n}\n\nexport interface ILendingNetworksService {\n  fetchALlLendingNetworksParameters(): Promise<ILendingNetworkParameters[]>;\n  fetchAllLendingNetworksGists(): Promise<ILendingNetworkGist[]>;\n\n  fetchLendingNetworkLiveState(\n    networkId: string\n  ): Promise<ILendingNetworkLiveState>;\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { action, computed, makeObservable, observable } from \"mobx\";\nimport {\n  ITokenData,\n  ITokenUnderlyingPrice,\n  IUnderlyingMetadata,\n  TAssetInMarketParameters,\n} from \"../../services/lendingNetworksService/ILendingNetworksService\";\nimport {\n  TCTokenBalances,\n  TCTokenMetadata,\n  TCTokenUnderlyingPrice,\n} from \"../../services/contractsIntegration/CompoundLensService/ICompoundLensService\";\nimport { ethers } from \"ethers\";\nimport { CryptoWalletConnectionStore } from \"../CryptoWalletConnectionStore\";\n\nconst HARD_CODED_INCENTIVE_PRICE_IN_USD = 0.3;\n\nexport class SingleCTokenStore {\n  // CToken meta\n  @observable cTokenAddress: string;\n  @observable cTokenName: string;\n  @observable cTokenSymbol: string;\n  @observable cTokenDecimals: BigNumber;\n  @observable exchangeRateCurrent: BigNumber;\n  @observable supplyRatePerBlock: BigNumber;\n  @observable borrowRatePerBlock: BigNumber;\n  /**\n   * Total borrow of underlying units\n   */\n  @observable private totalBorrows: BigNumber;\n  @observable private totalReserves: BigNumber;\n  /**\n   * Total amount of cTokens in circulation\n   */\n  @observable private totalSupply: BigNumber;\n  @observable private totalCash: BigNumber;\n  @observable private reserveFactorMantissa: BigNumber;\n  @observable private collateralFactorMantissa: BigNumber;\n  @observable private incentiveSpeed: BigNumber;\n  @observable isListed: boolean;\n\n  @observable underlyingAssetAddress: string;\n  @observable underlyingDecimals: number;\n  @observable underlyingName: string;\n  @observable underlyingSymbol: string;\n  // @observable underlyingPrice: BigNumber;\n\n  // CToken balances\n  @observable private balanceOf: BigNumber; // CToken balance for the user\n  @observable private borrowBalanceCurrent: BigNumber; // Underlying borrowed by the user\n  @observable private balanceOfUnderlying: BigNumber; // Balance of underlying for the user in the cToken ( owed to the user, derived from the user's wallet  cToken balance ).\n  @observable private tokenBalance: BigNumber; // Underlying balance for the user in their wallet\n  @observable private tokenAllowance: BigNumber; // Allowance in underlying with cToken as spender\n\n  // CToken underlying price\n  @observable underlyingPrice: BigNumber;\n\n  // Account specific data\n  @observable isCollaterable: boolean;\n\n  @computed get cTokenMeta(): TCTokenMetadata {\n    const cTokenMeta: TCTokenMetadata = {\n      cToken: this.cTokenAddress,\n      cTokenDecimals: this.cTokenDecimals,\n      collateralFactorMantissa: this.collateralFactorMantissa,\n      exchangeRateCurrent: this.exchangeRateCurrent,\n      isListed: this.isListed,\n      reserveFactorMantissa: this.reserveFactorMantissa,\n      totalBorrows: this.totalBorrows,\n      totalReserves: this.totalReserves,\n      totalSupply: this.totalSupply,\n      underlyingAssetAddress: this.underlyingAssetAddress,\n      underlyingDecimals: BigNumber.from(this.underlyingDecimals),\n      borrowRatePerBlock: this.borrowRatePerBlock,\n      supplyRatePerBlock: this.supplyRatePerBlock,\n      totalCash: this.totalCash,\n      incentiveSpeed: this.incentiveSpeed,\n    };\n\n    return cTokenMeta;\n  }\n\n  constructor(\n    private cryptoWalletConnectionStore: CryptoWalletConnectionStore,\n    private assetInMarketParams: TAssetInMarketParameters\n  ) {\n    makeObservable(this);\n\n    this.cTokenAddress = \"\";\n    this.cTokenName = \"\";\n    this.cTokenSymbol = \"\";\n    this.cTokenDecimals = BigNumber.from(0);\n    this.exchangeRateCurrent = BigNumber.from(0);\n    this.supplyRatePerBlock = BigNumber.from(0);\n    this.borrowRatePerBlock = BigNumber.from(0);\n    this.totalBorrows = BigNumber.from(0);\n    this.totalReserves = BigNumber.from(0);\n    this.totalSupply = BigNumber.from(0);\n    this.totalCash = BigNumber.from(0);\n    this.reserveFactorMantissa = BigNumber.from(0);\n    this.collateralFactorMantissa = BigNumber.from(0);\n    this.isListed = false;\n    this.incentiveSpeed = BigNumber.from(0);\n\n    // These parameters are unchangeable\n    this.underlyingAssetAddress = assetInMarketParams.address;\n    this.underlyingDecimals = assetInMarketParams.decimals;\n    this.underlyingName = assetInMarketParams.name;\n    this.underlyingSymbol = assetInMarketParams.symbol;\n\n    // CToken balances\n    this.balanceOf = BigNumber.from(0);\n    this.borrowBalanceCurrent = BigNumber.from(0);\n    this.balanceOfUnderlying = BigNumber.from(0);\n    this.tokenBalance = BigNumber.from(0);\n    this.tokenAllowance = BigNumber.from(0);\n\n    // CToken underlying price\n    this.underlyingPrice = BigNumber.from(0);\n\n    // Account specific data\n    this.isCollaterable = false;\n  }\n\n  // **** State refresh from outside ****\n  public updateWithFreshState(\n    cTokenMeta: TCTokenMetadata,\n    cTokenBalances: TCTokenBalances,\n    cTokenUnderlyingPrice: TCTokenUnderlyingPrice\n  ) {\n    this.batchUpdateFromCTokenMeta(\n      cTokenMeta,\n      cTokenBalances,\n      cTokenUnderlyingPrice\n    );\n  }\n\n  public updateIsInCollaterable(isCollaterable: boolean) {\n    this.setIsCollaterable(isCollaterable);\n  }\n\n  @computed public get assetParams(): TAssetInMarketParameters {\n    return {\n      isNativeCoin: this.assetInMarketParams.isNativeCoin,\n      name: this.assetInMarketParams.name,\n      decimals: this.assetInMarketParams.decimals,\n      address: this.assetInMarketParams.address,\n      symbol: this.assetInMarketParams.symbol,\n    };\n  }\n\n  /**\n   * Calculates how much collateral is being generated for the specific account from this market\n   */\n  @computed public get accountCollateralPotentialInUSD(): number {\n    if (this.isCollaterable && this.accountSupplyInUnits > 0) {\n      console.log(`${this.underlyingSymbol} is collaterable`);\n\n      const fullDepositedValueUsd =\n        this.accountSupplyInUnits * this.underlyingUsdPrice;\n      const collateralPotentialUsd =\n        fullDepositedValueUsd * this.collateralFactorInUnits;\n\n      return collateralPotentialUsd;\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * Calculates how much collateral is being generated from this whole market\n   */\n  @computed public get marketCollateralPotentialInUSD(): number {\n    if (this.isCollaterable && this.accountSupplyInUnits > 0) {\n      // console.log(`${this.underlyingSymbol} is collaterable`);\n\n      const fullDepositedValueUsd = this.totalSupplyBalanceUsd;\n      const collateralPotentialUsd =\n        fullDepositedValueUsd * this.collateralFactorInUnits;\n\n      return collateralPotentialUsd;\n    } else {\n      return 0;\n    }\n  }\n\n  /***\n   * Indicates how many underlying units the CToken currently holds\n   */\n  @computed\n  public get cTokenCashInUnits(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(this.totalCash, this.underlyingDecimals)\n    );\n  }\n\n  /***\n   * Indicates how many USD worth of underlying units the CToken currently holds\n   */\n  @computed\n  public get cTokenCashInUSD(): number {\n    return this.cTokenCashInUnits * this.underlyingUsdPrice;\n  }\n\n  @computed\n  public get accountUnderlyingBalanceInUnits(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(this.tokenBalance, this.underlyingDecimals)\n    );\n  }\n\n  /**\n   * Underlying units supplied to market\n   */\n  @computed\n  public get totalSuppliedInUnits(): number {\n    return this.totalCTokensInCirculation * this.exchangeRateInUnits;\n  }\n\n  @computed\n  public get totalCTokensInCirculation(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(this.totalSupply, this.underlyingDecimals)\n    );\n  }\n\n  @computed public get exchangeRateInUnits(): number {\n    return parseFloat(ethers.utils.formatUnits(this.exchangeRateCurrent, 18));\n  }\n\n  @computed\n  public get accountSupplyInUnits(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(\n        this.balanceOfUnderlying,\n        this.underlyingDecimals\n      )\n    );\n  }\n\n  @computed\n  public get accountSupplyInOTokensRaw(): BigNumber {\n    return this.balanceOf;\n  }\n\n  @computed\n  public get accountSupplyInOTokensUnits(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(\n        this.accountSupplyInOTokensRaw,\n        this.cTokenDecimals\n      )\n    );\n  }\n\n  /**\n   * Underlying units borrowed from market\n   */\n  @computed\n  public get totalBorrowedInUnits(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(this.totalBorrows, this.underlyingDecimals)\n    );\n  }\n\n  @computed\n  public get accountBorrowInUnits(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(\n        this.borrowBalanceCurrent,\n        this.underlyingDecimals\n      )\n    );\n  }\n\n  @computed\n  public get underlyingUsdPrice(): number {\n    // DEV_NOTE : This calculation is based on the 'Lens' which returns the price is `36 - asset.decimals'\n    return parseFloat(\n      ethers.utils.formatUnits(\n        this.underlyingPrice,\n        36 - this.underlyingDecimals\n      )\n    );\n  }\n\n  @computed\n  public get totalSupplyBalanceUsd(): number {\n    return this.totalSuppliedInUnits * this.underlyingUsdPrice;\n  }\n\n  @computed\n  public get accountSupplyBalanceUsd(): number {\n    return this.accountSupplyInUnits * this.underlyingUsdPrice;\n  }\n\n  @computed\n  public get totalBorrowBalanceUsd(): number {\n    return this.totalBorrowedInUnits * this.underlyingUsdPrice;\n  }\n\n  @computed\n  public get accountBorrowBalanceUsd(): number {\n    return this.accountBorrowInUnits * this.underlyingUsdPrice;\n  }\n\n  /**\n   * We assume that if no cToken address has been set, it means that the 'batch update' has not finished.\n   */\n  @computed\n  public get hasBeenInitialized(): boolean {\n    return this.cTokenAddress !== \"\";\n  }\n\n  @computed\n  public get collateralFactorInUnits(): number {\n    const mantissaDecimals = 18;\n    return parseFloat(\n      ethers.utils.formatUnits(this.collateralFactorMantissa, mantissaDecimals)\n    );\n  }\n\n  @computed\n  public get supplyRatePerBlockInUnits(): number {\n    const ratePerBlockDecimals = 18;\n    return parseFloat(\n      ethers.utils.formatUnits(this.supplyRatePerBlock, ratePerBlockDecimals)\n    );\n  }\n\n  @computed\n  public get borrowRatePerBlockInUnits(): number {\n    const ratePerBlockDecimals = 18;\n    return parseFloat(\n      ethers.utils.formatUnits(this.borrowRatePerBlock, ratePerBlockDecimals)\n    );\n  }\n\n  /***\n   * Supply APY in units (e.g : 0.57 (%57))\n   */\n  @computed\n  public get supplyApyInUnits(): number {\n    const blockPerYear = this.cryptoWalletConnectionStore.blocksPerYear;\n\n    return this.supplyRatePerBlockInUnits * blockPerYear;\n  }\n\n  /***\n   * Borrow APY in units (e.g : 0.57 (%57))\n   */\n  @computed\n  public get borrowApyInUnits(): number {\n    const blockPerYear = this.cryptoWalletConnectionStore.blocksPerYear;\n\n    return this.borrowRatePerBlockInUnits * blockPerYear;\n  }\n\n  /***\n   * Supply APY in units (e.g : 0.57 (%57))\n   */\n  @computed\n  public get supplyApyInPercentages(): number {\n    return this.supplyApyInUnits * 100;\n  }\n\n  /***\n   * Borrow APY in units (e.g : 0.57 (%57))\n   */\n  @computed\n  public get borrowApyInPercentages(): number {\n    return this.borrowApyInUnits * 100;\n  }\n\n  /**\n   * How many incentive tokens are distributed for this market's suppliers in a year.\n   */\n  @computed public get supplySideYearlyIncentiveDistributionInUnits(): number {\n    return this.incentiveDistributionPerYearInUnitsInTotal / 2;\n  }\n\n  @computed public get supplySideYearlyIncentiveDistributionInUsd(): number {\n    return (\n      this.supplySideYearlyIncentiveDistributionInUnits *\n      HARD_CODED_INCENTIVE_PRICE_IN_USD\n    );\n  }\n\n  /**\n   * The supplier's side incentive distribution APY in units (e.g 0.1)\n   */\n  @computed public get supplySideIncentiveDistributionApyInUnits(): number {\n    return (\n      this.supplySideYearlyIncentiveDistributionInUsd /\n      this.totalSupplyBalanceUsd\n    );\n  }\n\n  @computed\n  public get supplySideIncentiveDistributionApyInPercentages(): number {\n    return this.supplySideIncentiveDistributionApyInUnits * 100;\n  }\n\n  /**\n   * How many incentive tokens are distributed for this market's borrowers in a year.\n   */\n  @computed public get borrowSideYearlyIncentiveDistributionInUnits(): number {\n    return this.incentiveDistributionPerYearInUnitsInTotal / 2;\n  }\n\n  @computed public get borrowSideYearlyIncentiveDistributionInUsd(): number {\n    return (\n      this.borrowSideYearlyIncentiveDistributionInUnits *\n      HARD_CODED_INCENTIVE_PRICE_IN_USD\n    );\n  }\n\n  /**\n   * The borrower's side incentive distribution APY in units (e.g 0.1)\n   */\n  @computed public get borrowSideIncentiveDistributionApyInUnits(): number {\n    return (\n      this.borrowSideYearlyIncentiveDistributionInUsd /\n      this.totalBorrowBalanceUsd\n    );\n  }\n\n  @computed\n  public get borrowSideIncentiveDistributionApyInPercentages(): number {\n    return this.borrowSideIncentiveDistributionApyInUnits * 100;\n  }\n\n  /**\n   * How many incentive tokens are distributed for this market in a year.\n   */\n  @computed public get incentiveDistributionPerYearInUnitsInTotal(): number {\n    return (\n      this.incentiveDistributionPerBlockInUnits *\n      this.cryptoWalletConnectionStore.blocksPerYear\n    );\n  }\n\n  /**\n   * How many incentive tokens are distributed for this market every single block.\n   */\n  @computed public get incentiveDistributionPerBlockInUnits(): number {\n    const speedMantissa = 18; // Default\n    return parseFloat(\n      ethers.utils.formatUnits(this.incentiveSpeed, speedMantissa)\n    );\n  }\n\n  /**\n   * Expected yearly revenue for supply interest.\n   */\n  @computed\n  public get totalAccountYearlyGainsUsd(): number {\n    return this.accountSupplyInUnits * this.supplyApyInUnits;\n  }\n\n  /**\n   * Expected yearly payment for borrow interest.\n   */\n  @computed\n  public get totalAccountYearlyLossesUsd(): number {\n    return this.accountBorrowBalanceUsd * this.borrowApyInUnits;\n  }\n\n  /**\n   * The expected change in value in a year.\n   */\n  @computed\n  public get totalAccountYearlyChangeUsd(): number {\n    return this.totalAccountYearlyGainsUsd - this.totalAccountYearlyLossesUsd;\n  }\n\n  @computed public get hasAnyAllowance(): boolean {\n    return this.tokenAllowance.gt(0);\n  }\n\n  public getUnitsForUsdValue(usdValue: number): number {\n    return usdValue / this.underlyingUsdPrice;\n  }\n\n  // **** Complex setters ****\n\n  @action(\"batchUpdateFromCTokenMeta\")\n  private batchUpdateFromCTokenMeta(\n    cTokenMeta: TCTokenMetadata,\n    cTokenBalances: TCTokenBalances,\n    cTokenUnderlyingPrice: TCTokenUnderlyingPrice\n  ) {\n    this.cTokenAddress = cTokenMeta.cToken;\n    this.cTokenDecimals = cTokenMeta.cTokenDecimals;\n    // this.cTokenName = cTokenMeta.;\n    // this.cTokenSymbol = \"\";\n\n    this.exchangeRateCurrent = cTokenMeta.exchangeRateCurrent;\n    this.supplyRatePerBlock = cTokenMeta.supplyRatePerBlock;\n    this.borrowRatePerBlock = cTokenMeta.borrowRatePerBlock;\n    this.totalBorrows = cTokenMeta.totalBorrows;\n    this.totalReserves = cTokenMeta.totalReserves;\n    this.totalSupply = cTokenMeta.totalSupply;\n    this.totalCash = cTokenMeta.totalCash;\n    this.collateralFactorMantissa = cTokenMeta.collateralFactorMantissa;\n    this.isListed = cTokenMeta.isListed;\n    this.incentiveSpeed = cTokenMeta.incentiveSpeed;\n\n    // CToken Balances\n    this.balanceOf = cTokenBalances.balanceOf;\n    this.borrowBalanceCurrent = cTokenBalances.borrowBalanceCurrent;\n    this.balanceOfUnderlying = cTokenBalances.balanceOfUnderlying;\n    this.tokenBalance = cTokenBalances.tokenBalance;\n    this.tokenAllowance = cTokenBalances.tokenAllowance;\n\n    // CToken underlying price\n    this.underlyingPrice = cTokenUnderlyingPrice.underlyingPrice;\n  }\n\n  // **** Action setters ****\n  @action(\"setIsCollaterable\")\n  private setIsCollaterable(isCollaterable: boolean) {\n    this.isCollaterable = isCollaterable;\n\n    if (this.isCollaterable)\n      console.log(\n        `${this.underlyingSymbol} is collaterable with balance of ${this.totalSupplyBalanceUsd}`\n      );\n  }\n}\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  makeObservable,\n  observable,\n  reaction,\n  toJS,\n} from \"mobx\";\nimport {\n  EMPTY_ASSET_IN_MARKET_PARAMETERS,\n  ILendingNetworkGist,\n  ILendingNetworkLiveState,\n  ILendingNetworksService,\n  TAssetInMarketParameters,\n} from \"../../services/lendingNetworksService/ILendingNetworksService\";\nimport { TAssetInMarketGist } from \"../../pages/LendingNetworkPage/MarketsTab/markets/types\";\nimport { IObservableArray } from \"mobx/dist/internal\";\nimport {\n  ICompoundLensService,\n  TAccountLimits,\n  TCompBalanceMetadataExt,\n  TCTokenMetadata,\n} from \"../../services/contractsIntegration/CompoundLensService/ICompoundLensService\";\nimport { BigNumber, ContractTransaction, ethers } from \"ethers\";\nimport {\n  NATIVE_COIN_ASSET_ADDRESS,\n  ZERO_ADDRESS,\n} from \"../../constants/constantAddresses\";\nimport { CryptoWalletConnectionStore } from \"../CryptoWalletConnectionStore\";\nimport { IComptrollerService } from \"../../services/contractsIntegration/ComptrollerService/IComptrollerService\";\nimport { ComptrollerService } from \"../../services/contractsIntegration/ComptrollerService/ComptrollerService\";\nimport { SingleCTokenStore } from \"./SingleCTokenStore\";\nimport { BLOCKS_PER_YEAR_BY_CHAIN } from \"../../constants/supportedTokensPerChain\";\nimport { SystemStore } from \"../SystemStore\";\nimport { TSuppliedAssetGist } from \"../../pages/LendingNetworkPage/networkTab/networkOverview/NetworkSupplyBar\";\n\nexport class SingleLNStore {\n  @observable doneLoading: boolean = false;\n  @observable errorLoading: boolean = false;\n\n  @observable id: string;\n  @observable name: string;\n  @observable unitrollerAddress: string;\n  @observable maximillionAddress: string;\n  @observable lnHomePage: string;\n\n  @observable tvl: number;\n  @observable participatingSuppliers: number;\n\n  // DEV_NOTE : Currently they all have 6.\n  @observable private _priceCalculationDecimals: number = 6;\n\n  // Holds the parameters, used for initialization\n  @observable\n  assetsParams: IObservableArray<TAssetInMarketParameters> = observable([]);\n  @observable\n  assetBaseAddressToParams = observable(\n    new Map<string, TAssetInMarketParameters>()\n  );\n\n  // Holds the parameters with the live data\n  // @observable\n  // assetsGists: IObservableArray<TAssetInMarketGist> = observable([]);\n\n  // All cTokens addresses in comptroller\n  @observable allMarkets: IObservableArray<string> = observable([]);\n\n  @observable cTokensStores: IObservableArray<SingleCTokenStore> = observable(\n    []\n  );\n\n  // **** Reward token distribution *****\n  @observable\n  distributionAssetParams: TAssetInMarketParameters = EMPTY_ASSET_IN_MARKET_PARAMETERS;\n  // @observable distributionAssetRatePerBlock = 0;\n  @observable public incentiveBalance = observable(BigNumber.from(0));\n  @observable public incentiveAllocated = observable(BigNumber.from(0));\n\n  // **** Account specific data *****\n  @observable public liquidity = observable(BigNumber.from(0));\n  @observable public shortfall = observable(BigNumber.from(0));\n  // TODO : Fix native token wrap base address\n  @observable public marketsUserIsIn: IObservableArray<string> = observable([]);\n\n  // **** Lending-Network related computed value ****\n\n  @computed get lnGist(): ILendingNetworkGist {\n    const gist: ILendingNetworkGist = {\n      chainId: \"\", // TODO : Fill this chain id\n      distributionAssetParameters: EMPTY_ASSET_IN_MARKET_PARAMETERS,\n      unitrollerAddress: this.unitrollerAddress,\n      maximillionAddress: this.maximillionAddress,\n      participatingSuppliers: this.participatingSuppliers,\n      tvl: this.tvl,\n      name: this.name,\n      lnHomePage: this.lnHomePage,\n      assets: this.assetsParams,\n      id: this.id,\n    };\n\n    return gist;\n  }\n\n  // BaseAssetAddress -> CTokenStore\n  @computed get baseAssetsToCTokenStore(): Map<string, SingleCTokenStore> {\n    const map = new Map<string, SingleCTokenStore>();\n    for (let cTokenStore of this.cTokensStores) {\n      map.set(cTokenStore.underlyingAssetAddress, cTokenStore);\n    }\n    return map;\n  }\n\n  @computed\n  public get liquidityUsd(): number {\n    const liquidityDecimals = 18;\n    return parseFloat(\n      ethers.utils.formatUnits(this.liquidity, liquidityDecimals)\n    );\n  }\n\n  @computed\n  public get totalLNSupplyBalanceUsd(): number {\n    let totalSupplyUsd = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      totalSupplyUsd += cTokenStore.totalSupplyBalanceUsd;\n    }\n\n    return totalSupplyUsd;\n  }\n\n  @computed\n  public get totalLNBorrowBalanceUsd(): number {\n    let lNBorrowUsd = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      lNBorrowUsd += cTokenStore.totalBorrowBalanceUsd;\n    }\n\n    return lNBorrowUsd;\n  }\n\n  @computed public get priceCalculationDecimals(): number {\n    return this._priceCalculationDecimals;\n  }\n\n  @computed\n  public get lnUsedBorrowPercentage(): number {\n    return this.lnUsedBorrowFraction * 100;\n  }\n\n  @computed\n  public get lnUsedBorrowFraction(): number {\n    return this.totalLNBorrowBalanceUsd / this.lnCollateralPotentialInUSD;\n  }\n\n  @computed\n  public get lnCollateralPotentialInUSD(): number {\n    let lnPotentialCollateral = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      lnPotentialCollateral += cTokenStore.marketCollateralPotentialInUSD;\n    }\n\n    return lnPotentialCollateral;\n  }\n\n  @computed\n  public get lnSuppliedAssetsGists(): TSuppliedAssetGist[] {\n    let suppliedAssetsGists: TSuppliedAssetGist[] = [];\n\n    for (let cTokenStore of this.cTokensStores) {\n      const suppliedAssetParameter = cTokenStore.assetParams;\n      const suppliedAssetGist: TSuppliedAssetGist = {\n        ...suppliedAssetParameter,\n        suppliedUnits: cTokenStore.totalSuppliedInUnits,\n        suppliedUsd: cTokenStore.totalSupplyBalanceUsd,\n        supplyApyPercentage: cTokenStore.supplyApyInPercentages,\n      };\n\n      suppliedAssetsGists.push(suppliedAssetGist);\n    }\n\n    return suppliedAssetsGists;\n  }\n\n  // **** Account related computed value ****\n\n  @computed\n  public get totalAccountSupplyBalanceUsd(): number {\n    let totalAccountSupplyUsd = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      totalAccountSupplyUsd += cTokenStore.accountSupplyBalanceUsd;\n    }\n\n    return totalAccountSupplyUsd;\n  }\n\n  @computed\n  public get totalAccountBorrowBalanceUsd(): number {\n    let totalAccountBorrowUsd = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      totalAccountBorrowUsd += cTokenStore.accountBorrowBalanceUsd;\n    }\n\n    return totalAccountBorrowUsd;\n  }\n\n  /**\n   * Expected yearly revenue for supply interest from all markets.\n   */\n  @computed\n  public get totalAccountYearlyGainsUsd(): number {\n    let totalYearlyGains = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      totalYearlyGains += cTokenStore.totalAccountYearlyGainsUsd;\n    }\n\n    return totalYearlyGains;\n  }\n\n  /**\n   * Expected yearly payment for borrow interest from all markets.\n   */\n  @computed\n  public get totalAccountYearlyLossesUsd(): number {\n    let totalLossesGains = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      totalLossesGains += cTokenStore.totalAccountYearlyLossesUsd;\n    }\n\n    return totalLossesGains;\n  }\n\n  /**\n   * The expected USD change in value in a year.\n   */\n  @computed\n  public get totalAccountYearlyChangeUsd(): number {\n    let totalYearlyChanges = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      // console.log(\n      //   `${cTokenStore.underlyingSymbol} change : ${cTokenStore.totalYearlyChangeUsd}`\n      // );\n      totalYearlyChanges += cTokenStore.totalAccountYearlyChangeUsd;\n    }\n\n    return totalYearlyChanges;\n  }\n\n  @computed\n  public get netAccountApy(): number {\n    // TODO : CRITICAL : Calculate this.\n    // const netSupplyUsd = this.totalAccountSupplyBalanceUsd;\n    // const netBorrowUsd = this.totalAccountBorrowBalanceUsd;\n\n    // Sum up Yearly profit or loss in each market.\n    // Calculate difference\n    const totalYearlyChange = this.totalAccountYearlyChangeUsd;\n\n    // If positive, divide by total-supply-usd\n    // If negative, divide by total-borrow-usd\n    const divider =\n      totalYearlyChange > 0\n        ? this.totalAccountSupplyBalanceUsd\n        : this.totalAccountBorrowBalanceUsd;\n\n    return totalYearlyChange / divider;\n  }\n\n  @computed\n  public get accountCollateralPotentialInUSD(): number {\n    let potentialCollateral = 0;\n\n    for (let cTokenStore of this.cTokensStores) {\n      potentialCollateral += cTokenStore.accountCollateralPotentialInUSD;\n    }\n\n    return potentialCollateral;\n  }\n\n  @computed\n  public get accountUsedBorrowPercentage(): number {\n    return this.accountUsedBorrowFraction * 100;\n  }\n\n  @computed\n  public get accountUsedBorrowFraction(): number {\n    return (\n      this.totalAccountBorrowBalanceUsd / this.accountCollateralPotentialInUSD\n    );\n  }\n\n  @computed public get compBalanceUnits(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(\n        this.incentiveBalance,\n        this.distributionAssetParams.decimals\n      )\n    );\n  }\n\n  @computed public get compAllocatedUnits(): number {\n    return parseFloat(\n      ethers.utils.formatUnits(\n        this.incentiveAllocated,\n        this.distributionAssetParams.decimals\n      )\n    );\n  }\n\n  private addressChangeReaction: IReactionDisposer;\n\n  private comptrollerService: IComptrollerService;\n\n  constructor(\n    private cryptoWalletIntegrationStore: CryptoWalletConnectionStore,\n    private systemStore: SystemStore,\n    private lendingNetworksService: ILendingNetworksService,\n    lendingNetworkGist: ILendingNetworkGist\n  ) {\n    makeObservable(this);\n    this.id = lendingNetworkGist.id;\n    this.name = lendingNetworkGist.name;\n    this.unitrollerAddress = lendingNetworkGist.unitrollerAddress;\n    this.maximillionAddress = lendingNetworkGist.maximillionAddress;\n    this.lnHomePage = lendingNetworkGist.lnHomePage;\n    // Quick-n-Dirty asset params\n    this.assetsParams.replace(lendingNetworkGist.assets);\n    this.assetBaseAddressToParams.replace(\n      new Map(\n        this.assetsParams.map((assetParam) => [assetParam.address, assetParam])\n      )\n    );\n    this.distributionAssetParams =\n      lendingNetworkGist.distributionAssetParameters;\n    this.tvl = lendingNetworkGist.tvl;\n    this.participatingSuppliers = lendingNetworkGist.participatingSuppliers;\n\n    // Move this to an action\n    // this.assetsGists.replace(\n    //   this.assetsParams.map((asset) => this.buildEmptyAssetInMarketGist(asset))\n    // );\n\n    this.comptrollerService = new ComptrollerService(\n      this.unitrollerAddress,\n      this.cryptoWalletIntegrationStore.signerOrProvider\n    );\n\n    // Create cTokens stores\n    this.cTokensStores.replace(\n      this.assetsParams.map(\n        (assetParam) =>\n          new SingleCTokenStore(cryptoWalletIntegrationStore, assetParam)\n      )\n    );\n\n    // this.cTokensStores.forEach((cTokenStore) =>\n    //   console.log(\n    //     `CTokenStore : ${cTokenStore.underlyingSymbol} ${cTokenStore.underlyingAssetAddress}`\n    //   )\n    // );\n\n    this.addressChangeReaction = reaction(\n      () => [\n        this.cryptoWalletIntegrationStore.chainId,\n        this.cryptoWalletIntegrationStore.mainAddress,\n      ],\n      async ([chainId, address]) => {\n        this.setDoneLoading(false);\n        await this.reactToConnectedChainOrAddressChanged(\n          // DEV_NOTE : We add 'as' because TS thinks mixes the string and number in the array\n          chainId as number,\n          address as string\n        );\n        this.setDoneLoading(true);\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n  }\n\n  // **** Current address changed ****\n  private async reactToConnectedChainOrAddressChanged(\n    chainId: number,\n    currentAddress: string\n  ) {\n    if (currentAddress) {\n      try {\n        await this.readDataForAccount(chainId, currentAddress);\n      } catch (e) {\n        this.failLoadingProcess(e);\n        console.error(\n          \"Error in reacting to address change in Orbs Account Store\",\n          e\n        );\n      }\n    }\n  }\n\n  // **** Data reading and setting ****\n\n  /**\n   * Quick-n-Dirty\n   */\n  public async refreshFromOutside() {\n    return this.readDataForAccount(\n      this.cryptoWalletIntegrationStore.chainId,\n      this.cryptoWalletIntegrationStore.mainAddress\n    );\n  }\n\n  private async readDataForAccount(chainId: number, accountAddress: string) {\n    // console.log(\n    //   `SingleLnStore : readDataForAccount : ${chainId} ${accountAddress}`\n    // );\n    // console.log(`reading SINGLE LN data for ${accountAddress} on ${chainId}`);\n    // Clear old data\n    // this.clearAllAccountData();\n    // Refresh LN state\n    this.refreshLNNetworkState().catch((e) =>\n      console.error(`Failed refreshing LN Network state ${e.toString()}`)\n    );\n    // Refresh LN state\n    this.readAndSetCompBalanceMeta(accountAddress).catch((e) =>\n      console.error(`Failed readNSet compBalance ${e.toString()}`)\n    );\n\n    // Refresh cTokens - OLD\n    // this.readMarketsAndCTokensData().catch((e) =>\n    //   console.error(`Failed readNSet markets and ctoken ${e.toString()}`)\n    // );\n\n    await this.readNSetMarkets().catch((e) =>\n      console.error(`Failed readNSet markets ${e.toString()}`)\n    );\n\n    // Refresh cTokens\n    this.batchReadAndUpdateCTokensStores().catch((e) =>\n      console.error(`Failed readNSet batch CTokens state ${e.toString()}`)\n    );\n\n    // Refresh Account details\n    this.readNSetAccountLimits(\n      accountAddress,\n      this.unitrollerAddress\n    ).catch((e) =>\n      console.error(`Failed readNSet accountLimits ${JSON.stringify(e)}`)\n    );\n  }\n\n  /**\n   * Should be called after constructor\n   */\n  public async initialize() {\n    await this.refreshFromOutside();\n  }\n\n  public async refreshLNNetworkState() {\n    const liveState = await this.lendingNetworksService.fetchLendingNetworkLiveState(\n      this.id\n    );\n\n    this.setLiveState(liveState);\n  }\n\n  // **** Contract interactions ****\n  async enterMarketByBaseAsset(baseAssetAddress: string) {\n    const assetToCTokenStore = this.baseAssetsToCTokenStore;\n\n    if (!assetToCTokenStore.has(baseAssetAddress)) {\n      throw new Error(`No CToken Store for ${baseAssetAddress}`);\n    }\n\n    const cTokenStore = assetToCTokenStore.get(\n      baseAssetAddress\n    ) as SingleCTokenStore;\n    const tx = await this.comptrollerService.enterMarkets([\n      cTokenStore.cTokenAddress,\n    ]);\n    await tx.wait(1);\n\n    await this.readDataForAccount(\n      this.cryptoWalletIntegrationStore.chainId,\n      this.cryptoWalletIntegrationStore.mainAddress\n    );\n  }\n\n  async exitMarketByBaseAsset(baseAssetAddress: string) {\n    const assetToCTokenStore = this.baseAssetsToCTokenStore;\n\n    if (!assetToCTokenStore.has(baseAssetAddress)) {\n      throw new Error(`No CToken Store for ${baseAssetAddress}`);\n    }\n\n    const cTokenStore = assetToCTokenStore.get(\n      baseAssetAddress\n    ) as SingleCTokenStore;\n    const tx = await this.comptrollerService.exitMarket(\n      cTokenStore.cTokenAddress\n    );\n    await tx.wait(1);\n\n    await this.readDataForAccount(\n      this.cryptoWalletIntegrationStore.chainId,\n      this.cryptoWalletIntegrationStore.mainAddress\n    );\n  }\n\n  async enterMarketByCTokenAddress(\n    cTokenAddress: string\n  ): Promise<ContractTransaction> {\n    const tx = await this.comptrollerService.enterMarkets([cTokenAddress]);\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    tx.wait().then(async () => {\n      await this.readDataForAccount(\n        this.cryptoWalletIntegrationStore.chainId,\n        this.cryptoWalletIntegrationStore.mainAddress\n      );\n    });\n\n    return tx;\n  }\n\n  async exitMarketByCTokenAddress(\n    cTokenAddress: string\n  ): Promise<ContractTransaction> {\n    const tx = await this.comptrollerService.exitMarket(cTokenAddress);\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    tx.wait().then(async () => {\n      await this.readDataForAccount(\n        this.cryptoWalletIntegrationStore.chainId,\n        this.cryptoWalletIntegrationStore.mainAddress\n      );\n    });\n\n    return tx;\n  }\n\n  async claimLnIncentiveToken(): Promise<ContractTransaction> {\n    const tx = await this.comptrollerService.claimIncentiveFromAllMarkets(\n      this.cryptoWalletIntegrationStore.mainAddress\n    );\n\n    // DEV_NOTE : Refresh data after confirmation without waiting here\n    tx.wait().then(async () => {\n      await this.readDataForAccount(\n        this.cryptoWalletIntegrationStore.chainId,\n        this.cryptoWalletIntegrationStore.mainAddress\n      );\n    });\n\n    return tx;\n  }\n\n  // **** Read&Set ****\n\n  private async readNSetAccountLimits(\n    accountAddress: string,\n    comptrollerProxy: string\n  ) {\n    if (\n      accountAddress &&\n      comptrollerProxy &&\n      comptrollerProxy !== ZERO_ADDRESS &&\n      this.systemStore.compoundLensServiceInitialized\n    ) {\n      const accountLimits = await this.systemStore.compoundLensService.getAccountLimits(\n        comptrollerProxy,\n        accountAddress\n      );\n\n      this.setAccountLimits(accountLimits);\n    } else {\n      console.warn(\"Comptroller proxy address is empty\");\n    }\n  }\n\n  /**\n   * Simply calls 'getAllMarkets'\n   */\n  private async readNSetMarkets() {\n    const markets = await this.comptrollerService.getAllMarkets();\n\n    this.replaceMarkets(markets);\n  }\n\n  public async readAndSetCompBalanceMeta(account: string) {\n    if (!account || !this.systemStore.compoundLensServiceInitialized) {\n      return;\n    }\n\n    const compBalanceMetadataExt = await this.systemStore.compoundLensService.fetchCompBalanceMetadataExt(\n      this.distributionAssetParams.address,\n      this.unitrollerAddress,\n      account\n    );\n\n    this.setCompBalanceMeta(compBalanceMetadataExt);\n  }\n\n  // public async loadCTokenMetadata(): Promise<void> {\n  //   // this.setTokens(null);\n  //   const [\n  //     allCTokenData,\n  //     allUnderlyingMetadata,\n  //     allCTokenUnderlyingPrice,\n  //   ] = await Promise.all([\n  //     this.lendingNetworksService.fetchCTokenMetadataAll(\n  //       this.unitrollerAddress\n  //     ),\n  //     this.lendingNetworksService.fetchUnderlyingMetadataAll(\n  //       this.unitrollerAddress\n  //     ),\n  //     this.lendingNetworksService.cTokenUnderlyingPriceAll(\n  //       this.unitrollerAddress\n  //     ),\n  //   ]);\n  //\n  //   this.setTokens(\n  //     allCTokenData.map(\n  //       (cTokenData, idx) =>\n  //         new TokenStore(\n  //           cTokenData,\n  //           allUnderlyingMetadata[idx],\n  //           allCTokenUnderlyingPrice[idx]\n  //         )\n  //     )\n  //   );\n  // }\n\n  // ****  Complex setters ****\n  private failLoadingProcess(error: Error) {\n    this.setErrorLoading(true);\n    this.setDoneLoading(true);\n  }\n\n  private async batchReadAndUpdateCTokensStores() {\n    const cTokenMarkets = this.allMarkets;\n    // const [first, ...cTokenMarkets] = this.allMarkets;\n    // const cTokenMarkets = [this.allMarkets[1], this.allMarkets[3]];\n    // const cTokenMarkets = [this.allMarkets[1], this.allMarkets[3]];\n    if (!cTokenMarkets || !cTokenMarkets.length) {\n      return console.log(`No markets for cToken batch read and update`);\n    } else if (!this.systemStore.compoundLensServiceInitialized) {\n      return console.log(\"Lens service not yet initialized\");\n    }\n\n    // console.log(`All cToken-markets ${this.allMarkets}`);\n    const cTokenMetas = await this.systemStore.compoundLensService.cTokenMetadataAll(\n      cTokenMarkets\n    );\n    // console.log(`Got metas : ${JSON.stringify(cTokenMetas.length)} `);\n    // console.log(JSON.stringify(cTokenMetas, null, 2));\n    // console.log(\n    //   `cTokenBalances for ${this.cryptoWalletIntegrationStore.mainAddress}`\n    // );\n    const cTokenBalancesAll = await this.systemStore.compoundLensService.cTokenBalancesAll(\n      cTokenMarkets,\n      this.cryptoWalletIntegrationStore.mainAddress\n    );\n\n    // console.log(`Got balances : ${JSON.stringify(cTokenBalancesAll, null, 2)}`);\n    const cTokenUnderlyingPricesAll = await this.systemStore.compoundLensService.cTokenUnderlyingPriceAll(\n      cTokenMarkets\n    );\n    // console.log(`Got prices: ${JSON.stringify(cTokenUnderlyingPricesAll)} `);\n\n    for (let i = 0; i < cTokenMetas.length; i++) {\n      const cTokenMeta = cTokenMetas[i];\n      const cTokenBalances = cTokenBalancesAll[i];\n      const cTokenUnderlyingPrices = cTokenUnderlyingPricesAll[i];\n      let matchingSTokenStore = this.cTokensStores.find(\n        (cTokenStore) =>\n          cTokenStore.underlyingAssetAddress ===\n          cTokenMeta.underlyingAssetAddress\n      );\n\n      // DEV_NOTE : This is a temp solution to handle the fact that the 'Lens' returns 0x000 address for the native coin.\n      if (\n        !matchingSTokenStore &&\n        cTokenMeta.underlyingAssetAddress === ZERO_ADDRESS\n      ) {\n        console.log(\"Looking for native coin cTokenStore\");\n        console.log(\n          `POssible underlyings : ${this.cTokensStores.map(\n            (cTokenStore) => cTokenStore.underlyingAssetAddress\n          )}`\n        );\n        // TODO : CRITICAL : Lock on one standard\n        matchingSTokenStore = this.cTokensStores.find((cTokenStore) =>\n          [NATIVE_COIN_ASSET_ADDRESS, ZERO_ADDRESS].includes(\n            cTokenStore.underlyingAssetAddress\n          )\n        );\n      }\n\n      if (matchingSTokenStore) {\n        matchingSTokenStore.updateWithFreshState(\n          cTokenMeta,\n          cTokenBalances,\n          cTokenUnderlyingPrices\n        );\n\n        const marketIsColleterable = this.marketsUserIsIn.includes(\n          matchingSTokenStore.cTokenAddress\n        );\n        matchingSTokenStore.updateIsInCollaterable(marketIsColleterable);\n      } else {\n        console.log(\n          `No cTokenStore found for meta of ${cTokenMeta.underlyingAssetAddress}`\n        );\n      }\n    }\n  }\n\n  // @action\n  // private setTokens(tokens: TokenStore[] | null): void {\n  //   this.tokens = tokens;\n  // }\n\n  @action(\"setDoneLoading\")\n  private setDoneLoading(doneLoading: boolean) {\n    this.doneLoading = doneLoading;\n  }\n\n  @action(\"setErrorLoading\")\n  private setErrorLoading(errorLoading: boolean) {\n    this.errorLoading = errorLoading;\n  }\n\n  @action(\"setLiveState\")\n  private setLiveState(lnLiveState: ILendingNetworkLiveState) {\n    this.tvl = lnLiveState.tvl;\n    this.participatingSuppliers = lnLiveState.participatingSuppliers;\n  }\n\n  @action(\"setLiveState\")\n  private setCompBalanceMeta(compBalance: TCompBalanceMetadataExt) {\n    this.incentiveBalance = compBalance.balance;\n    this.incentiveAllocated = compBalance.allocated;\n  }\n\n  @action(\"setDistributionAssetRatePerBlock\")\n  private setDistributionAssetRatePerBlock(\n    distributionAssetRatePerBlock: number\n  ) {\n    // this.distributionAssetRatePerBlock = distributionAssetRatePerBlock;\n  }\n\n  @action(\"setAccountLimits\")\n  private setAccountLimits(accountLimits: TAccountLimits) {\n    console.log(`New liquidity ${accountLimits.liquidity}`);\n    console.log(`New shortfal ${accountLimits.shortfall}`);\n    this.liquidity = accountLimits.liquidity;\n    this.shortfall = accountLimits.shortfall;\n    this.marketsUserIsIn.replace(accountLimits.marketsIn);\n    console.log(`New markets in ${accountLimits.marketsIn}`);\n  }\n\n  @action(\"replaceMarkets\")\n  private replaceMarkets(newMarkets: string[]) {\n    this.allMarkets.replace(newMarkets);\n  }\n\n  private buildEmptyAssetInMarketGist(\n    assetInMarketParams: TAssetInMarketParameters\n  ): TAssetInMarketGist {\n    const gist: TAssetInMarketGist = {\n      name: assetInMarketParams.name,\n      symbol: assetInMarketParams.symbol,\n      address: assetInMarketParams.address,\n      decimals: assetInMarketParams.decimals,\n      isNativeCoin: assetInMarketParams.isNativeCoin,\n      // amountInWallet: 0,\n      borrowApy: 0,\n      supplyApy: 0,\n      usdLiquidity: 0,\n    };\n\n    return gist;\n  }\n}\n","import {\n  ILendingNetworkGist,\n  ILendingNetworkParameters,\n  ILendingNetworksService,\n} from \"../services/lendingNetworksService/ILendingNetworksService\";\nimport { action, computed, makeObservable, observable } from \"mobx\";\nimport { SingleLNStore } from \"./multiInstanceStores/SingleLNStore\";\nimport { IObservableArray } from \"mobx/dist/internal\";\nimport { ICompoundLensService } from \"../services/contractsIntegration/CompoundLensService/ICompoundLensService\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { CompoundLensService } from \"../services/contractsIntegration/CompoundLensService/CompoundLensService\";\nimport { SystemStore } from \"./SystemStore\";\n\nexport class LendingNetworksStore {\n  @observable isLoading: boolean = false;\n  @observable\n  lendingNetworkParameters: IObservableArray<ILendingNetworkParameters> = observable(\n    []\n  );\n  @observable\n  lendingNetworkGists: IObservableArray<ILendingNetworkGist> = observable([]);\n  // @observable lendingNetworkLiveState: ILendingNetworkLiveState[] = [];\n  @observable\n  lendingNetworksStores: IObservableArray<SingleLNStore> = observable([]);\n\n  @observable\n  activeLendingNetworkId: string = \"\";\n\n  @computed get allLNGists(): ILendingNetworkGist[] {\n    const gists = this.lendingNetworksStores.map((lnStore) => lnStore.lnGist);\n    return gists;\n  }\n\n  @computed get activeLNStore(): SingleLNStore | undefined {\n    const activeLnStore = this.lendingNetworksStores.find(\n      (lnStore) => lnStore.id === this.activeLendingNetworkId\n    );\n\n    return activeLnStore;\n  }\n\n  constructor(\n    private cryptoWalletIntegrationStore: CryptoWalletConnectionStore,\n    private systemStore: SystemStore,\n    private lendingNetworksService: ILendingNetworksService\n  ) {\n    makeObservable(this);\n\n    this.initializeStore();\n  }\n\n  public getLendingNetworkStore(networkId: string): SingleLNStore | null {\n    return this.lendingNetworksStores.find((l) => l.id === networkId) ?? null;\n  }\n\n  async initializeStore() {\n    this.setLoadingState(true);\n\n    // Get params for all registered LNs\n    await this.fetchAllLnParameters();\n\n    // Create a store for each LN\n    this.buildStoresForEachLn();\n\n    // Set the current LN as the first (just to initialize it with something)\n    // Initialize each store\n    this.initializeLNStores();\n\n    // this.setLendingNetworksGists(lnParameters);\n    this.setLoadingState(false);\n  }\n\n  private async fetchAllLnParameters() {\n    const lnParameters = await this.lendingNetworksService.fetchALlLendingNetworksParameters();\n    this.setLendingNetworkParameters(lnParameters);\n  }\n\n  private buildStoresForEachLn() {\n    const lnStores = this.lendingNetworkParameters.map((params) =>\n      this.buildLNStore(params)\n    );\n\n    this.setLendingNetworksStores(lnStores);\n  }\n\n  /**\n   * Calls 'initiailize' on each store\n   */\n  private initializeLNStores() {\n    // TODO : Critical : Should not initialize al stores. only the ones that match the network\n    this.lendingNetworksStores.forEach((lnStore) => lnStore.initialize());\n  }\n\n  private buildEmptyLnGist(\n    lnParams: ILendingNetworkParameters\n  ): ILendingNetworkGist {\n    const gist: ILendingNetworkGist = {\n      ...lnParams,\n      tvl: 0,\n      participatingSuppliers: 0,\n    };\n\n    return gist;\n  }\n\n  private buildLNStore(lnParams: ILendingNetworkParameters): SingleLNStore {\n    // Start with an empty gist\n    const gist: ILendingNetworkGist = {\n      ...lnParams,\n      tvl: 0,\n      participatingSuppliers: 0,\n    };\n\n    // Build the store\n    const lnStore = new SingleLNStore(\n      this.cryptoWalletIntegrationStore,\n      this.systemStore,\n      this.lendingNetworksService,\n      // this.compoundLensService,\n      gist\n    );\n\n    return lnStore;\n  }\n\n  // **** Active LN ****\n  public setActiveLn(lnIdAddress: string) {\n    this.setActiveLendingNetworkId(lnIdAddress);\n  }\n\n  // **** Computed values ****\n\n  // **** Contract interactions ****\n\n  // **** Current address changed ****\n\n  // **** Data reading and setting ****\n\n  // **** Read and Set ****\n\n  // ****  Subscriptions ****\n\n  // ****  Complex setters ****\n\n  // ****  Observables setter actions ****\n  // @action(\"setLendingNetworksGists\")\n  // private setLendingNetworksGists(lendingNetworkGists: ILendingNetworkGist[]) {\n  //   this.lendingNetworks = lendingNetworkGists.map(\n  //     (gits) => new SingleLNStore(this.lendingNetworksService, gits)\n  //   );\n  // }\n\n  @action(\"setLendingNetworksGists\")\n  private setLendingNetworksStores(lendingNetworkStores: SingleLNStore[]) {\n    this.lendingNetworksStores.replace(lendingNetworkStores);\n  }\n\n  @action(\"setLendingNetworksGists\")\n  private setLendingNetworksGists(lendingNetworkGists: ILendingNetworkGist[]) {\n    this.lendingNetworkGists.replace(lendingNetworkGists);\n  }\n\n  @action(\"setLendingNetworkParameters\")\n  private setLendingNetworkParameters(\n    lendingNetworkParameters: ILendingNetworkParameters[]\n  ) {\n    this.lendingNetworkParameters.replace(lendingNetworkParameters);\n  }\n\n  @action(\"setActiveLendingNetworkId\")\n  private setActiveLendingNetworkId(activeLendingNetworkId: string) {\n    this.activeLendingNetworkId = activeLendingNetworkId;\n  }\n\n  @action(\"setLoadingState\")\n  private setLoadingState(isLoading: boolean) {\n    this.isLoading = isLoading;\n  }\n}\n","import { action, computed, makeObservable, observable } from \"mobx\";\n\ntype TModalIds =\n  | \"SUPPLY_MODAL\"\n  | \"BORROW_MODAL\"\n  | \"COLLATERAL_MODAL\"\n  | \"INCENTIVE_MODAL\";\ntype TCurrentModalIds = TModalIds | \"NONE\";\n\nexport class ModalsStore {\n  @observable SUPPLY_MODAL_ID = \"SUPPLY_MODAL\";\n\n  @observable currentModalId: TCurrentModalIds = \"NONE\";\n  @observable assetBaseAddress: string = \"\";\n\n  @computed get isSupplyModalActive(): boolean {\n    return this.currentModalId === \"SUPPLY_MODAL\";\n  }\n\n  @computed get isBorrowModalActive(): boolean {\n    return this.currentModalId === \"BORROW_MODAL\";\n  }\n\n  @computed get isCollateralModalActive(): boolean {\n    return this.currentModalId === \"COLLATERAL_MODAL\";\n  }\n\n  @computed get isInventiveModalActive(): boolean {\n    return this.currentModalId === \"INCENTIVE_MODAL\";\n  }\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  // **** Modal management ****\n\n  public showSupplyModal(supplyAssetBaseAddress: string) {\n    this.showAssetActionModal(\"SUPPLY_MODAL\", supplyAssetBaseAddress);\n  }\n\n  public showBorrowModal(borrowAssetBaseAddress: string) {\n    this.showAssetActionModal(\"BORROW_MODAL\", borrowAssetBaseAddress);\n  }\n\n  public showCollateralModal(borrowAssetBaseAddress: string) {\n    this.showAssetActionModal(\"COLLATERAL_MODAL\", borrowAssetBaseAddress);\n  }\n\n  public showIncentiveModal() {\n    this.setCurrentModalId(\"INCENTIVE_MODAL\");\n  }\n\n  // **** Complex setters ****\n  private showAssetActionModal(\n    supplyModalId: TModalIds,\n    assetBaseAddress: string\n  ) {\n    // DEV_NOTE : Setting the asset before showing the modal to ensure that asset data will be found (no showing \"mid-way\" UI state)\n    this.setAssetBaseAddress(assetBaseAddress);\n    this.setCurrentModalId(supplyModalId);\n  }\n\n  /**\n   * Will only have any effect if the current modal is 'supply'\n   */\n  public hideSupplyModal() {\n    if (this.isSupplyModalActive) {\n      this.setCurrentModalId(\"NONE\");\n    }\n  }\n\n  /**\n   * Will only have any effect if the current modal is 'borrow'\n   */\n  public hideBorrowModal() {\n    if (this.isBorrowModalActive) {\n      this.setCurrentModalId(\"NONE\");\n    }\n  }\n\n  /**\n   * Will only have any effect if the current modal is 'collateral'\n   */\n  public hideCollateralModal() {\n    if (this.isCollateralModalActive) {\n      this.setCurrentModalId(\"NONE\");\n    }\n  }\n\n  /**\n   * Will only have any effect if the current modal is 'incentive'\n   */\n  public hideIncentiveModal() {\n    if (this.isInventiveModalActive) {\n      this.setCurrentModalId(\"NONE\");\n    }\n  }\n\n  // ****  Observables setter actions ****\n  @action(\"setCurrentModalId\")\n  private setCurrentModalId(currentModalId: TCurrentModalIds) {\n    console.log(`New current modal id ${currentModalId}`);\n    this.currentModalId = currentModalId;\n  }\n\n  @action(\"setAssetBaseAddress\")\n  private setAssetBaseAddress(assetBaseAddress: string) {\n    this.assetBaseAddress = assetBaseAddress;\n  }\n}\n","import { BigNumber, Contract } from \"ethers\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport CompoundLensJson from \"../../../solidityInterfaces/CompoundLens.json\";\nimport { CompoundLens } from \"../../../solidityInterfaces/CompoundLens\";\nimport {\n  ICompoundLensService,\n  TAccountLimits,\n  TCompBalanceMetadataExt,\n  TCTokenBalances,\n  TCTokenMetadata,\n  TCTokenUnderlyingPrice,\n} from \"./ICompoundLensService\";\nimport { parseEther } from \"ethers/lib/utils\";\nimport { etheresStructResponseToObject } from \"../contractsIntegrationUtils\";\n\nexport class CompoundLensService implements ICompoundLensService {\n  private compoundLensContract: CompoundLens;\n\n  constructor(\n    compoundLensAddress: string,\n    private signerOrProvider: Signer | Provider\n  ) {\n    this.compoundLensContract = new Contract(\n      compoundLensAddress,\n      CompoundLensJson.abi,\n      signerOrProvider\n    ) as CompoundLens;\n  }\n\n  public updateCompoundLensAddress(newCompoundLensAddress: string) {\n    console.log(`Updating compoundLens address to ${newCompoundLensAddress}`);\n    if (newCompoundLensAddress === \"\") {\n      console.log(\"Got an empty compound lens address\");\n    }\n\n    this.compoundLensContract = new Contract(\n      newCompoundLensAddress,\n      CompoundLensJson.abi,\n      this.signerOrProvider\n    ) as CompoundLens;\n  }\n\n  async cTokenMetadata(cTokenAddress: string): Promise<TCTokenMetadata> {\n    if (!this.isInitialized()) {\n      console.log(\"NotInitialized for : cTokenMetadataAll\");\n    }\n    return etheresStructResponseToObject(\n      await this.compoundLensContract.callStatic.cTokenMetadata(cTokenAddress)\n    );\n  }\n\n  async cTokenMetadataAll(\n    cTokenAddresses: string[]\n  ): Promise<TCTokenMetadata[]> {\n    // this.safeAddress();\n    if (!this.isInitialized()) {\n      console.log(\"NotInitialized for : cTokenMetadataAll\");\n      return [];\n    }\n    const rawMetas = await this.compoundLensContract.callStatic.cTokenMetadataAll(\n      cTokenAddresses\n    );\n\n    return rawMetas.map((rawMeta) => etheresStructResponseToObject(rawMeta));\n  }\n\n  async cTokenBalancesAll(\n    cTokenAddresses: string[],\n    account: string\n  ): Promise<TCTokenBalances[]> {\n    // this.safeAddress();\n    if (!this.isInitialized()) {\n      console.log(\"NotInitialized for : cTokenBalancesAll\");\n      return [];\n    }\n    const rawMetas = await this.compoundLensContract.callStatic.cTokenBalancesAll(\n      cTokenAddresses,\n      account\n    );\n\n    return rawMetas.map((rawMeta) => etheresStructResponseToObject(rawMeta));\n  }\n\n  async cTokenUnderlyingPriceAll(\n    cTokenAddresses: string[]\n  ): Promise<TCTokenUnderlyingPrice[]> {\n    // this.safeAddress();\n    if (!this.isInitialized()) {\n      console.log(\"NotInitialized for : cTokenUnderlyingPriceAll\");\n      return [];\n    }\n    const rawMetas = await this.compoundLensContract.callStatic.cTokenUnderlyingPriceAll(\n      cTokenAddresses\n    );\n\n    return rawMetas.map((rawMeta) => etheresStructResponseToObject(rawMeta));\n  }\n\n  async getAccountLimits(\n    comptrollerAddress: string,\n    account: string\n  ): Promise<TAccountLimits> {\n    // this.safeAddress();\n    if (!this.isInitialized()) {\n      console.log(\"NotInitialized for : getAccountLimits\");\n      return {\n        shortfall: BigNumber.from(0),\n        liquidity: BigNumber.from(0),\n        marketsIn: [],\n      };\n    }\n    const rawAccountLimits = await this.compoundLensContract.getAccountLimits(\n      comptrollerAddress,\n      account\n    );\n    const [marketsIn, liquidity, shortfall] = rawAccountLimits;\n\n    return {\n      marketsIn,\n      liquidity,\n      shortfall,\n    };\n  }\n\n  async fetchCompBalanceMetadataExt(\n    compToken: string,\n    comptrollerAddress: string,\n    account: string\n  ): Promise<TCompBalanceMetadataExt> {\n    // this.safeAddress();\n    if (!this.isInitialized()) {\n      console.log(\"NotInitialized for : fetchCompBalanceMetadataExt\");\n      return {\n        balance: BigNumber.from(0),\n        allocated: BigNumber.from(0),\n        votes: BigNumber.from(0),\n      };\n    }\n\n    console.log(`Fetching comp-balance-metadata-ext for inventive`);\n    console.log({ compToken });\n    console.log({ comptrollerAddress });\n    console.log({ account });\n\n    const rawCompBalanceMetaExt = await this.compoundLensContract.callStatic.getCompBalanceMetadataExt(\n      compToken,\n      comptrollerAddress,\n      account\n    );\n\n    return rawCompBalanceMetaExt;\n  }\n\n  private isInitialized(): boolean {\n    console.log(\n      `Compound lens contract : ${this.compoundLensContract.address}`\n    );\n    return this.compoundLensContract.address !== \"\";\n  }\n\n  private safeAddress() {\n    if (!this.isInitialized) {\n      throw new Error(`Compound lens address not initialized`);\n    }\n  }\n}\n","export const CHAIN_ID_LOCALHOST = 1337;\nexport const CHAIN_ID_HARDHAT = 31337;\nexport const CHAIN_ID_ETHEREUM_ROPSTEN = 3;\nexport const CHAIN_ID_FUSE = 122;\n\nexport type TLocalChainIds =\n  | typeof CHAIN_ID_LOCALHOST\n  | typeof CHAIN_ID_HARDHAT;\nexport type TLiveChainIds =\n  | typeof CHAIN_ID_ETHEREUM_ROPSTEN\n  | typeof CHAIN_ID_FUSE;\nexport type TChainIds = TLiveChainIds | TLocalChainIds;\n\nexport const LOCAL_CHAINS: TChainIds[] = [1337, 31337];\nexport const LIVE_CHAINS: TChainIds[] = [\n  CHAIN_ID_ETHEREUM_ROPSTEN,\n  CHAIN_ID_FUSE,\n];\n\n// DEV_NOTE : Hard-coded quick-n-dirty solution for explorer urls\nexport type TChainExplorerBaseUrls = {\n  explorerName: string;\n  baseUrl: string;\n  txUrlBase: string;\n  blockUrlBase: string;\n  addressUrlBase: string;\n};\n\nexport type TChainConstants = {\n  id: TChainIds;\n  compoundLensAddress: string;\n  explorerUrls: TChainExplorerBaseUrls;\n};\n\nexport const LIVE_CHAIN_CONSTANTS: Record<TLiveChainIds, TChainConstants> = {\n  // Ropsten\n  \"3\": {\n    compoundLensAddress: \"0xBd2c49924948E96C4BF1A915091c010524aB751a\",\n    id: 3,\n    explorerUrls: {\n      explorerName: \"Etherscan\",\n      baseUrl: \"https://ropsten.etherscan.io/\",\n      blockUrlBase: \"https://ropsten.etherscan.io/block\",\n      addressUrlBase: \"https://ropsten.etherscan.io/address\",\n      txUrlBase: \"https://ropsten.etherscan.io/tx/\",\n    },\n  },\n  // Fuse\n  \"122\": {\n    compoundLensAddress: \"0x482d0121B11F1FE7A14262471B0FcB705527Ce9d\",\n    id: 122,\n    explorerUrls: {\n      explorerName: \"Fuse explorer\",\n      baseUrl: \"https://explorer.fuse.io/\",\n      blockUrlBase: \"https://explorer.fuse.io/blocks\",\n      addressUrlBase: \"https://explorer.fuse.io/address\",\n      txUrlBase: \"https://explorer.fuse.io/tx\",\n    },\n  },\n};\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from \"mobx\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { NATIVE_COIN_DETAILS_PER_CHAIN } from \"../constants/supportedTokensPerChain\";\nimport { TErc20Meta } from \"../services/contractsIntegration/TokensLensService/ITokensLensService\";\nimport { BigNumber } from \"ethers\";\nimport ChainAddresses from \"../solidityInterfaces/addresses.json\";\nimport { CompoundLensService } from \"../services/contractsIntegration/CompoundLensService/CompoundLensService\";\nimport {\n  CHAIN_ID_ETHEREUM_ROPSTEN,\n  LIVE_CHAIN_CONSTANTS,\n  LIVE_CHAINS,\n  LOCAL_CHAINS,\n  TChainExplorerBaseUrls,\n  TChainIds,\n  TLiveChainIds,\n} from \"../constants/chainConstants\";\n\nexport type TTokenMetaWithBalance = TErc20Meta & {\n  balance: BigNumber;\n  name: string;\n  balanceInUnits: number;\n};\n\nexport type TAssetAmount = {\n  rawAmount: BigNumber;\n  amountInUnits: number;\n};\n\n// TODO : Consider splitting some properties here to a standalone 'chainStore'\nexport class SystemStore {\n  @observable public contractParametersDoneLoading = false;\n  @observable public contractParametersErrorLoading = false;\n  @observable public doneLoading = false;\n  @observable public errorLoading = false;\n\n  @observable public nativeCoinSymbol = \"ETH\";\n  @observable public nativeCoinName = \"Ether\";\n  @observable public nativeCoinDecimals = 18;\n  @observable public compoundLensAddress = \"\";\n  @observable public explorerName = \"\";\n  @observable public explorerBaseUrl = \"\";\n  @observable public explorerBaseTxUrl = \"\";\n  @observable public explorerBaseBlockUrl = \"\";\n  @observable public explorerBaseAddressUrl = \"\";\n\n  // TODO : Move tx's state to a different store\n  @observable\n  public txPending = false;\n  @observable public txHadError = false;\n  @observable public txCanceled = false;\n\n  @computed\n  public get compoundLensServiceInitialized(): boolean {\n    return this.compoundLensAddress !== \"\";\n  }\n\n  @computed\n  public get compoundLensService(): CompoundLensService {\n    if (this.compoundLensServiceInitialized) {\n      return new CompoundLensService(\n        this.compoundLensAddress,\n        this.cryptoWalletIntegrationStore.signerOrProvider\n      );\n    } else {\n      // @ts-ignore : We should always check for 'compoundLensServiceInitialized' before calling\n      return null;\n    }\n  }\n\n  private chainIdChangeReaction: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletIntegrationStore: CryptoWalletConnectionStore\n  ) {\n    this.chainIdChangeReaction = reaction(\n      () => [this.cryptoWalletIntegrationStore.chainId],\n      async ([chainId]) => {\n        this.setDoneLoading(false);\n        await this.reactToConnectedChainChanged(chainId as TChainIds);\n        this.setDoneLoading(true);\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n  }\n\n  // **** Computed values ****\n\n  // **** Contract interactions ****\n\n  // **** Current address changed ****\n\n  private async reactToConnectedChainChanged(chainId: TChainIds) {\n    console.log(`Chain ID ${chainId}`);\n    // @ts-ignore\n    console.log(\n      `Native coin ${NATIVE_COIN_DETAILS_PER_CHAIN[chainId]?.symbol}`\n    );\n\n    // Update compound lens address\n    // DEV_NOTE : This will not cause a re-render, but any call to the service will be to the right address\n    // this.compoundLensServiceInstance.updateCompoundLensAddress(\n    //   this.getChainCompoundLensAddress(chainId)\n    // );\n\n    // Compound lens address\n    const chainCompoundLensAddress = this.getChainCompoundLensAddress(chainId);\n    this.setCompoundLensAddress(chainCompoundLensAddress);\n\n    // Chain explorer urls\n    const chainExplorerBaseUrls = this.getChainExplorerUrls(chainId);\n    this.setExplorerAddresses(chainExplorerBaseUrls);\n\n    // Chain native coin\n    const nativeCoinSymbol =\n      NATIVE_COIN_DETAILS_PER_CHAIN[chainId]?.symbol || \"ETH\";\n    const nativeCoinName =\n      NATIVE_COIN_DETAILS_PER_CHAIN[chainId]?.name || \"Ether\";\n    const nativeCoinDecimals =\n      NATIVE_COIN_DETAILS_PER_CHAIN[chainId]?.decimals || 18;\n\n    // @ts-ignore\n    this.setNativeCoinDetails(\n      nativeCoinSymbol,\n      nativeCoinName,\n      nativeCoinDecimals\n    );\n  }\n\n  // **** Data reading and setting ****\n\n  // **** Read and Set ****\n\n  // ****  Subscriptions ****\n\n  private async refreshAccountListeners(accountAddress: string) {\n    this.cancelAllCurrentSubscriptions();\n  }\n\n  private cancelAllCurrentSubscriptions() {}\n\n  private getChainCompoundLensAddress(chainId: TChainIds): string {\n    console.log(`ChainId-lensAddress: ${chainId}`);\n    if (LOCAL_CHAINS.includes(chainId)) {\n      return ChainAddresses.CompoundLens;\n    } else if (LIVE_CHAINS.includes(chainId)) {\n      return LIVE_CHAIN_CONSTANTS[chainId as TLiveChainIds].compoundLensAddress;\n    } else if ((chainId as number) === -1) {\n      // DEV_NOTE : The initial value, not yet initialized.\n      return \"\";\n    } else {\n      console.error(`Unsupported chain id of ${chainId} (${typeof chainId})`);\n      return \"\";\n    }\n  }\n\n  private getChainExplorerUrls(chainId: TChainIds): TChainExplorerBaseUrls {\n    console.log(`ChainId-explorerAddress: ${chainId}`);\n    const chainExplorerBaseUrls: TChainExplorerBaseUrls = {\n      explorerName: \"\",\n      addressUrlBase: \"\",\n      baseUrl: \"\",\n      blockUrlBase: \"\",\n      txUrlBase: \"\",\n    };\n\n    if (LOCAL_CHAINS.includes(chainId)) {\n      // DEV_NOTE : WE will returns the 'ropsten' urls here for dev purposes\n      return LIVE_CHAIN_CONSTANTS[CHAIN_ID_ETHEREUM_ROPSTEN].explorerUrls;\n    } else if (LIVE_CHAINS.includes(chainId)) {\n      return LIVE_CHAIN_CONSTANTS[chainId as TLiveChainIds].explorerUrls;\n    } else if ((chainId as number) === -1) {\n      // DEV_NOTE : The initial value, not yet initialized.\n      return chainExplorerBaseUrls;\n    } else {\n      console.error(`Unsupported chain id of ${chainId} (${typeof chainId})`);\n      return chainExplorerBaseUrls;\n    }\n  }\n\n  // ****  Complex setters ****\n  private failLoadingProcess(error: Error) {\n    this.setErrorLoading(true);\n    this.setDoneLoading(true);\n  }\n\n  private resetTxIndicators() {\n    this.setTxPending(false);\n    this.setTxHadError(false);\n    this.setTxCanceled(false);\n  }\n\n  // ****  Observables setter actions ****\n  @action(\"setDoneLoading\")\n  private setDoneLoading(doneLoading: boolean) {\n    this.doneLoading = doneLoading;\n  }\n\n  @action(\"setErrorLoading\")\n  private setErrorLoading(errorLoading: boolean) {\n    this.errorLoading = errorLoading;\n  }\n\n  @action(\"setTxPending\")\n  private setTxPending(txPending: boolean) {\n    this.txPending = txPending;\n  }\n\n  @action(\"setTxCanceled\")\n  private setTxCanceled(txCanceled: boolean) {\n    this.txCanceled = txCanceled;\n  }\n\n  @action(\"setTxHadError\")\n  private setTxHadError(txHadError: boolean) {\n    this.txHadError = txHadError;\n  }\n\n  @action(\"setNativeCoinDetails\")\n  private setNativeCoinDetails(\n    nativeCoinSymbol: string,\n    nativeCoinName: string,\n    nativeCoinDecimals: number\n  ) {\n    console.log(`Native coin symbol ${nativeCoinSymbol} - ${nativeCoinName}`);\n    this.nativeCoinSymbol = nativeCoinSymbol;\n    this.nativeCoinName = nativeCoinName;\n    this.nativeCoinDecimals = nativeCoinDecimals;\n  }\n\n  @action(\"setCompoundLensAddress\")\n  private setCompoundLensAddress(compoundLensAddress: string) {\n    console.log(`Setting compoundLensAddress ${compoundLensAddress}`);\n    this.compoundLensAddress = compoundLensAddress;\n  }\n\n  @action(\"setExplorerAddresses\")\n  private setExplorerAddresses(explorerAddresses: TChainExplorerBaseUrls) {\n    console.log({ explorerAddresses });\n\n    this.explorerName = explorerAddresses.explorerName;\n    this.explorerBaseUrl = explorerAddresses.baseUrl;\n    this.explorerBaseTxUrl = explorerAddresses.txUrlBase;\n    this.explorerBaseAddressUrl = explorerAddresses.addressUrlBase;\n    this.explorerBaseBlockUrl = explorerAddresses.blockUrlBase;\n  }\n}\n","import { configure } from \"mobx\";\nimport { IStores } from \"./stores\";\n\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\n\n// This import ensures mobx batching\n// TODO : Check if still relevant to mobx6\n// import \"mobx-react-lite/batchingForReactDom\";\nimport { ICryptoWalletConnectionService } from \"../services/cryptoWalletConnectionService/ICryptoWalletConnectionService\";\nimport { ILendingNetworksService } from \"../services/lendingNetworksService/ILendingNetworksService\";\nimport { AccountStore } from \"./AccountStore\";\nimport { LendingNetworksStore } from \"./LendingNetworksStore\";\nimport { ModalsStore } from \"./ModalsStore\";\nimport { IErc20BuilderService } from \"../services/contractsIntegration/erc20Service/IErc20BuilderService\";\nimport { ICTokensBuilderService } from \"../services/contractsIntegration/cTokensService/ICTokensBuilderService\";\nimport { SystemStore } from \"./SystemStore\";\n\n/**\n * Builds and initializes all of the stores\n */\nexport function getStores(\n  cryptoWalletConnectionService: ICryptoWalletConnectionService,\n  lendingNetworksService: ILendingNetworksService,\n  erc20BuilderService: IErc20BuilderService,\n  cTokensBuilderService: ICTokensBuilderService\n): IStores {\n  // Create stores instances + Hydrate the stores\n  const cryptoWalletIntegrationStore = new CryptoWalletConnectionStore(\n    cryptoWalletConnectionService\n  );\n\n  const systemStore = new SystemStore(cryptoWalletIntegrationStore);\n\n  const lendingNetworksStore = new LendingNetworksStore(\n    cryptoWalletIntegrationStore,\n    systemStore,\n    lendingNetworksService\n  );\n\n  const accountStore = new AccountStore(\n    cryptoWalletIntegrationStore,\n    systemStore,\n    lendingNetworksStore,\n    erc20BuilderService,\n    cTokensBuilderService\n  );\n\n  const stores: IStores = {\n    cryptoWalletIntegrationStore,\n    accountStore,\n    lendingNetworksStore,\n    systemStore,\n    modalsStore: new ModalsStore(),\n  };\n\n  return stores;\n}\n\n// TODO : Check if this is still relevant to mobx6\n/**\n * Configures the mobx library. Should get called at App's initialization.\n */\nexport function configureMobx() {\n  configure({\n    enforceActions: \"observed\",\n  });\n}\n","import { StylesProvider, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport { App } from \"./App\";\nimport { baseTheme } from \"./theme/Theme\";\nimport { buildLNServices, buildServices } from \"./services/Services\";\nimport { configureMobx, getStores } from \"./store/storesInitialization\";\nimport { Provider } from \"mobx-react\";\nimport { ZERO_ADDRESS } from \"./constants/constantAddresses\";\n\ninterface IProps {}\n\nconfigureMobx();\n\n// TODO : Move this to a better place\nconst ethereumProvider = (window as any).ethereum;\nconst services = buildServices(ethereumProvider);\nconst lnServices = buildLNServices(ethereumProvider, {\n  unitrollerAddress: ZERO_ADDRESS,\n});\n// process.env.NODE_ENV === \"production\"\n//   ? buildServices(ethereumProvider)\n//   : buildMockServices(ethereumProvider);\nconst stores = getStores(\n  services.cryptoWalletIntegrationService,\n  services.lendingNetworksService,\n  services.erc20ServiceBuilder,\n  services.cTokenServiceBuilder\n);\n\nexport const AppWrapper = React.memo<IProps>((props) => {\n  return (\n    <Provider {...stores} {...services} {...lnServices}>\n      <StylesProvider injectFirst>\n        <ThemeProvider theme={baseTheme}>\n          <App />\n        </ThemeProvider>\n      </StylesProvider>\n    </Provider>\n  );\n});\n","import { ICryptoWalletConnectionService } from \"./cryptoWalletConnectionService/ICryptoWalletConnectionService\";\nimport { IEthereumProvider } from \"./cryptoWalletConnectionService/IEthereumProvider\";\nimport { CryptoWalletConnectionService } from \"./cryptoWalletConnectionService/CryptoWalletConnectionService\";\nimport { ILendingNetworksService } from \"./lendingNetworksService/ILendingNetworksService\";\nimport { LendingNetworksService } from \"./lendingNetworksService/LendingNetworksService\";\nimport { UniswapAnchoredViewService } from \"./contractsIntegration/UniswapAnchoredView/UniswapAnchoredViewService\";\n\nimport contractsAddresses from \"../solidityInterfaces/addresses.json\";\nimport { getSignerOrProvider } from \"../ethereumConnection/ethereumConnection\";\nimport { IComptrollerService } from \"./contractsIntegration/ComptrollerService/IComptrollerService\";\nimport { ComptrollerService } from \"./contractsIntegration/ComptrollerService/ComptrollerService\";\nimport { IErc20BuilderService } from \"./contractsIntegration/erc20Service/IErc20BuilderService\";\nimport { Erc20BuilderService } from \"./contractsIntegration/erc20Service/Erc20BuilderService\";\nimport { ICTokensBuilderService } from \"./contractsIntegration/cTokensService/ICTokensBuilderService\";\nimport { CTokensBuilderService } from \"./contractsIntegration/cTokensService/CTokensBuilderService\";\n\nexport interface IServices {\n  cryptoWalletIntegrationService: ICryptoWalletConnectionService;\n  lendingNetworksService: ILendingNetworksService;\n  // DEV_NOTE : Seems no one is using this service\n  uniswapAnchoredViewService: UniswapAnchoredViewService;\n\n  // Service builders\n  erc20ServiceBuilder: IErc20BuilderService;\n  cTokenServiceBuilder: ICTokensBuilderService;\n}\n\nexport type TLNContractsAddresses = {\n  unitrollerAddress: string;\n};\n\n/**\n * Services that are LN specific and should be refreshed/replaced when switching a LN.\n */\nexport interface ILNServices {\n  comptrollerLiveService: IComptrollerService;\n}\n\n// DEV_NOTE : For simplicity of early stage dev, we assume that we have ethereum provider, if not, we will not initialize the services.\nexport function buildServices(ethereumProvider: IEthereumProvider): IServices {\n  const signerOrProvider = getSignerOrProvider(ethereumProvider);\n  const addresses = getContractsAddresses();\n\n  return {\n    cryptoWalletIntegrationService: new CryptoWalletConnectionService(\n      ethereumProvider\n    ),\n    lendingNetworksService: new LendingNetworksService(),\n    uniswapAnchoredViewService: new UniswapAnchoredViewService(\n      addresses.UniswapAnchoredView,\n      signerOrProvider\n    ),\n\n    // Service builders\n    erc20ServiceBuilder: new Erc20BuilderService(signerOrProvider),\n    cTokenServiceBuilder: new CTokensBuilderService(signerOrProvider),\n  };\n}\n\n// DEV_NOTE : For simplicity of early stage dev, we assume that we have ethereum provider, if not, we will not initialize the services.\nexport function buildLNServices(\n  ethereumProvider: IEthereumProvider,\n  contractsAddresses: TLNContractsAddresses\n): ILNServices {\n  const signerOrProvider = getSignerOrProvider(ethereumProvider);\n\n  return {\n    comptrollerLiveService: new ComptrollerService(\n      contractsAddresses.unitrollerAddress,\n      signerOrProvider\n    ),\n  };\n}\n\n// export function buildMockServices(\n//   ethereumProvider: IEthereumProvider\n// ): IServices {\n//   const signerOrProvider = getSignerOrProvider(ethereumProvider);\n//   const addresses = getContractsAddresses();\n//\n//   return {\n//     cryptoWalletIntegrationService: new CryptoWalletConnectionService(\n//       ethereumProvider\n//     ),\n//     lendingNetworksService: new LendingNetworksServiceMock(),\n//     uniswapAnchoredViewService: new UniswapAnchoredViewService(\n//       addresses.UniswapAnchoredView,\n//       signerOrProvider\n//     ),\n//     tokensLensService: new\n//   };\n// }\n\n// TODO : Add addresses by network\nexport function getContractsAddresses() {\n  return contractsAddresses;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppWrapper } from \"./AppWrapper\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}